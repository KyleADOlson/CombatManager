<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:CombatManager" xmlns:compModel="clr-namespace:System.ComponentModel;assembly=WindowsBase" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" xmlns:AvalonDock="clr-namespace:AvalonDock;assembly=AvalonDock" x:Class="CombatManager.MainWindow"
    Height="620.5" Width="856.5" mc:Ignorable="d" Background="{x:Null}" Style="{DynamicResource WindowStyle1}" Icon="/Images/d20-32.ico" MouseDoubleClick="Window_MouseDoubleClick" MinWidth="780" MinHeight="400" Closed="Window_Closed" x:Name="CombatManagerWindow" SizeChanged="CombatManagerWindow_SizeChanged" LocationChanged="CombatManagerWindow_LocationChanged" SourceInitialized="win_SourceInitialized" WindowStyle="None" ResizeMode="CanResizeWithGrip" AllowsTransparency="True">
    <Window.Resources>


        <Style x:Key="ThumbStyle1" TargetType="{x:Type Thumb}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <Grid Background="{DynamicResource SecondaryColorBDarkerBrush}">

                                <Path Data="M1,4L4,1 7,4" Width="8" Height="5" Stroke="White" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>


                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ButtonNormalBackground" Color="{DynamicResource PrimaryColorLighter}">

        </SolidColorBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        <Style x:Key="ComboBoxFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
        <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true">
                            <Grid HorizontalAlignment="Right" Width="10" d:LayoutOverrides="HorizontalAlignment">
                                <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center" d:LayoutOverrides="Width"/>
                            </Grid>
                        </Microsoft_Windows_Themes:ButtonChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
            <GradientStop Color="#ABADB3" Offset="0.05"/>
            <GradientStop Color="#E2E3EA" Offset="0.07"/>
            <GradientStop Color="#E3E9EF" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RoundCorners="false" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center"/>
                        </Microsoft_Windows_Themes:ButtonChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ToolTip x:Key="ConditionToolTip" StaysOpen="True">
            <Grid Width="400">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding InitiativeCount.Text}" TextWrapping="Wrap" Grid.Row="0" FontSize="12" Visibility="{Binding Source={x:Static local:UserSettings.Settings}, Path=ShowHiddenInitValue, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>
                <TextBlock Text="{Binding Condition.Name}" TextWrapping="Wrap" Grid.Row="1" FontWeight="Bold" FontSize="16"/>
                <TextBlock Text="{Binding Condition.Text}" Visibility="{Binding Condition.Text, Converter={StaticResource NotNullVisibilityCollapsedConverter}}"  TextWrapping="Wrap" Grid.Row="2"/>
                <FlowDocumentScrollViewer x:Name="ConditionToolTipDocument" Grid.Row="2" Grid.RowSpan="1" Visibility="{Binding Condition.Spell, Converter={StaticResource NotNullVisibilityCollapsedConverter}}" VerticalScrollBarVisibility="Disabled"  DataContextChanged="FlowDocument_OnDataContextChanged">
                    <FlowDocument PagePadding="0"/>
                </FlowDocumentScrollViewer>
                <FlowDocumentScrollViewer x:Name="AfflictionToolTipDocument" Grid.Row="2" Grid.RowSpan="1" Visibility="{Binding Condition.Affliction, Converter={StaticResource NotNullVisibilityCollapsedConverter}}" VerticalScrollBarVisibility="Disabled"  DataContextChanged="AfflictionFlowDocument_OnDataContextChanged" FontSize="9" FontFamily="/CombatManager;component/Fonts/#Segoe UI">
                    <FlowDocument PagePadding="0"/>
                </FlowDocumentScrollViewer>
            </Grid>
        </ToolTip>
        <ToolTip x:Key="ObjectToolTip" StaysOpen="True">
            <Grid Width="400">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Rectangle Margin="0,3,0,0" Grid.Row="0" Grid.Column="0"  Fill="{DynamicResource PrimaryColorDarkerBrush}"/>
                <TextBlock Margin="3,3,3,0" Text="{Binding Name}" TextWrapping="Wrap" Grid.Row="0" Foreground="White" FontWeight="Bold" FontSize="16"/>
                <FlowDocumentScrollViewer Margin="0,3,0,0" x:Name="ObjectToolTipDocument" Grid.Row="1" Grid.RowSpan="1" VerticalScrollBarVisibility="Disabled"  DataContextChanged="ObjectToolTipFlowDocument_OnDataContextChanged">
                    <FlowDocument PagePadding="0" FontFamily="/CombatManager;component/Fonts/#Segoe UI" FontSize="12" />
                </FlowDocumentScrollViewer>
            </Grid>
        </ToolTip>
        <Style x:Key="SplitterRectangle" TargetType="{x:Type Rectangle}">
            <Setter Property="Fill" Value="{DynamicResource PrimaryColorGradientBrush}"/>
            <Setter Property="Stroke" Value="White"/>
            <Setter Property="StrokeThickness" Value="2"/>
        </Style>
        <Style x:Key="AfflictionPlayerItem">
            <Setter Property="HeaderedItemsControl.Header" Value="{Binding Name}" />
            <EventSetter Event="MenuItem.Click" Handler="AfflictionPlayerItem_Click"/>
        </Style>
        <Style x:Key="AfflictionMenuItemStyle">
            <Setter Property="HeaderedItemsControl.Header" Value="{Binding Condition.Name}" />
            <Setter Property="MenuItem.Icon" Value="{Binding Condition.Image, Converter={StaticResource StringImageConverter}}" />
            <Setter Property="ItemsControl.ItemsSource" Value="{Binding Targets}"/>
            <Setter Property="ItemsControl.ItemContainerStyle" Value="{StaticResource AfflictionPlayerItem}"/>

        </Style>
        <Style x:Key="InitiativeMenuItemStyle">
            <Setter Property="HeaderedItemsControl.Header" Value="{Binding Leader.Name}" />
            <EventSetter Event="MenuItem.Click" Handler="InitiativeLinkMenuItem_Click"/>
        </Style>
        <ContextMenu x:Key="CharacterContextMenu" IsVisibleChanged="ContextMenu_IsVisibleChanged">
            <MenuItem x:Name="EditMenuItem" Header="Edit">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/pencil-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>
                <MenuItem Header="Attacks..." Click="MenuItem_EditAttacks">
                    <MenuItem.Icon>
                        <Image Source="/CombatManager;component/Images/sword-16.png" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Feats..." Click="MenuItem_EditFeats">
                    <MenuItem.Icon>
                        <Image Source="/CombatManager;component/Images/star-16.png" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Monster Editor..." Click="MenuItem_EditMonster">
                    <MenuItem.Icon>
                        <Image Source="/CombatManager;component/Images/monster-16.png" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator></Separator>
                <MenuItem Header="Copy to Custom Monsters" Click="MenuItem_AddToCustomMonsters">
                    <MenuItem.Icon>
                        <Image Source="/CombatManager;component/Images/import-16.png" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Idle Character" Click="MenuItem_IdleMonster" ToolTip="Idle characters are not included in combat" Visibility="{Binding IsIdle, ConverterParameter=true, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/zzz-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Wake Up Character" Click="MenuItem_IdleMonster" ToolTip="Idle characters are not included in combat" Visibility="{Binding IsIdle, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/zzz-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>

            <MenuItem Header="Hide Character" Click="MenuItem_HideMonster" ToolTip="Hidden characters do appear in the popup initiative window" Visibility="{Binding IsHidden, ConverterParameter=true, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/blind-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>

            <MenuItem Header="Unhide Character" Click="MenuItem_HideMonster" ToolTip="Hidden characters do appear in the popup initiative window" Visibility="{Binding IsHidden, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/blind-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>

            <Separator/>
            <MenuItem x:Name="AddConditionMenuItem" Header="Add Condition" IsVisibleChanged="FavoritesMenuItem_IsVisibleChanged" >
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/clock-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Damage/Heal..." x:Name="DamageHealMenuItem" Click="DamageHealMenuItem_Click">
                <MenuItem.Icon>
                    <Path Data="M3,0 L6,0 L6,3 L9,3 L9,6 L6,6 L6,9 L3,9 L3,6 L0,6 L0,3 L3,3 z" HorizontalAlignment="Center" StrokeStartLineCap="Round" Stretch="Fill" StrokeEndLineCap="Round" Width="15" Height="15" Stroke="DimGray" Fill="#FFDE4747" VerticalAlignment="Center"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Apply Affliction" ItemContainerStyle="{StaticResource AfflictionMenuItemStyle}" IsVisibleChanged="MenuItem_IsVisibleChanged" DataContextChanged="AfflictionMenuItem_DataContextChanged">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/lightning-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Notes" x:Name="NotesMenuItem" Click="NotesMenuItem_Click">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/NoteHS.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Color">
                <MenuItem Header="None" x:Name="NoColorMenuItem" Click="ColorMenuItem_Click">
                </MenuItem>
                <MenuItem Header="Red" x:Name="RedColorMenuItem" Click="ColorMenuItem_Click">
                </MenuItem>
                <MenuItem Header="Blue" x:Name="BlueColorMenuItem" Click="ColorMenuItem_Click">
                </MenuItem>
                <MenuItem Header="Green" x:Name="GreenColorMenuItem" Click="ColorMenuItem_Click">
                </MenuItem>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Roll">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/d20-32.ico" Width="16" Height="16"/>
                </MenuItem.Icon>
                <MenuItem x:Name="RollAttacksMenuItem" Header="Attacks" DataContextChanged="RollAttacksMenuItem_DataContextChanged" IsVisibleChanged="RollAttacksMenuItem_IsVisibleChanged" />
                <MenuItem Header="Save">
                    <MenuItem Header="Fortitude" x:Name="FortitudeMenuItem" Click="FortitudeMenuItem_Click" />
                    <MenuItem Header="Reflex" x:Name="ReflexMenuItem" Click="ReflexMenuItem_Click" />
                    <MenuItem Header="Will" x:Name="WillMenuItem" Click="WillMenuItem_Click" />
                </MenuItem>
                <MenuItem x:Name="RollSkillMenuItem" Header="Skill" Loaded="RollSkillMenuItem_Loaded" DataContextChanged="RollSkillMenuItem_DataContextChanged"/>
                <MenuItem x:Name="RollCMBMenuItem" Header="Combat Maneuver" Loaded="RollCombatManeuverMenuItem_Loaded" DataContextChanged="RollManeuverMenuItem_DataContextChanged"></MenuItem>
                <MenuItem x:Name="RollAbilityMenuItem" Header="Ability Check" Loaded="RollAbilityCheckMenuItem_Loaded"></MenuItem>
            </MenuItem>
            <MenuItem Header="Initiative &amp; Groups">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/sort-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>
                <MenuItem x:Name="RollInitiativeMenuItem" Header="Roll Initiative" Click="RollInitiativeMenuItem_Click">
                    <MenuItem.Icon>
                        <Image Source="/CombatManager;component/Images/d20-32.ico" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="InitiativeMenuItem" Header="Link Initiative (Group With)" 
            		ItemContainerStyle="{StaticResource InitiativeMenuItemStyle}" 
            		IsVisibleChanged="InitiativeMenuItem_IsVisibleChanged" DataContextChanged="InitiativeMenuItem_DataContextChanged"
                      >
                    <MenuItem.Icon>
                        <Image Source="/CombatManager;component/Images/link-16.png" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="UnlinkMenuItem" Header="Unlink Initiative" Click="MenuItem_Unlink">
                    <MenuItem.Icon>
                        <Image Source="/CombatManager;component/Images/link-16.png" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="GroupAllSelectedMenuItem" Header="Group All Selected Characters" Click="MenuItem_GroupAllSelected"
                      >
                    <MenuItem.Icon>
                        <Image Source="/CombatManager;component/Images/link-16.png" Width="16" Height="16"/>
                    </MenuItem.Icon>
                </MenuItem>


            </MenuItem>
            <MenuItem Header="Clone" Click="MenuItem_Clone">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/clone-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Move to Party" Click="MenuItem_MoveToParty"  Visibility="{Binding IsMonster, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/prev-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Move to Monsters" Click="MenuItem_MoveToMonsters" Visibility="{Binding IsMonster, ConverterParameter=true, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/next-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Delete" Click="MenuItem_Delete">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/delete-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem x:Name="DelayMenuItem" Header="Delay" IsEnabled="{Binding IsNotReadyingOrDelaying}" Click="DelayMenuItem_Click">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/hourglass-16.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="ReadyMenuItem" Header="Ready" IsEnabled="{Binding IsNotReadyingOrDelaying}" Click="ReadyMenuItem_Click">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/target-16.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="ClearDelayReadyMenuItem" Header="Clear"  IsEnabled="{Binding IsNotReadyingOrDelaying, Converter={StaticResource boolInverter}}" Click="ClearDelayReadyMenuItem_Click" />
            <MenuItem x:Name="ActNowMenuItem" Header="Act Now"  Click="ActNowMenuItem_Click" />
            <MenuItem x:Name="ReloadMenuItem" Header="Reload from Source" Visibility="{Binding OriginalFilename, Converter={StaticResource NotNullVisibilityCollapsedConverter}}" Click="ReloadMenuItem_Click">

                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/reset-16.png" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
        <ContextMenu x:Key="ConditionContextMenu" IsVisibleChanged="ConditionContextMenu_IsVisibleChanged">

            <MenuItem x:Name="StabalizeMenuItem" Header="Stabalize" Click="ConditionMenuItem_Stabalize">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/stable-16.png" />
                </MenuItem.Icon>
            </MenuItem>

            <MenuItem Header="Add 5 Turns" Click="ConditionMenuItem_Add5Turns">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/arrowsup-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Add Turn" Click="ConditionMenuItem_AddTurn">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/arrowup-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Remove Turn" Click="ConditionMenuItem_RemoveTurn"  IsEnabled="{Binding Turns, Converter={StaticResource itemExistsConverter}}">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/arrowdown-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Remove 5 Turns" Click="ConditionMenuItem_Remove5Turns"  IsEnabled="{Binding Turns, Converter={StaticResource itemExistsConverter}}">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/arrowsdown-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Delete" Click="ConditionMenuItem_Delete">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/delete-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Delete From All Characters" Click="ConditionMenuItem_DeleteFromAll"/>
        </ContextMenu>
        <ContextMenu x:Key="MainMenu">
            <MenuItem Header="Load Combat State" x:Name="LoadCombatStateMenuItem" Click="LoadCombatStateMenuItem_Click">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/openHS.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Save Combat State" x:Name="SaveCombatStateMenuItem" Click="SaveCombatStateMenuItem_Click">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/saveHS.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Import Custom Data" x:Name="ImportDataMenuItem" Click="ImportDataMenuItem_Click">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/openHS.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Export Custom Data" x:Name="ExportDataMenuItem" Click="ExportDataMenuItem_Click">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/saveHS.png" Width="16" Height="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Show Initiative Window" x:Name="InitiativeWindowMenuItem"  Click="InitiativeWindowMenuItem_Click">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/screen-16.png" Width="16" Height="16"/>
                </MenuItem.Icon>

            </MenuItem>
            <Separator/>
            <MenuItem Header="Run Local Web Services" x:Name="LocalServiceMenuItem" Click="LocalServiceMenuItem_Click"
                    Loaded="LocalServiceMenuItem_Loaded"/>

            <Separator/>
            <MenuItem Header="Restore Combat Tab Layout" x:Name="RestoreMenuItem" Click="RestoreMenuItem_Click"/>
            <Separator/>
            <MenuItem Header="Exit" x:Name="CloseMenuItem" Click="CloseMenuItem_Click"/>
        </ContextMenu>
        <ContextMenu x:Key="InitiativeButtonContextMenu" >

            <MenuItem x:Name="RollInitWithoutResetMenuItem" Header="Roll Initiative Without Changing Round" Click="RollInitWithoutResetMenuItem_Click">

            </MenuItem>
            <MenuItem x:Name="RollInitWithoutSortMenuItem" Header="Roll Initiative Without Sorting" Click="RollInitWithoutSortMenuItem_Click">

            </MenuItem>
            <MenuItem x:Name="RollInitWithoutResetSortMenuItem" Header="Roll Initiative Without Changing Round or Sorting" Click="RollInitWithoutResetSortMenuItem_Click">

            </MenuItem>
        </ContextMenu>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="Placement" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}">
                        <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Microsoft_Windows_Themes:SystemDropShadowChrome>
                </Popup>
                <Microsoft_Windows_Themes:ListBoxChrome x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"/>
                <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsDropDownOpen" Value="true">
                    <Setter Property="RenderFocused" TargetName="Border" Value="true"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    <Setter Property="Background" Value="#FFF4F4F4"/>
                </Trigger>
                <Trigger Property="IsGrouping" Value="true">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{DynamicResource ComboBoxFocusVisual}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="4,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition MinWidth="12" Width="12"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                    <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Microsoft_Windows_Themes:SystemDropShadowChrome>
                            </Popup>
                            <ToggleButton BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}"/>
                            <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                <Setter Property="Background" Value="#FFF4F4F4"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="3"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <LinearGradientBrush x:Key="ResizeGripperForeground" EndPoint="1,0.75" StartPoint="0,0.25">
            <GradientStop Color="#FFFFFF" Offset="0.3"/>
            <GradientStop Color="#BBC5D7" Offset="0.75"/>
            <GradientStop Color="#6D83A9" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="TabItemSelectedMouseOverBackground" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource SecondaryColorBDarker}" Offset="0.964"/>
            <GradientStop Color="{DynamicResource SecondaryColorBMedium}" Offset="0.389"/>
            <GradientStop Color="{DynamicResource SecondaryColorBDark}" Offset="0.553"/>
            <GradientStop Color="{DynamicResource SecondaryColorBLighter}"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItemSelectedBackground"  Color="{DynamicResource PrimaryColorDarker}"/>

        <LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#EAF6FD" Offset="0.15"/>
            <GradientStop Color="#D9F0FC" Offset=".5"/>
            <GradientStop Color="#BEE6FD" Offset=".5"/>
            <GradientStop Color="#A7D9F5" Offset="1"/>
        </LinearGradientBrush>
        <DataTemplate x:Key="CharacterDataTemplate">
            <DataTemplate.Resources>
                <Storyboard x:Key="OnClick1"/>
                <Storyboard x:Key="OnClick2">
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Popup.IsOpen)" Storyboard.TargetName="popup">
                        <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                    </BooleanAnimationUsingKeyFrames>
                </Storyboard>
            </DataTemplate.Resources>
            <Grid x:Name="CharacterGrid" Width="Auto" Height="Auto" ContextMenu="{StaticResource CharacterContextMenu}" d:DesignWidth="206.586">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="29.969"/>
                    <RowDefinition Height="Auto" MinHeight="29"/>
                    <RowDefinition Height="Auto" MinHeight="0"/>
                    <RowDefinition Height="Auto" MinHeight="0"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle Grid.ColumnSpan="2" Fill="{Binding Color, Converter={StaticResource nullableUintToBrushConverter}}" Margin="1" RadiusY="5" RadiusX="5" StrokeThickness="1" StrokeLineJoin="Round" Grid.RowSpan="2"/>
                <Grid Grid.ColumnSpan="8" Margin="1,0,1,0.375" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="47.753"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="1" Margin="0" Grid.Row="0" HorizontalAlignment="Stretch" CornerRadius="0" BorderThickness="1" Grid.RowSpan="2">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource SecondaryColorADarker}"/>
                        </Border.BorderBrush>
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource SecondaryColorADark}"/>
                        </Border.Background>
                    </Border>
                    <Button x:Name="HPButton" Grid.ColumnSpan="1" Content="HP" Grid.Column="0" Margin="2.218,2.991,0,3.438" Grid.Row="0" FontWeight="Bold" GotKeyboardFocus="TextBox_GotKeyboardFocus" HorizontalAlignment="Left" Style="{DynamicResource ButtonSecondaryStyle}" Click="HPButton_Click"/>
                    <TextBox x:Name="HPTextBox" Text="{Binding Adjuster.HP, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="25.282,2.991,0,3.438" VerticalAlignment="Stretch" Height="Auto" Grid.Row="0" RenderTransformOrigin="1.739,0.365" Grid.Column="0" GotFocus="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotKeyboardFocus" ToolTip="Hit Points        Select and Press Enter to Adjust" KeyUp="TextBox_KeyUp" Width="30" Padding="0,1" Tag="HP" />

                    <Thumb x:Name="HPUpThumb" Grid.ColumnSpan="1" Grid.Column="0" Margin="56.67,3.917,0,13.531" Grid.Row="0" Grid.RowSpan="1" Height="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Left" Width="13.991" DragStarted="HPThumb_DragStarted" DragDelta="HPThumb_DragDelta" DragCompleted="HPThumb_DragCompleted" Style="{DynamicResource ThumbStyle1}"/>
                    <Thumb x:Name="HPDownThumb" Grid.ColumnSpan="1" Grid.Column="0" Margin="56.67,14.5,0,3.438" Grid.Row="0" Grid.RowSpan="1" Height="Auto" VerticalAlignment="Stretch" DragStarted="HPThumb_DragStarted" DragDelta="HPThumb_DragDelta" DragCompleted="HPThumb_DragCompleted" Style="{DynamicResource ThumbStyle2}" HorizontalAlignment="Left" Width="13.991"/>
                    <TextBlock Grid.Column="0" Margin="73.983,6.109,0,5.962" Grid.Row="0" TextWrapping="Wrap" HorizontalAlignment="Left" Width="Auto" Text="Max" VerticalAlignment="Center" FontWeight="Bold" Foreground="{DynamicResource TextOnSecondaryADarkerBrush}" FontSize="12"/>
                    <TextBox Margin="101.3,3.917,0,3.106" VerticalAlignment="Stretch" Height="21.602" RenderTransformOrigin="2.172,0.865" Grid.Column="0" GotFocus="TextBox_GotFocus" IsKeyboardFocusedChanged="TextBox_IsKeyboardFocusedChanged" Grid.Row="0" Grid.ColumnSpan="1" Width="30" HorizontalAlignment="Left" GotKeyboardFocus="TextBox_GotKeyboardFocus" ToolTip="Maximum Hit Points" Text="{Binding MaxHP, UpdateSourceTrigger=PropertyChanged}" />
                    <Button x:Name="ConditionsBox" Grid.Column="1" Grid.Row="0" RenderTransformOrigin="0.5,0.5" ToolTip="Actions" Width="Auto" Height="22" GotKeyboardFocus="TextBox_GotKeyboardFocus" HorizontalAlignment="Stretch" Margin="2.353,3,23.4,3.625" Click="ConditionsBox_Click">
                        <Grid Width="16" Height="16">
                            <Image Source="Images/d20-16.png" HorizontalAlignment="Center" VerticalAlignment="Center" Height="16" Width="16"/>

                        </Grid>
                    </Button>
                    <ToggleButton x:Name="StatsCheckBox" Grid.Column="1" Margin="0,3.328,-0.6,3.297" Grid.Row="0" RenderTransformOrigin="0.5,0.5" Style="{DynamicResource ToggleButtonStyle1}" ToolTip="Stats" Width="22" Height="22" GotKeyboardFocus="TextBox_GotKeyboardFocus" HorizontalAlignment="Right" IsChecked="False" Loaded="StatsCheckBox_Loaded">
                        <Grid Width="16" Height="16">
                            <Image Source="Images\Sheet.png" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                        </Grid>
                    </ToggleButton>
                    <ToggleButton x:Name="ConditionsMoreToggle_Copy" Margin="0,5.668,4.601,4.957" Grid.Row="0" Width="18" IsChecked="{Binding IsOtherHPOpen}" HorizontalAlignment="Right" ToolTip="More HP">
                        <Path x:Name="path1" Data="M1,1L4,4 7,1" Width="8" Height="5" Stroke="Black" StrokeStartLineCap="Round" StrokeEndLineCap="Round" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </ToggleButton>
                    <Grid x:Name="OtherHPGrid" Grid.Row="1" Height="26" Visibility="{Binding IsOtherHPOpen, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                        <TextBox x:Name="TempTextBox" HorizontalAlignment="Left" Margin="35.782,0.75,0,3.054" Grid.Row="0" RenderTransformOrigin="1.739,0.365" Grid.Column="0" GotFocus="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotKeyboardFocus" ToolTip="Temporary Hit Points" Width="26.562" Padding="0,1" Text="{Binding Adjuster.TemporaryHP, Converter={StaticResource HPModConverter}, UpdateSourceTrigger=PropertyChanged}"  KeyUp="TextBox_KeyUp" Tag="Temp" />
                        <TextBox x:Name="NLTextBox" Text="{Binding Adjuster.NonlethalDamage, Converter={StaticResource HPModConverter}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="126.032,0.75,0,3.054" Grid.Row="0" RenderTransformOrigin="1.739,0.365" Grid.Column="0" GotFocus="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotKeyboardFocus" ToolTip="Nonlethal Damage" Width="26.562" Padding="0,1"  KeyUp="TextBox_KeyUp" Tag="NL" />
                        <TextBlock Grid.Column="0" Grid.Row="0" TextWrapping="Wrap" HorizontalAlignment="Left" Width="Auto" Text="Temp" FontWeight="Normal" Foreground="{DynamicResource TextOnSecondaryADarkerBrush}" FontSize="12" d:LayoutOverrides="HorizontalAlignment" VerticalAlignment="Top" Margin="2.578,3.75,0,0"/>
                        <TextBlock Grid.Column="0" Grid.Row="0" TextWrapping="Wrap" HorizontalAlignment="Left" Width="Auto" Text="Nonlethal" FontWeight="Normal" Foreground="{DynamicResource TextOnSecondaryADarkerBrush}" FontSize="12" VerticalAlignment="Top" Margin="64.594,3.75,0,0"/>
                    </Grid>
                </Grid>
                <local:NotesPopup x:Name="NotesPopup"/>
                <Grid Grid.ColumnSpan="8" Margin="1,0,3.792,0">
                    <Grid Grid.ColumnSpan="1" Margin="0,0,74.793,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" HorizontalAlignment="Left" Orientation="Horizontal" d:LayoutOverrides="Height" VerticalAlignment="Center">
                            <Image x:Name="image" Source="images\lock-16.png" HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="0"
            					Visibility="{Binding InitiativeLeader, Converter={StaticResource NotNullVisibilityCollapsedConverter}}" Width="16" Height="16"/>
                            <Image x:Name="HiddenImage" Source="images\blind-16.png" HorizontalAlignment="Left" VerticalAlignment="Stretch" Height="16" Margin="0"
            					Visibility="{Binding IsHidden, Converter={StaticResource BoolToVisibilityCollapsedConverter}}" Width="16" ToolTip="Hidden"/>
                            <Image x:Name="IdleImage" Source="images\zzz-16.png" HorizontalAlignment="Left" VerticalAlignment="Stretch" Height="16" Margin="0"
            					Visibility="{Binding IsIdle, Converter={StaticResource BoolToVisibilityCollapsedConverter}}" Width="16" ToolTip="Idle"/>
                        </StackPanel>
                        <TextBox Grid.Column="1" x:Name="NameTextBox" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch" Margin="3.168,5,8,3.04" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Grid.ColumnSpan="1" GotKeyboardFocus="TextBox_GotKeyboardFocus" ToolTip="Name" d:LayoutOverrides="GridBox" GotFocus="NameTextBox_GotFocus" Initialized="NameTextBox_Initialized" SizeChanged="NameTextBox_SizeChanged" />
                    </Grid>

                    <Button x:Name="DeleteButton" Margin="0,8,0,5.969" RenderTransformOrigin="0.222,-0.601" Grid.Column="0" Click="DeleteButton_Click" Width="16" Height="16" Grid.Row="0" Grid.ColumnSpan="1" GotKeyboardFocus="TextBox_GotKeyboardFocus" Style="{DynamicResource ButtonSecondaryStyle}" HorizontalAlignment="Right" d:LayoutOverrides="Width">
                        <Button.ToolTip>Delete</Button.ToolTip>
                        <Path Data="M1,1 L7,7 M7,1 L1,7" Width="8" Height="8" Stroke="White" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                    </Button>
                    <TextBlock HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="Auto" Grid.Column="0" Text="Mod" TextWrapping="Wrap" ToolTip="Initiative Modifier" Grid.ColumnSpan="1" Margin="0,8.04,48.793,5.969" FontWeight="Bold" Foreground="{DynamicResource TextOnPrimaryDarkerBrush}"/>
                    <TextBox Text="{Binding Stats.Init, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" Margin="0,5,20.498,3.04" VerticalAlignment="Stretch" Height="Auto" RenderTransformOrigin="2.172,0.865" Grid.Column="0" GotFocus="TextBox_GotFocus" IsKeyboardFocusedChanged="TextBox_IsKeyboardFocusedChanged" GotKeyboardFocus="TextBox_GotKeyboardFocus" ToolTip="Initiative Modifier" Width="26.168" />
                </Grid>
                <Popup x:Name="popup" Placement="Bottom" StaysOpen="False" PlacementTarget="{Binding ElementName=HPButton}" AllowsTransparency="True">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="33"/>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Rectangle RadiusX="6" RadiusY="6" Stroke="White" Grid.Column="0" Grid.ColumnSpan="3">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <TextBox x:Name="textBox" Width="30" VerticalAlignment="Center" HorizontalAlignment="Left" Height="20" Margin="6,3,0,3" Text="" KeyUp="textBox_KeyUp" TextChanged="textBox_TextChanged" IsVisibleChanged="textBox_IsVisibleChanged" />
                        <Button Width="16" Height="16" Grid.Column="1" Margin="3,3,0,3" Background="{DynamicResource characterButtonBrush}" VerticalAlignment="Center" x:Name="SubractHPButton" Click="SubractHPButton_Click" FontWeight="Bold" FontSize="13.333" >

                            <Path Data="M 1,4 7,4 " Width="8" Height="8" Stroke="Black" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                        </Button>
                        <Button Width="16" Height="16" Grid.Column="2" Margin="0,3,3,3" Background="{DynamicResource characterButtonBrush}" VerticalAlignment="Center" x:Name="AddHPButton" Click="AddHPButton_Click" FontWeight="Bold" FontSize="13.333" >

                            <Path Data="M 1,4 L 7,4 M4,1 L4,7" Width="8" Height="8" Stroke="Black" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                        </Button>
                    </Grid>
                </Popup>
                <Grid x:Name="ConditionsGrid" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="8" Visibility="{Binding Stats.ActiveConditions.Count, Converter={StaticResource IntGreaterThanZeroVisibilityCollapsedConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" MinHeight="22" />
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="24"/>
                    </Grid.ColumnDefinitions>
                    <ListBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1" x:Name="ConditionMiniBox" ItemsSource="{Binding Stats.ActiveConditions}" ItemsPanel="{DynamicResource ItemsPanelTemplate1}" ItemTemplate="{DynamicResource ConditionMiniTemplate}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" VerticalAlignment="Top" ItemContainerStyle="{DynamicResource ConditionMiniContainerTemplate}"/>
                    <ListBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"  x:Name="ConditionListBox" ItemsSource="{Binding Stats.ActiveConditions}" ItemTemplate="{DynamicResource ConditionTemplate}" HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Background="{x:Null}" BorderBrush="{x:Null}" ItemContainerStyle="{DynamicResource ListBoxItemStyle2}"
            			Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisibilityCollapsedConverter}, ElementName=ConditionsMoreToggle}"/>
                    <ToggleButton x:Name="ConditionsMoreToggle" Grid.Column="1" Margin="2.6,2,3.4,0" Grid.Row="0" Width="18" Height="18" VerticalAlignment="Top" IsChecked="{Binding IsConditionsOpen}">
                        <Path x:Name="path" Data="M1,1L4,4 7,1" Width="8" Height="5" Stroke="Black" StrokeStartLineCap="Round" StrokeEndLineCap="Round" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </ToggleButton>
                </Grid>
                <Grid  x:Name="StatsGrid" Grid.ColumnSpan="8" Grid.Column="0"  Grid.Row="3" HorizontalAlignment="Stretch" Visibility="Collapsed" Margin="0,0,3.871,0"
					>
                    <TabControl Padding="1" Background="#00F9F9F9" BorderBrush="#008C8E94">
                        <TabItem Header="Base" >
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0"/>
                                    <RowDefinition Height="26"/>
                                    <RowDefinition Height="1"/>
                                    <RowDefinition Height="26"/>
                                    <RowDefinition Height="1"/>
                                    <RowDefinition Height="26"/>
                                    <RowDefinition Height="1"/>
                                    <RowDefinition Height="26"/>
                                    <RowDefinition Height="3"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0"/>
                                    <ColumnDefinition Width="63"/>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="63"/>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="63"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Margin="0" Grid.Row="5" Width="Auto" Grid.RowSpan="1" Grid.ColumnSpan="6" d:LayoutOverrides="GridBox">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Margin="0,0,1,0" Grid.Row="1" Width="Auto" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Margin="0,0,1,0" Grid.Row="3" Width="Auto" Grid.RowSpan="1" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="3" HorizontalAlignment="Stretch" Margin="0,0,1,0" Grid.Row="3" Width="Auto" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="5" HorizontalAlignment="Stretch" Margin="0" Grid.Row="3" Width="Auto" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="3" HorizontalAlignment="Stretch" Margin="0,0,1,0" Grid.Row="1" Width="Auto" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="5" HorizontalAlignment="Stretch" Margin="0,-0.289,0,0.289" Grid.Row="1" Width="Auto" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock Margin="5,5,29.167,0" TextWrapping="Wrap" Text="Str" Foreground="White" Grid.Row="1" Grid.Column="1" TextAlignment="Center" VerticalAlignment="Top" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Monster.Adjuster.Strength, Converter={StaticResource AbilityValueConverter}}" HorizontalAlignment="Right" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Row="1" Grid.Column="1" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <TextBlock Margin="5,5,29.167,0" TextWrapping="Wrap" Text="Dex" Grid.Column="3" Foreground="White" RenderTransformOrigin="0.275,0.535" Grid.Row="1" TextAlignment="Center" VerticalAlignment="Top" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Monster.Adjuster.Dexterity, Converter={StaticResource AbilityValueConverter}}" HorizontalAlignment="Right" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="3" Grid.Row="1" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <TextBlock Margin="5,5,29.167,6.792" TextWrapping="Wrap" Text="Con" d:LayoutOverrides="Height" Grid.Column="5" Foreground="White" Grid.Row="1" TextAlignment="Center" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Monster.Adjuster.Constitution, Converter={StaticResource AbilityValueConverter}}" Margin="0,2,2,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="5" HorizontalAlignment="Right" Grid.Row="1" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <TextBlock Margin="3.066,5,29.167,0" TextWrapping="Wrap" Text="Int" Grid.Row="3" Foreground="White" Grid.Column="1" TextAlignment="Center" Width="29.934" VerticalAlignment="Top" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Monster.Adjuster.Intelligence, Converter={StaticResource AbilityValueConverter}}" HorizontalAlignment="Right" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Row="3" Grid.Column="1" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <TextBlock Margin="3.066,5,29.167,0" TextWrapping="Wrap" Text="Wis" Grid.Column="3" Grid.Row="3" Foreground="White" TextAlignment="Center" VerticalAlignment="Top" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Monster.Adjuster.Wisdom, Converter={StaticResource AbilityValueConverter}}" HorizontalAlignment="Right" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="3" Grid.Row="3" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <TextBlock HorizontalAlignment="Stretch" Margin="3.066,5,29.167,6.792" TextWrapping="Wrap" Text="Cha" Grid.Column="5" d:LayoutOverrides="Height" Grid.Row="3" Foreground="White" Width="Auto" TextAlignment="Center" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Monster.Adjuster.Charisma, Converter={StaticResource AbilityValueConverter}}" Margin="0,2,2,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="5" HorizontalAlignment="Right" Grid.Row="3" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Margin="0,0.129,0,-0.129" Grid.Row="7" Width="Auto" Grid.ColumnSpan="6">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorADarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock Grid.Column="1" Margin="5,5,23.416,0" Grid.Row="5" TextWrapping="Wrap" Text="Speed" VerticalAlignment="Top" HorizontalAlignment="Stretch" FontWeight="Bold" d:LayoutOverrides="Width" Foreground="White"/>
                                <TextBlock Grid.Column="2" Margin="-19.417,5,3,0" Grid.Row="5" Visibility="{Binding Monster, Converter={StaticResource notNullVisibilityConverter}}"  TextWrapping="NoWrap" ToolTip="{Binding Stats.Speed}"  HorizontalAlignment="Stretch" Grid.ColumnSpan="5" VerticalAlignment="Top" Foreground="White" d:LayoutOverrides="GridBox" Text="{Binding Stats.Speed}" TextTrimming="CharacterEllipsis"/>

                                <ComboBox SelectedIndex="{Binding Stats.Alignment, Converter={StaticResource AlignmentIndexConverter}}" Margin="1,3,27.416,0" Width="Auto" VerticalAlignment="Top" Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="7" BorderBrush="{x:Null}" Grid.ColumnSpan="1" Style="{DynamicResource ComboBoxStyle1}" Padding="3,3,0,3">
                                    <ComboBoxItem Content="LG"/>
                                    <ComboBoxItem Content="NG"/>
                                    <ComboBoxItem Content="CG"/>
                                    <ComboBoxItem Content="LN"/>
                                    <ComboBoxItem Content="N"/>
                                    <ComboBoxItem Content="CN"/>
                                    <ComboBoxItem Content="LE"/>
                                    <ComboBoxItem Content="NE"/>
                                    <ComboBoxItem Content="CE"/>
                                </ComboBox>
                                <ComboBox SelectedIndex="{Binding Monster.Adjuster.MonsterSize}" HorizontalAlignment="Stretch" Margin="-8,3,1,0" Width="Auto" VerticalAlignment="Top" Grid.Row="7" Grid.Column="4" BorderBrush="{x:Null}" Grid.ColumnSpan="2" Style="{DynamicResource ComboBoxStyle1}" Padding="3,3,0,3">
                                    <ComboBoxItem Content="Fine"/>
                                    <ComboBoxItem Content="Diminutive"/>
                                    <ComboBoxItem Content="Tiny"/>
                                    <ComboBoxItem Content="Small"/>
                                    <ComboBoxItem Content="Medium"/>
                                    <ComboBoxItem Content="Large"/>
                                    <ComboBoxItem Content="Huge"/>
                                    <ComboBoxItem Content="Gargantuan"/>
                                    <ComboBoxItem Content="Colossal"/>
                                </ComboBox>
                                <ComboBox SelectedIndex="{Binding Stats.Type, Converter={StaticResource MonsterTypeIndexConverter}}" HorizontalAlignment="Stretch" Margin="-27,3,8,0" Width="Auto" VerticalAlignment="Top" Grid.Column="2" Grid.Row="7" BorderBrush="{x:Null}" Grid.ColumnSpan="2" Style="{DynamicResource ComboBoxStyle1}" Padding="3,3,0,3">
                                    <ComboBoxItem Content="Aberration" />
                                    <ComboBoxItem Content="Animal" />
                                    <ComboBoxItem Content="Construct" />
                                    <ComboBoxItem Content="Dragon" />
                                    <ComboBoxItem Content="Fey" />
                                    <ComboBoxItem Content="Humanoid" />
                                    <ComboBoxItem Content="Magical Beast" />
                                    <ComboBoxItem Content="Monstrous Humanoid" />
                                    <ComboBoxItem Content="Ooze" />
                                    <ComboBoxItem Content="Outsider" />
                                    <ComboBoxItem Content="Plant" />
                                    <ComboBoxItem Content="Undead" />
                                    <ComboBoxItem Content="Vermin" />
                                </ComboBox>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Combat">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0"/>
                                    <RowDefinition Height="26"/>
                                    <RowDefinition Height="1"/>
                                    <RowDefinition Height="26"/>
                                    <RowDefinition Height="1"/>
                                    <RowDefinition Height="26"/>
                                    <RowDefinition Height="3"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0"/>
                                    <ColumnDefinition Width="63"/>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="63"/>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="63"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="5" HorizontalAlignment="Stretch" Margin="0" Grid.Row="1" Width="Auto" Grid.RowSpan="1" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="3" HorizontalAlignment="Stretch" Margin="0,0,1,0" Grid.Row="1" Width="Auto" Grid.RowSpan="1" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Margin="0,0,1,0" Grid.Row="1" Width="Auto" Grid.RowSpan="1" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="1" TextWrapping="Wrap" Grid.ColumnSpan="2" VerticalAlignment="Top" Text="AC" Margin="3.274,5,29.726,0" Foreground="White" TextAlignment="Center" Width="Auto"/>
                                <TextBox Text="{Binding Stats.FullAC}" HorizontalAlignment="Right" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Row="1" Grid.Column="1" BorderBrush="{x:Null}" Margin="0,2,3,0" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <TextBlock Grid.Column="3" Grid.Row="1" TextWrapping="Wrap" Text="Touch" VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="0.089,5,26.637,0" Grid.RowSpan="1" Foreground="White" Width="Auto" TextAlignment="Center" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Stats.TouchAC}" HorizontalAlignment="Right" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Row="1" Grid.Column="3" BorderBrush="{x:Null}" Margin="0,2,3,0" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <TextBlock Grid.Column="5" Grid.Row="1" TextWrapping="Wrap" Text="Flat" VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="3,5,29.726,0" Foreground="White" TextAlignment="Center" Width="Auto" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Stats.FlatFootedAC}" HorizontalAlignment="Right" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Row="1" Grid.Column="5" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />

                                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Margin="0,0.129,1,-0.129" Grid.Row="3" Width="Auto" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorADarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock Margin="5,5,29.167,6.287" TextWrapping="Wrap" Text="Fort" Grid.Column="1" Foreground="White" Grid.Row="3" TextAlignment="Center" d:LayoutOverrides="Height" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Stats.Fort}" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="3" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <Rectangle Grid.Column="3" HorizontalAlignment="Stretch" Margin="0,0.129,1,-0.129" Grid.Row="3" Width="Auto" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorADarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock Margin="3.066,5,29.167,6.287" TextWrapping="Wrap" Text="Ref" Grid.Column="3" Foreground="White" Grid.Row="3" TextAlignment="Center" d:LayoutOverrides="Height" Width="28" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Stats.Ref}" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="3" HorizontalAlignment="Right" Grid.Row="3" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <Rectangle Grid.Column="5" Margin="0.089,0.129,0,-0.129" Grid.Row="3" Width="Auto" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorADarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock Margin="3.066,5,26.637,6.287" TextWrapping="Wrap" Text="Will" Grid.Column="5" Foreground="White" Grid.Row="3" TextAlignment="Center" d:LayoutOverrides="Height" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Stats.Will}" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="5" HorizontalAlignment="Right" Grid.Row="3" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <Rectangle Grid.Column="5" HorizontalAlignment="Stretch" Margin="0" Grid.Row="5" Width="Auto" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="3" HorizontalAlignment="Stretch" Margin="0,0,1,0" Grid.Row="5" Width="Auto" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Margin="0,0,1,0" Grid.Row="5" Width="Auto" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock Margin="5,5,29.167,6.287" TextWrapping="Wrap" Text="BAB" Grid.Column="1" Foreground="White" Grid.Row="5" TextAlignment="Center" Grid.ColumnSpan="2" />
                                <TextBox Text="{Binding Stats.Adjuster.BaseAtk}" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="5" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox" GotFocus="TextBox_GotFocus" />
                                <TextBlock Margin="5,5,29.167,6.287" TextWrapping="Wrap" Text="CMB" Grid.Column="3" Foreground="White" Grid.Row="5" TextAlignment="Center" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Stats.CMB_Numeric}" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="3" HorizontalAlignment="Right" Grid.Row="5" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox" GotFocus="TextBox_GotFocus" />
                                <TextBlock Margin="4.449,5,30.55,6.287" TextWrapping="Wrap" Text="CMD" Grid.Column="5" Foreground="White" Grid.Row="5" TextAlignment="Center" Width="28" Grid.ColumnSpan="2" d:LayoutOverrides="Height, GridBox"/>
                                <TextBox Text="{Binding Stats.CMD_Numeric}" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="5" HorizontalAlignment="Right" Grid.Row="5" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox" GotFocus="TextBox_GotFocus" />
                            </Grid>
                        </TabItem>
                        <TabItem Header="Attacks">
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="21.373"/>
                                    <RowDefinition Height="0.505*"/>
                                    <RowDefinition Height="17.96"/>
                                    <RowDefinition Height="0.495*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Row="2" Grid.Column="0" Grid.RowSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorADarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock Text="Melee"  Grid.Row="0" Grid.Column="0" Foreground="White" Margin="3,0,65.167,1" FontWeight="Bold" VerticalAlignment="Bottom"/>
                                <TextBlock Text="{Binding Monster.Melee}" Visibility="{Binding Monster.Melee, Converter={StaticResource NotNullVisibilityCollapsedConverter}}" Grid.Row="1" Grid.Column="0" TextWrapping="Wrap" Foreground="White" Margin="3,0,3,2"/>
                                <TextBlock Text="Ranged" Grid.Row="2" Grid.Column="0" Foreground="White" Margin="3,1,41.5,1" FontWeight="Bold" d:LayoutOverrides="GridBox"/>
                                <TextBlock Text="{Binding Monster.Ranged}" Visibility="{Binding Monster.Ranged, Converter={StaticResource NotNullVisibilityCollapsedConverter}}" Grid.Row="3" Grid.Column="0"  TextWrapping="Wrap" Foreground="White" Margin="3,0,3,2"/>
                                <Button x:Name="EditAttacksButton" Content="Edit Attacks" HorizontalAlignment="Right" Margin="0,1.852,1.666,0" Width="Auto" RenderTransformOrigin="0.24,0.617" Height="Auto" VerticalAlignment="Top" VerticalContentAlignment="Top" Padding="1,0,1,-1" FontSize="10.667" FontWeight="Normal" Background="{DynamicResource TabItemHotBackground}" Foreground="Black" Click="EditAttackButton_Click"/>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Resources">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.507*"/>
                                    <RowDefinition Height="0.493*"/>
                                </Grid.RowDefinitions>
                                <Grid.Background>
                                    <SolidColorBrush Color="{DynamicResource SecondaryColorBDark}"/>
                                </Grid.Background>
                                <Button x:Name="AddResourceButton" Content="Add" HorizontalAlignment="Left" Width="75" d:LayoutOverrides="Height" Grid.RowSpan="1" Click="AddResourceButton_Click"/>
                                <ListBox ItemsSource="{Binding Resources}" Margin="0" Grid.Row="1" Grid.RowSpan="1" ItemTemplate="{DynamicResource ResouceItemTemplate}" Background="#0BFFFFFF" HorizontalContentAlignment="Stretch"/>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </Grid>
            </Grid>
            <DataTemplate.Triggers>
                <Trigger Property="IsChecked" Value="True" SourceName="ConditionsMoreToggle">
                    <Setter Property="RenderTransform" TargetName="path">
                        <Setter.Value>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="180"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="HPButton"/>
                <Trigger Property="IsChecked" Value="True" SourceName="StatsCheckBox">
                    <Setter Property="Visibility" TargetName="StatsGrid" Value="Visible"/>
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="CharacterDataTemplateSmall">
            <DataTemplate.Resources>
                <Storyboard x:Key="OnClick1">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NotesTextBox">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                    </ObjectAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="OnClick2">
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Popup.IsOpen)" Storyboard.TargetName="popup">
                        <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                    </BooleanAnimationUsingKeyFrames>
                </Storyboard>
            </DataTemplate.Resources>
            <Grid x:Name="CharacterGrid" Width="Auto" Height="Auto" ContextMenu="{StaticResource CharacterContextMenu}" Background="#01FFFFFF" d:DesignWidth="178.75">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="0.193*"/>
                    <ColumnDefinition Width="0.807*"/>
                    <ColumnDefinition Width="49.927"/>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="29.969"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle Grid.ColumnSpan="6" Fill="{Binding Color, Converter={StaticResource nullableUintToBrushConverter}}" Margin="0,0.344,0,0" RadiusY="5" RadiusX="5" Grid.RowSpan="2" StrokeThickness="1" StrokeLineJoin="Round"/>
                <Border Grid.ColumnSpan="1" Margin="0,0.344,0.5,1" Grid.Row="0" HorizontalAlignment="Stretch" CornerRadius="0" BorderThickness="1" Grid.Column="3" d:LayoutOverrides="HorizontalAlignment">
                    <Border.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource SecondaryColorADarker}"/>
                    </Border.BorderBrush>
                    <Border.Background>
                        <SolidColorBrush Color="{DynamicResource SecondaryColorADark}"/>
                    </Border.Background>
                    <Grid>
                        <Grid.ToolTip>
                            <StackPanel>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="HP {0}/{1}">
                                            <Binding Path="HP"/>
                                            <Binding Path="MaxHP"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>
                        </Grid.ToolTip>
                        <TextBox x:Name="HPTextBox" Text="{Binding HP, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" Margin="0,2.491,18,1.938" VerticalAlignment="Stretch" Height="Auto" Grid.Row="0" RenderTransformOrigin="1.739,0.365" Grid.Column="0" GotFocus="TextBox_GotFocus" GotKeyboardFocus="TextBox_GotKeyboardFocus" KeyUp="TextBox_KeyUp" Width="27.386" />
                        <Popup x:Name="popup" Placement="Bottom" StaysOpen="False" PlacementTarget="{Binding ElementName=HPTextBox}" AllowsTransparency="True" Grid.ColumnSpan="1" Margin="0,0,18.394,-3.344">
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="33"/>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Rectangle RadiusX="6" RadiusY="6" Stroke="White" Grid.Column="0" Grid.ColumnSpan="3">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBox x:Name="textBox" Width="30" VerticalAlignment="Center" HorizontalAlignment="Left" Height="20" Margin="6,3,0,3" Text="" KeyUp="textBox_KeyUp" TextChanged="textBox_TextChanged" IsVisibleChanged="textBox_IsVisibleChanged" />
                                <Button Width="16" Height="16" Grid.Column="1" Margin="3,3,0,3" Background="{DynamicResource characterButtonBrush}" VerticalAlignment="Center" x:Name="SubractHPButton" Click="SubractHPButton_Click" FontWeight="Bold" FontSize="13.333" >

                                    <Path Data="M 1,4 7,4 " Width="8" Height="8" Stroke="Black" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                                </Button>
                                <Button Width="16" Height="16" Grid.Column="2" Margin="0,3,3,3" Background="{DynamicResource characterButtonBrush}" VerticalAlignment="Center" x:Name="AddHPButton" Click="AddHPButton_Click" FontWeight="Bold" FontSize="13.333" >

                                    <Path Data="M 1,4 L 7,4 M4,1 L4,7" Width="8" Height="8" Stroke="Black" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                                </Button>
                            </Grid>
                        </Popup>

                        <Thumb x:Name="HPUpThumb" Grid.ColumnSpan="1" Grid.Column="0" Margin="0,3.417,2,12.031" Grid.Row="0" Grid.RowSpan="1" HorizontalAlignment="Right" Width="13.991" DragStarted="HPThumb_DragStarted" DragDelta="HPThumb_DragDelta" DragCompleted="HPThumb_DragCompleted" Style="{DynamicResource ThumbStyle1}"/>
                        <Thumb x:Name="HPDownThumb" Grid.ColumnSpan="1" Grid.Column="0" Margin="0,14,2,1.938" Grid.Row="0" Grid.RowSpan="1" Height="Auto" VerticalAlignment="Stretch" DragStarted="HPThumb_DragStarted" DragDelta="HPThumb_DragDelta" DragCompleted="HPThumb_DragCompleted" Style="{DynamicResource ThumbStyle2}" HorizontalAlignment="Right" Width="13.991"/>
                    </Grid>
                </Border>
                <TextBox x:Name="NameTextBox" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"  ToolTip="{Binding Name}" Grid.ColumnSpan="2" Margin="2.875,4.04,4,4" Grid.Column="1" GotFocus="NameTextBox_GotFocus" MouseRightButtonDown="NameTextBox_MouseRightButtonDown" PreviewMouseRightButtonDown="NameTextBox_PreviewMouseRightButtonDown" />
                <local:NotesPopup x:Name="NotesPopup"/>
                <Button x:Name="DeleteButton" Margin="3.495,8,3.494,5.969" RenderTransformOrigin="0.222,-0.601" Grid.Column="5" Click="DeleteButton_Click" Width="16" Height="16" Grid.Row="0" Grid.ColumnSpan="1" GotKeyboardFocus="TextBox_GotKeyboardFocus" Style="{DynamicResource ButtonSecondaryStyle}">
                    <Button.ToolTip>Delete</Button.ToolTip>
                    <Path Data="M1,1 L7,7 M7,1 L1,7" Width="8" Height="8" Stroke="White" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                </Button>
                <Button x:Name="ConditionsBox" Grid.Column="4" Grid.Row="0" RenderTransformOrigin="0.5,0.5" ToolTip="Actions" Width="Auto" Height="22" GotKeyboardFocus="TextBox_GotKeyboardFocus" HorizontalAlignment="Stretch" Margin="0,4.929,1,3.04" Click="ConditionsBox_Click">
                    <Grid Width="16" Height="16">
                        <Image Source="Images/d20-16.png" HorizontalAlignment="Center" VerticalAlignment="Center" Height="16" Width="16"/>

                    </Grid>
                </Button>
                <TextBox x:Name="NotesTextBox" Height="39.627" Margin="1.5,0,5.871,0" Grid.Row="1" TextWrapping="Wrap" VerticalContentAlignment="Top" Text="{Binding Notes}" VerticalAlignment="Top" Grid.ColumnSpan="5" Visibility="Collapsed" AcceptsReturn="True" BorderBrush="#FF979595" VerticalScrollBarVisibility="Auto" Grid.Column="1" d:LayoutOverrides="GridBox"/>
                <Grid x:Name="ConditionsGrid" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="6" Visibility="{Binding Stats.ActiveConditions.Count, Converter={StaticResource IntGreaterThanZeroVisibilityCollapsedConverter}}" Margin="0" d:LayoutOverrides="GridBox">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" MinHeight="22" />
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="103*"/>
                        <ColumnDefinition Width="76*"/>
                    </Grid.ColumnDefinitions>
                    <ListBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" x:Name="ConditionMiniBox" ItemsSource="{Binding Stats.ActiveConditions}" ItemsPanel="{DynamicResource ItemsPanelTemplate1}" ItemTemplate="{DynamicResource ConditionMiniTemplate}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" VerticalAlignment="Top" ItemContainerStyle="{DynamicResource ConditionMiniContainerTemplate}" Margin="0,0,-0.2,0"/>
                </Grid>
                <Grid  x:Name="StatsGrid" Grid.ColumnSpan="6" Grid.Column="0"  Grid.Row="1" HorizontalAlignment="Stretch" Visibility="Collapsed" Margin="0,0,3.871,0" d:LayoutOverrides="GridBox"
					>
                    <TabControl Padding="1" Background="#00F9F9F9" BorderBrush="#008C8E94">
                        <TabItem Header="Base" >
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0"/>
                                    <RowDefinition Height="26"/>
                                    <RowDefinition Height="1"/>
                                    <RowDefinition Height="26"/>
                                    <RowDefinition Height="1"/>
                                    <RowDefinition Height="26"/>
                                    <RowDefinition Height="1"/>
                                    <RowDefinition Height="26"/>
                                    <RowDefinition Height="3"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0"/>
                                    <ColumnDefinition Width="63"/>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="63"/>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="63"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Margin="0" Grid.Row="5" Width="Auto" Grid.RowSpan="1" Grid.ColumnSpan="6" d:LayoutOverrides="GridBox">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Margin="0,0,1,0" Grid.Row="1" Width="Auto" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Margin="0,0,1,0" Grid.Row="3" Width="Auto" Grid.RowSpan="1" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="3" HorizontalAlignment="Stretch" Margin="0,0,1,0" Grid.Row="3" Width="Auto" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="5" HorizontalAlignment="Stretch" Margin="0" Grid.Row="3" Width="Auto" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="3" HorizontalAlignment="Stretch" Margin="0,0,1,0" Grid.Row="1" Width="Auto" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="5" HorizontalAlignment="Stretch" Margin="0,-0.289,0,0.289" Grid.Row="1" Width="Auto" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock Margin="5,5,29.167,0" TextWrapping="Wrap" Text="Str" Foreground="White" Grid.Row="1" Grid.Column="1" TextAlignment="Center" VerticalAlignment="Top" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Monster.Adjuster.Strength, Converter={StaticResource AbilityValueConverter}}" HorizontalAlignment="Right" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Row="1" Grid.Column="1" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <TextBlock Margin="5,5,29.167,0" TextWrapping="Wrap" Text="Dex" Grid.Column="3" Foreground="White" RenderTransformOrigin="0.275,0.535" Grid.Row="1" TextAlignment="Center" VerticalAlignment="Top" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Monster.Adjuster.Dexterity, Converter={StaticResource AbilityValueConverter}}" HorizontalAlignment="Right" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="3" Grid.Row="1" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <TextBlock Margin="5,5,29.167,6.792" TextWrapping="Wrap" Text="Con" d:LayoutOverrides="Height" Grid.Column="5" Foreground="White" Grid.Row="1" TextAlignment="Center" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Monster.Adjuster.Constitution, Converter={StaticResource AbilityValueConverter}}" Margin="0,2,2,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="5" HorizontalAlignment="Right" Grid.Row="1" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <TextBlock Margin="3.066,5,29.167,0" TextWrapping="Wrap" Text="Int" Grid.Row="3" Foreground="White" Grid.Column="1" TextAlignment="Center" Width="29.934" VerticalAlignment="Top" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Monster.Adjuster.Intelligence, Converter={StaticResource AbilityValueConverter}}" HorizontalAlignment="Right" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Row="3" Grid.Column="1" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <TextBlock Margin="3.066,5,29.167,0" TextWrapping="Wrap" Text="Wis" Grid.Column="3" Grid.Row="3" Foreground="White" TextAlignment="Center" VerticalAlignment="Top" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Monster.Adjuster.Wisdom, Converter={StaticResource AbilityValueConverter}}" HorizontalAlignment="Right" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="3" Grid.Row="3" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <TextBlock HorizontalAlignment="Stretch" Margin="3.066,5,29.167,6.792" TextWrapping="Wrap" Text="Cha" Grid.Column="5" d:LayoutOverrides="Height" Grid.Row="3" Foreground="White" Width="Auto" TextAlignment="Center" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Monster.Adjuster.Charisma, Converter={StaticResource AbilityValueConverter}}" Margin="0,2,2,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="5" HorizontalAlignment="Right" Grid.Row="3" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Margin="0,0.129,0,-0.129" Grid.Row="7" Width="Auto" Grid.ColumnSpan="6">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorADarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock Grid.Column="1" Margin="5,5,23.416,0" Grid.Row="5" TextWrapping="Wrap" Text="Speed" VerticalAlignment="Top" HorizontalAlignment="Stretch" FontWeight="Bold" d:LayoutOverrides="Width" Foreground="White"/>
                                <TextBlock Grid.Column="2" Margin="-19.417,5,3,0" Grid.Row="5" Visibility="{Binding Monster, Converter={StaticResource notNullVisibilityConverter}}"  TextWrapping="NoWrap" ToolTip="{Binding Stats.Speed}"  HorizontalAlignment="Stretch" Grid.ColumnSpan="5" VerticalAlignment="Top" Foreground="White" d:LayoutOverrides="GridBox" Text="{Binding Stats.Speed}" TextTrimming="CharacterEllipsis"/>

                                <ComboBox SelectedIndex="{Binding Stats.Alignment, Converter={StaticResource AlignmentIndexConverter}}" Margin="1,3,27.416,0" Width="Auto" VerticalAlignment="Top" Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="7" BorderBrush="{x:Null}" Grid.ColumnSpan="1" Style="{DynamicResource ComboBoxStyle1}" Padding="3,3,0,3">
                                    <ComboBoxItem Content="LG"/>
                                    <ComboBoxItem Content="NG"/>
                                    <ComboBoxItem Content="CG"/>
                                    <ComboBoxItem Content="LN"/>
                                    <ComboBoxItem Content="N"/>
                                    <ComboBoxItem Content="CN"/>
                                    <ComboBoxItem Content="LE"/>
                                    <ComboBoxItem Content="NE"/>
                                    <ComboBoxItem Content="CE"/>
                                </ComboBox>
                                <ComboBox SelectedIndex="{Binding Monster.Adjuster.MonsterSize}" HorizontalAlignment="Stretch" Margin="-8,3,1,0" Width="Auto" VerticalAlignment="Top" Grid.Row="7" Grid.Column="4" BorderBrush="{x:Null}" Grid.ColumnSpan="2" Style="{DynamicResource ComboBoxStyle1}" Padding="3,3,0,3">
                                    <ComboBoxItem Content="Fine"/>
                                    <ComboBoxItem Content="Diminutive"/>
                                    <ComboBoxItem Content="Tiny"/>
                                    <ComboBoxItem Content="Small"/>
                                    <ComboBoxItem Content="Medium"/>
                                    <ComboBoxItem Content="Large"/>
                                    <ComboBoxItem Content="Huge"/>
                                    <ComboBoxItem Content="Gargantuan"/>
                                    <ComboBoxItem Content="Colossal"/>
                                </ComboBox>
                                <ComboBox SelectedIndex="{Binding Stats.Type, Converter={StaticResource MonsterTypeIndexConverter}}" HorizontalAlignment="Stretch" Margin="-27,3,8,0" Width="Auto" VerticalAlignment="Top" Grid.Column="2" Grid.Row="7" BorderBrush="{x:Null}" Grid.ColumnSpan="2" Style="{DynamicResource ComboBoxStyle1}" Padding="3,3,0,3">
                                    <ComboBoxItem Content="Aberration" />
                                    <ComboBoxItem Content="Animal" />
                                    <ComboBoxItem Content="Construct" />
                                    <ComboBoxItem Content="Dragon" />
                                    <ComboBoxItem Content="Fey" />
                                    <ComboBoxItem Content="Humanoid" />
                                    <ComboBoxItem Content="Magical Beast" />
                                    <ComboBoxItem Content="Monstrous Humanoid" />
                                    <ComboBoxItem Content="Ooze" />
                                    <ComboBoxItem Content="Outsider" />
                                    <ComboBoxItem Content="Plant" />
                                    <ComboBoxItem Content="Undead" />
                                    <ComboBoxItem Content="Vermin" />
                                </ComboBox>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Combat">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0"/>
                                    <RowDefinition Height="26"/>
                                    <RowDefinition Height="1"/>
                                    <RowDefinition Height="26"/>
                                    <RowDefinition Height="1"/>
                                    <RowDefinition Height="26"/>
                                    <RowDefinition Height="3"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0"/>
                                    <ColumnDefinition Width="63"/>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="63"/>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="63"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="5" HorizontalAlignment="Stretch" Margin="0" Grid.Row="1" Width="Auto" Grid.RowSpan="1" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="3" HorizontalAlignment="Stretch" Margin="0,0,1,0" Grid.Row="1" Width="Auto" Grid.RowSpan="1" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Margin="0,0,1,0" Grid.Row="1" Width="Auto" Grid.RowSpan="1" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="1" TextWrapping="Wrap" Grid.ColumnSpan="2" VerticalAlignment="Top" Text="AC" Margin="3.274,5,29.726,0" Foreground="White" TextAlignment="Center" Width="Auto"/>
                                <TextBox Text="{Binding Stats.FullAC}" HorizontalAlignment="Right" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Row="1" Grid.Column="1" BorderBrush="{x:Null}" Margin="0,2,3,0" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <TextBlock Grid.Column="3" Grid.Row="1" TextWrapping="Wrap" Text="Touch" VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="0.089,5,26.637,0" Grid.RowSpan="1" Foreground="White" Width="Auto" TextAlignment="Center" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Stats.TouchAC}" HorizontalAlignment="Right" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Row="1" Grid.Column="3" BorderBrush="{x:Null}" Margin="0,2,3,0" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <TextBlock Grid.Column="5" Grid.Row="1" TextWrapping="Wrap" Text="Flat" VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="3,5,29.726,0" Foreground="White" TextAlignment="Center" Width="Auto" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Stats.FlatFootedAC}" HorizontalAlignment="Right" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Row="1" Grid.Column="5" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />

                                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Margin="0,0.129,1,-0.129" Grid.Row="3" Width="Auto" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorADarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock Margin="5,5,29.167,6.287" TextWrapping="Wrap" Text="Fort" Grid.Column="1" Foreground="White" Grid.Row="3" TextAlignment="Center" d:LayoutOverrides="Height" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Stats.Fort}" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="3" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <Rectangle Grid.Column="3" HorizontalAlignment="Stretch" Margin="0,0.129,1,-0.129" Grid.Row="3" Width="Auto" Grid.ColumnSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorADarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock Margin="3.066,5,29.167,6.287" TextWrapping="Wrap" Text="Ref" Grid.Column="3" Foreground="White" Grid.Row="3" TextAlignment="Center" d:LayoutOverrides="Height" Width="28" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Stats.Ref}" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="3" HorizontalAlignment="Right" Grid.Row="3" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <Rectangle Grid.Column="5" Margin="0.089,0.129,0,-0.129" Grid.Row="3" Width="Auto" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorADarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock Margin="3.066,5,26.637,6.287" TextWrapping="Wrap" Text="Will" Grid.Column="5" Foreground="White" Grid.Row="3" TextAlignment="Center" d:LayoutOverrides="Height" Grid.ColumnSpan="2"/>
                                <TextBox Text="{Binding Stats.Will}" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="5" HorizontalAlignment="Right" Grid.Row="3" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" GotFocus="TextBox_GotFocus" />
                                <Rectangle Grid.Column="5" HorizontalAlignment="Stretch" Margin="0" Grid.Row="5" Width="Auto" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="3" HorizontalAlignment="Stretch" Margin="0,0,1,0" Grid.Row="5" Width="Auto" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Column="1" HorizontalAlignment="Stretch" Margin="0,0,1,0" Grid.Row="5" Width="Auto" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock Margin="5,5,29.167,6.287" TextWrapping="Wrap" Text="BAB" Grid.Column="1" Foreground="White" Grid.Row="5" TextAlignment="Center" Grid.ColumnSpan="2" d:LayoutOverrides="Height, GridBox"/>
                                <TextBox Text="{Binding Stats.BaseAtk}" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="5" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox" GotFocus="TextBox_GotFocus" />
                                <TextBlock Margin="5,5,29.167,6.287" TextWrapping="Wrap" Text="CMB" Grid.Column="3" Foreground="White" Grid.Row="5" TextAlignment="Center" Grid.ColumnSpan="2" d:LayoutOverrides="Height, GridBox"/>
                                <TextBox Text="{Binding Stats.CMB_Numeric}" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="3" HorizontalAlignment="Right" Grid.Row="5" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox" GotFocus="TextBox_GotFocus" />
                                <TextBlock Margin="4.449,5,30.55,6.287" TextWrapping="Wrap" Text="CMD" Grid.Column="5" Foreground="White" Grid.Row="5" TextAlignment="Center" Width="28" Grid.ColumnSpan="2" d:LayoutOverrides="Height, GridBox"/>
                                <TextBox Text="{Binding Stats.CMD_Numeric}" Margin="0,2,3,0" TextWrapping="NoWrap" Width="24" VerticalAlignment="Top" Grid.Column="5" HorizontalAlignment="Right" Grid.Row="5" BorderBrush="{x:Null}" TextAlignment="Center" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox" GotFocus="TextBox_GotFocus" />
                            </Grid>
                        </TabItem>
                        <TabItem Header="Attacks">
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="21.373"/>
                                    <RowDefinition Height="0.505*"/>
                                    <RowDefinition Height="17.96"/>
                                    <RowDefinition Height="0.495*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Grid.Row="2" Grid.Column="0" Grid.RowSpan="2">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorADarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <TextBlock Text="Melee"  Grid.Row="0" Grid.Column="0" Foreground="White" Margin="3,0,65.167,1" FontWeight="Bold" VerticalAlignment="Bottom"/>
                                <TextBlock Text="{Binding Stats.Melee}" Visibility="{Binding Stats.Melee, Converter={StaticResource NotNullVisibilityCollapsedConverter}}" Grid.Row="1" Grid.Column="0" TextWrapping="Wrap" Foreground="White" Margin="3,0,3,2"/>
                                <TextBlock Text="Ranged" Grid.Row="2" Grid.Column="0" Foreground="White" Margin="3,1,41.5,1" FontWeight="Bold" d:LayoutOverrides="GridBox"/>
                                <TextBlock Text="{Binding Stats.Ranged}" Visibility="{Binding Stats.Ranged, Converter={StaticResource NotNullVisibilityCollapsedConverter}}" Grid.Row="3" Grid.Column="0"  TextWrapping="Wrap" Foreground="White" Margin="3,0,3,2"/>
                                <Button x:Name="EditAttacksButton" Content="Edit Attacks" HorizontalAlignment="Right" Margin="0,1.852,1.666,0" Width="Auto" RenderTransformOrigin="0.24,0.617" Height="Auto" VerticalAlignment="Top" VerticalContentAlignment="Top" Padding="1,0,1,-1" FontSize="10.667" FontWeight="Normal" Background="{DynamicResource TabItemHotBackground}" Foreground="Black" Click="EditAttackButton_Click"/>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Resources">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.507*"/>
                                    <RowDefinition Height="0.493*"/>
                                </Grid.RowDefinitions>
                                <Grid.Background>
                                    <SolidColorBrush Color="{DynamicResource SecondaryColorBDark}"/>
                                </Grid.Background>
                                <Button x:Name="AddResourceButton" Content="Add" HorizontalAlignment="Left" Width="75" d:LayoutOverrides="Height" Grid.RowSpan="1" Click="AddResourceButton_Click"/>
                                <ListBox ItemsSource="{Binding Resources}" Margin="0" Grid.Row="1" Grid.RowSpan="1" ItemTemplate="{DynamicResource ResouceItemTemplate}" Background="#0BFFFFFF" HorizontalContentAlignment="Stretch"/>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </Grid>
                <StackPanel Margin="1,6.803,0,8" Orientation="Horizontal" d:LayoutOverrides="Height">
                    <Image x:Name="FollowerImage" Source="images\lock-16.png" HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="0"
            			Visibility="{Binding InitiativeLeader, Converter={StaticResource NotNullVisibilityCollapsedConverter}}"/>
                    <Image x:Name="HiddenImage" Source="images\blind-16.png" HorizontalAlignment="Left" VerticalAlignment="Stretch" Height="15.166" Margin="0"
            			Visibility="{Binding IsHidden, Converter={StaticResource BoolToVisibilityCollapsedConverter}}" ToolTip="Hidden"/>
                    <Image x:Name="IdleImage" Source="images\zzz-16.png" HorizontalAlignment="Left" VerticalAlignment="Stretch" Height="15.166" Margin="0"
            			Visibility="{Binding IsIdle, Converter={StaticResource BoolToVisibilityCollapsedConverter}}" ToolTip="Idle"/>
                </StackPanel>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding InitiativeLeader}" Value="{x:Null}"/>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="ResouceItemTemplate">
            <Grid Margin="1">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="26"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="26"/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <TextBox Margin="0" TextWrapping="Wrap" VerticalContentAlignment="Top" Text="{Binding Name}" VerticalAlignment="Center"/>
                <Button x:Name="DescreaseResourceButton" Grid.ColumnSpan="1" Content="-" Grid.Column="1" Width="20" Height="20" HorizontalAlignment="Center" Style="{DynamicResource ButtonSecondaryStyle}" Margin="3,0" Click="DescreaseResourceButton_Click"/>
                <TextBox Grid.Column="2" TextWrapping="Wrap" VerticalContentAlignment="Top" Text="{Binding Current}" Width="30" VerticalAlignment="Center"/>
                <Button x:Name="IncreaseResourceButton" Content="+" Grid.Column="3" Width="20" Height="20" Style="{DynamicResource ButtonSecondaryStyle}" Margin="3,0" Click="IncreaseResourceButton_Click"/>
                <Button x:Name="DeleteResourceButton" Margin="7,0" RenderTransformOrigin="0.222,-0.601" Grid.Column="4"  Width="16" Height="16" Grid.Row="0" Grid.ColumnSpan="1" Style="{DynamicResource ButtonSecondaryStyle}" HorizontalAlignment="Stretch" Click="DeleteResourceButton_Click" VerticalAlignment="Center">
                    <Button.ToolTip>Delete</Button.ToolTip>
                    <Path Data="M1,1 L7,7 M7,1 L1,7" Width="8" Height="8" Stroke="White" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                </Button>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="CombatListItemTemplate">
            <Grid Background="#03000000" ContextMenu="{StaticResource CharacterContextMenu}" ContextMenuOpening="Grid_ContextMenuOpening">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="16"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto" MinWidth="25.557"/>
                    <ColumnDefinition Width="Auto" MinWidth="30"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ToolTip>
                    <StackPanel>
                        <TextBlock Text="{Binding Name}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Initiative Rolled: " />
                            <TextBlock Text="{Binding InitiativeRolled}"/>
                        </StackPanel>
                        <TextBlock Text="{Binding InitiativeCount.Text}" TextWrapping="Wrap" Grid.Row="0" FontSize="12" Visibility="{Binding Source={x:Static local:UserSettings.Settings}, Path=ShowHiddenInitValue, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>
                    </StackPanel>
                </Grid.ToolTip>
                <Rectangle Grid.ColumnSpan="6" Fill="{Binding Color, Converter={StaticResource nullableUintToBrushConverter}}" Margin="1.25,1,0,0" StrokeThickness="1" StrokeLineJoin="Round" RadiusX="3" RadiusY="5"/>
                <Path Data="M1,4 L5,4 L5,1 L11,6 L5,11 L5,8 L1,8 z" Width="12" Height="12" Visibility="{Binding IsActive, Converter={StaticResource boolToVisibilityConverter}}" StrokeLineJoin="Round" StrokeThickness="1" Margin="3,5.98,1,5.98" Fill="#FF13EB0C" IsHitTestVisible="False" />
                <Image Source="images/hourglass-16.png"  Visibility="{Binding IsDelaying, Converter={StaticResource BoolToVisibilityCollapsedConverter}}" Margin="0,3,0,3" Grid.Column="1"/>
                <Image Source="images/target-16.png"  Visibility="{Binding IsReadying, Converter={StaticResource BoolToVisibilityCollapsedConverter}}" Margin="0,3,0,3" Grid.Column="2"/>
                <StackPanel Grid.Column="3" Orientation="Horizontal">
                    <TextBlock x:Name="NameTextBlock" Text="{Binding Name}"
            			Margin="0,0,0,0" TextTrimming="CharacterEllipsis" VerticalAlignment="Center">
                        <TextBlock.Foreground>
                            <Binding  Path="HP" Converter="{StaticResource hpToBrushConverter}">
                                <Binding.ConverterParameter>
                                    <local:BrushCollection>
                                        <SolidColorBrush Color="{DynamicResource ThemeTextForeground}"/>
                                        <SolidColorBrush Color="Blue"/>
                                        <SolidColorBrush Color="Red"/>
                                    </local:BrushCollection>
                                </Binding.ConverterParameter>
                            </Binding>
                        </TextBlock.Foreground>
                    </TextBlock>
                    <ListBox x:Name="CurrentPlayerConditions" ItemsSource="{Binding Stats.ActiveConditions}" ItemsPanel="{DynamicResource ItemsPanelTemplate1}" ItemTemplate="{DynamicResource ConditionMiniTemplate}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemContainerStyle="{DynamicResource ListBoxItemStyle4}" ScrollViewer.VerticalScrollBarVisibility="Disabled" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                        <ListBox.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.75" ScaleY="0.75"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </ListBox.RenderTransform>
                    </ListBox>

                </StackPanel>

                <TextBlock Grid.Column="4" Text="Init:" Margin="6,0,3,0" FontStyle="Italic" VerticalAlignment="Center" Foreground="{DynamicResource ThemeTextForegroundBrush}"/>
                <TextBox Grid.Column="5" Text="{Binding CurrentInitiative, UpdateSourceTrigger=PropertyChanged}" 
            		    
            		Margin="2.556,0,4.556,2" Width="24" VerticalAlignment="Bottom" Height="19">
                    <TextBox.Background >
                        <Binding Path="HasInitiativeChanged" Converter="{StaticResource changedToBrushConverter}">
                            <Binding.ConverterParameter>
                                <local:BrushCollection>
                                    <SolidColorBrush Color="{DynamicResource ThemeTextBackground}"/>
                                    <SolidColorBrush Color="{DynamicResource SecondaryColorBMedium}"/>
                                </local:BrushCollection>
                            </Binding.ConverterParameter>
                        </Binding>

                    </TextBox.Background>
                </TextBox>
                <local:NotesPopup x:Name="NotesPopup"/>
                <ListBox x:Name="FollowersListBox" Grid.Row="1" Grid.Column="0"  Grid.ColumnSpan="6" 
            		ItemsSource="{Binding InitiativeFollowers}"
            		Visibility="{Binding InitiativeFollowers.Count, Converter={StaticResource IntGreaterThanZeroVisibilityCollapsedConverter}}"  ItemTemplate="{DynamicResource InitiativeFollowerItemTemplate}" Background="{x:Null}" BorderBrush="{x:Null}" IsHitTestVisible="False" Focusable="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch"/>
            </Grid>
            <DataTemplate.Triggers>

                <DataTrigger Binding="{Binding IsActive}">
                    <DataTrigger.Value>
                        <system:Boolean>True</system:Boolean>
                    </DataTrigger.Value>
                    <Setter Property="FontWeight" TargetName="NameTextBlock" Value="Bold"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
        <SolidColorBrush x:Key="DarkBackgroundBrush" Color="{DynamicResource PrimaryColorDarker}"/>
        <SolidColorBrush x:Key="MediumBackgroundBrush" Color="{DynamicResource PrimaryColorDark}"/>
        <SolidColorBrush x:Key="LightBackgroundBrush" Color="{DynamicResource PrimaryColorMedium}"/>
        <Style x:Key="ButtonStyle1">
            <Setter Property="Control.FontFamily" Value="/CombatManager;component/Fonts/#Segoe UI" />
        </Style>
        <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="1" CornerRadius="8">
                            <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false" Margin="6,-1,-2,-1">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TabCheckBox" TargetType="{x:Type CheckBox}">
            <Setter Property="Margin" Value="0,0,0,1" />
            <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" />
        </Style>
        <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <AdornerDecorator>
                        <ContentPresenter/>
                    </AdornerDecorator>
                    <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" IsTabStop="false" Visibility="Collapsed" Style="{DynamicResource ResizeGripStyle1}"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                        <Condition Property="WindowState" Value="Normal"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="WindowStyle1" TargetType="{x:Type Window}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <AdornerDecorator>
                                    <ContentPresenter/>
                                </AdornerDecorator>
                            </Border>
                            <ResizeGrip HorizontalAlignment="Right" Margin="0" VerticalAlignment="Bottom" Width="18.496" Height="18.656"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                    <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ResizeGripStyle1" TargetType="{x:Type ResizeGrip}">
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ResizeGrip}">
                        <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="DataTemplate1">
            <Grid>
                <TextBlock Margin="0,0,0,4.04" TextWrapping="Wrap" Text="{Binding name}" d:LayoutOverrides="Width, Height"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="DataTemplate2">
            <Grid>
                <TextBlock Margin="0,0,0,4.04" TextWrapping="Wrap" Text="{Binding Name}" d:LayoutOverrides="Width, Height"/>
            </Grid>
        </DataTemplate>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TitleBarButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Storyboard1"/>
                        </ControlTemplate.Resources>
                        <Grid Height="Auto">
                            <Rectangle x:Name="BackRect" Margin="0,0,0,1" StrokeStartLineCap="Round" StrokeEndLineCap="Round" RadiusX="0" RadiusY="0" StrokeThickness="1" Fill="{DynamicResource LightBackgroundBrush}"/>
                            <ContentPresenter x:Name="contentPresenter" Margin="0,0,0,1" OpacityMask="Black"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Selector.IsSelected" Value="True">
                                <Setter
    						Property="Fill" TargetName="BackRect">
                                    <Setter.Value
    						>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorBDark}"/>
                                    </Setter.Value>

                                </Setter>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ThumbStyle2" TargetType="{x:Type Thumb}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <Grid Background="{DynamicResource SecondaryColorBDarkerBrush}">

                                <Path Data="M1,1L4,4 7,1" Width="8" Height="5" Stroke="White" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>


                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonFocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderDefaulted="{TemplateBinding Button.IsDefaulted}" SnapsToDevicePixels="true">
                            <Grid>
                                <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" d:LayoutOverrides="Height"/>
                            </Grid>
                        </Microsoft_Windows_Themes:ButtonChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ThumbStyle3" TargetType="{x:Type Thumb}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid Background="White" Opacity="0.01"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="-90"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="180"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="90"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="29"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Margin="0" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox" RadiusX="8" RadiusY="8">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" Stroke="DarkGray" VerticalAlignment="Center" Width="19">
                                    <Ellipse.Fill>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorALight}"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" StrokeThickness="2" VerticalAlignment="Center">
                                    <Path.Stroke>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorADarker}"/>
                                    </Path.Stroke>
                                </Path>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,4,7,5" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" HorizontalAlignment="Left"/>
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TabControlStyle2" TargetType="{x:Type TabControl}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="4,4,4,4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <Rectangle RadiusY="6" RadiusX="6" Margin="0,1,1,1" Grid.RowSpan="2" Grid.Column="1">
                                <Rectangle.Stroke>
                                    <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                </Rectangle.Stroke>
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{DynamicResource PrimaryColorLight}"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Border BorderThickness="1">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource SecondaryColorADarker}"/>
                                </Border.BorderBrush>
                                <ScrollViewer x:Name="scrollViewer" VerticalScrollBarVisibility="Auto" Background="White" BorderThickness="1">
                                    <ScrollViewer.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorADarker}"/>
                                    </ScrollViewer.BorderBrush>
                                    <TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="2,2,0,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" Background="Transparent"/>
                                </ScrollViewer>
                            </Border>
                            <Border x:Name="ContentPanel" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
                                <Setter Property="Margin" TargetName="scrollViewer" Value="0,3,0,0"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TabItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="TabItemMouseOverBackground" Color="{StaticResource SecondaryColorBLighter}"/>
        <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1"/>
        <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4"/>
        <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>
        <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>

            <Setter Property="Padding" Value="6,1,6,1"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid SnapsToDevicePixels="true">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="Content" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemSelectedBackground}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemSelectedBackground}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="false"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemMouseOverBackground}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4"/>
        <SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
        <Style x:Key="EmptyCheckBoxFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckRadioFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnClick1"/>

                        </ControlTemplate.Resources>
                        <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                            <BulletDecorator.Bullet>
                                <Microsoft_Windows_Themes:BulletChrome BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsChecked="{TemplateBinding IsChecked}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}"/>
                            </BulletDecorator.Bullet>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="ButtonBase.Click">
                                <BeginStoryboard Storyboard="{StaticResource OnClick1}"/>
                            </EventTrigger>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                                <Setter Property="Padding" Value="4,0,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="ConditionTemplate">
            <Grid Height="50" Loaded="Grid_Loaded" ToolTip="{StaticResource ConditionToolTip}" ContextMenu="{DynamicResource ConditionContextMenu}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="18"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" MinWidth="28.25"/>
                    <ColumnDefinition Width="Auto" MinWidth="16"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Image Grid.Column="0" Width="16" Height="16" Source="{Binding Condition.Image, Converter={StaticResource StringImageSmallIconConverter}}" Margin="1,4.5"/>

                <TextBlock Grid.Column="1" TextWrapping="NoWrap" Text="{Binding Condition.Name}" d:LayoutOverrides="Width" VerticalAlignment="Center" Margin="2,0" TextTrimming="CharacterEllipsis"/>

                <TextBox Grid.Column="2" Width="25" Text="{Binding Turns, Converter={StaticResource TurnsConverter}, UpdateSourceTrigger=PropertyChanged}" Margin="2,0" VerticalAlignment="Center"/>
                <Button x:Name="DeleteConditionButton" Margin="2,4.52,2,4.48" RenderTransformOrigin="0.222,-0.601" Grid.Column="3" Width="16" Height="16" Grid.Row="0" Grid.ColumnSpan="1" Background="{StaticResource characterButtonBrush}" HorizontalAlignment="Stretch" Click="DeleteConditionButton_Click">
                    <Button.ToolTip>Delete</Button.ToolTip>
                    <Path Data="M1,1 L7,7 M7,1 L1,7" Width="8" Height="8" Stroke="Black" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                </Button>
                <TextBox Grid.Row="1" Grid.ColumnSpan="4" TextWrapping="Wrap" VerticalContentAlignment="Top" Text="{Binding Details}" d:LayoutOverrides="Width, Height" VerticalAlignment="Center" Margin="2,0"/>
            </Grid>

        </DataTemplate>
        <Style x:Key="ListBoxItemStyle2" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" CornerRadius="0" Margin="1,1,1,0" BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource PrimaryColorMedium}"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource PrimaryColorLighter}"/>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorMedium}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="Bd">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource PrimaryColorDark}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
            <WrapPanel IsItemsHost="True" Orientation="Horizontal"/>
        </ItemsPanelTemplate>
        <DataTemplate x:Key="ConditionMiniTemplate">
            <Grid ToolTip="{StaticResource ConditionToolTip}" x:Name="MiniTemplateGrid" Loaded="MiniTemplateGrid_Loaded" ContextMenu="{DynamicResource ConditionContextMenu}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="16"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0" Width="16" Height="16" Source="{Binding Condition.Image, Converter={StaticResource StringImageSmallIconConverter}}"/>
                <TextBlock Grid.Column="1" Padding="4,0,4,0" Text="{Binding Turns}" Visibility="{Binding Turns, Converter={StaticResource NotNullVisibilityCollapsedConverter}}" Foreground="Black" FontWeight="Bold"/>
            </Grid>
        </DataTemplate>
        <Style x:Key="ConditionMiniContainerTemplate" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="3,3,3,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid Margin="0" ContextMenu="{DynamicResource ConditionContextMenu}">
                            <Rectangle Margin="4,4,2,2" StrokeThickness="6" RadiusX="6" RadiusY="6" Fill="#51000000"/>
                            <Rectangle Margin="2,2,4,4" StrokeThickness="6" RadiusX="6" RadiusY="6" Fill="White"/>
                            <Border x:Name="Bd" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" CornerRadius="6" Margin="0,0,2,2" BorderThickness="2">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
        <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
        <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
        <DataTemplate x:Key="InitiativeFollowerItemTemplate">
            <Grid >
                <TextBlock Margin="25,0,0,0" TextWrapping="NoWrap" Text="{Binding Name}" ToolTip="{Binding Name}" d:LayoutOverrides="Width, Height" TextTrimming="CharacterEllipsis">
                    <TextBlock.Foreground>
                        <Binding  Path="HP" Converter="{StaticResource hpToBrushConverter}">
                            <Binding.ConverterParameter>
                                <local:BrushCollection>
                                    <SolidColorBrush Color="{DynamicResource ThemeTextForeground}"/>
                                    <SolidColorBrush Color="Blue"/>
                                    <SolidColorBrush Color="Red"/>
                                </local:BrushCollection>
                            </Binding.ConverterParameter>
                        </Binding>
                    </TextBlock.Foreground>
                </TextBlock>
            </Grid>
        </DataTemplate>
        <SolidColorBrush x:Key="TabItemSelectedBackground2" Color="#F9F9F9"/>
        <Style x:Key="TabItemStyle3" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="6,1,6,1"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="-90"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.LayoutTransform>
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="Content" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemHotBackground}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Background" TargetName="Bd" Value="White"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="false"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
                            </MultiTrigger>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Top"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="-2,-2,-2,-1"/>
                                <Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Bottom"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="-2,-1,-2,-2"/>
                                <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Left"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="-2,-2,-1,-2"/>
                                <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Right"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="-1,-2,-2,-2"/>
                                <Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GridSplitterPreviewStyle">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Fill="#80000000"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GridSplitterStyle1" TargetType="{x:Type GridSplitter}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridSplitter}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <Grid>
                                <Rectangle RadiusX="0" RadiusY="0" Fill="{DynamicResource PrimaryColorGradientBrush}" Margin="0" Height="20" VerticalAlignment="Top" Style="{DynamicResource SplitterRectangle}"/>
                                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Selected" Foreground="White" Margin="6.317,0.329,0,0" Width="80.322" d:LayoutOverrides="HorizontalAlignment" VerticalAlignment="Center" FontSize="10.667" FontWeight="Bold"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GridSplitterStyle2" TargetType="{x:Type GridSplitter}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridSplitter}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <Grid>
                                <Rectangle RadiusX="0" RadiusY="0" Fill="{DynamicResource PrimaryColorGradientBrush}" Margin="0" Height="20" VerticalAlignment="Top" Style="{DynamicResource SplitterRectangle}"/>
                                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Monster DB" Foreground="White" Margin="6.317,0.329,0,0" Width="80.322" d:LayoutOverrides="HorizontalAlignment" VerticalAlignment="Center" FontSize="10.667" FontWeight="Bold"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ButtonControlTemplate1" TargetType="{x:Type Button}">
            <ContentPresenter/>
        </ControlTemplate>
        <Storyboard x:Key="OnColumnsToggleChecked">
            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="PlayerListGrid">
                <EasingInt32KeyFrame KeyTime="0" Value="1"/>
            </Int32AnimationUsingKeyFrames>
            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="MonsterListGrid">
                <EasingInt32KeyFrame KeyTime="0" Value="1"/>
            </Int32AnimationUsingKeyFrames>
            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="MonsterListGrid">
                <EasingInt32KeyFrame KeyTime="0" Value="1"/>
            </Int32AnimationUsingKeyFrames>
            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="MonsterListGrid">
                <EasingInt32KeyFrame KeyTime="0" Value="0"/>
            </Int32AnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="MonsterListGrid">
                <EasingThicknessKeyFrame KeyTime="0" Value="0,1,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="MonsterColumnsToggleChecked">
            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="CurrentMonsterFlowDocument">
                <EasingInt32KeyFrame KeyTime="0" Value="1"/>
            </Int32AnimationUsingKeyFrames>
            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="CurrentMonsterFlowDocument">
                <EasingInt32KeyFrame KeyTime="0" Value="3"/>
            </Int32AnimationUsingKeyFrames>
            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="SmallMonsterFlowDocument">
                <EasingInt32KeyFrame KeyTime="0" Value="1"/>
            </Int32AnimationUsingKeyFrames>
            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="SmallMonsterFlowDocument">
                <EasingInt32KeyFrame KeyTime="0" Value="1"/>
            </Int32AnimationUsingKeyFrames>
            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="SmallMonsterFlowDocument">
                <EasingInt32KeyFrame KeyTime="0" Value="1"/>
            </Int32AnimationUsingKeyFrames>
            <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="SmallMonsterFlowDocument">
                <EasingInt32KeyFrame KeyTime="0" Value="3"/>
            </Int32AnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="SmallMonsterFlowDocument">
                <EasingThicknessKeyFrame KeyTime="0" Value="3,0,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="GridSplitterStyle3" TargetType="{x:Type GridSplitter}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridSplitter}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <Grid>
                                <Rectangle RadiusX="0" RadiusY="0" Fill="{DynamicResource PrimaryColorGradientBrush}" Margin="0" Height="20" VerticalAlignment="Top" Style="{DynamicResource SplitterRectangle}"/>
                                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Dice Roller" Foreground="White" Margin="6.317,0.329,0,0" Width="80.322" d:LayoutOverrides="HorizontalAlignment" VerticalAlignment="Center" FontSize="10.667" FontWeight="Bold"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ButtonBaseControlTemplate1" TargetType="{x:Type ButtonBase}">
            <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderDefaulted="{TemplateBinding Button.IsDefaulted}" SnapsToDevicePixels="True">
                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="17.833"/>
            </Microsoft_Windows_Themes:ButtonChrome>
            <ControlTemplate.Triggers>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="RenderDefaulted" TargetName="Chrome" Value="True"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="RenderPressed" TargetName="Chrome" Value="True"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FFADADAD"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TabItemSelectedBackground3" Color="#F9F9F9"/>
        <Style x:Key="DieTabContainerStyle" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextOnPrimaryDarkerBrush}"/>
            <Setter Property="Padding" Value="6,1,6,1"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid SnapsToDevicePixels="true">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}">
                                <ContentPresenter x:Name="Content" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="0,2">
                                    <ContentPresenter.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ContentPresenter.LayoutTransform>
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemHotBackground}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemSelectedBackground}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="false"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
                            </MultiTrigger>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Top"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="-2,-2,-2,-1"/>
                                <Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Bottom"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="-2,-1,-2,-2"/>
                                <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Left"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="-2,-2,-1,-2"/>
                                <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Right"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="-1,-2,-2,-2"/>
                                <Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxItemStyle3" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="3,3,3,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid Margin="0" ContextMenu="{DynamicResource ConditionContextMenu}">
                            <Rectangle Margin="4,4,2,2" StrokeThickness="6" RadiusX="6" RadiusY="6" Fill="#51000000"/>
                            <Rectangle Margin="2,2,4,4" StrokeThickness="6" RadiusX="6" RadiusY="6" Fill="White"/>
                            <Border x:Name="Bd" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" CornerRadius="6" Margin="0,0,2,0" BorderThickness="2">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxItemStyle4" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="3,3,3,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid Margin="0" ContextMenu="{DynamicResource ConditionContextMenu}">
                            <Rectangle Margin="2,2,0,0" StrokeThickness="6" RadiusX="6" RadiusY="6" Fill="#51000000"/>
                            <Rectangle Margin="0,0,2,2" StrokeThickness="6" RadiusX="6" RadiusY="6" Fill="White"/>
                            <Border x:Name="Bd" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" CornerRadius="6" Margin="0,0,2,0" BorderThickness="2">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="GameMapListItemTemplate">
            <Grid MouseDown="GameMapListItemGrid_MouseDown" MouseUp="GameMapListItemGrid_MouseUp"  d:DesignWidth="537.501">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="55"/>
                    <ColumnDefinition Width="267.6"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="MapViewButton" HorizontalAlignment="Left"  Click="MapViewButton_Click" Margin="0,0,0,-0.4">
                    <StackPanel Orientation="Horizontal">
                        <Image HorizontalAlignment="Left" Width="16" Height="16" Grid.Row="4" Source="Images/globe-16.png"/>
                        <TextBlock Text="Open" Margin="3,0"/>
                    </StackPanel>
                </Button>
                <TextBlock x:Name="textBlock" Margin="9.8,5,10.2,4.6" TextWrapping="Wrap" Text="{Binding Name}" ToolTip="{Binding Name}" Grid.ColumnSpan="1" Grid.Column="1" Width="Auto" TextTrimming="CharacterEllipsis"/>

                <Button x:Name="MapFileButton"  HorizontalAlignment="Stretch" Width="Auto" Margin="5,0,5,-0.4" Grid.Column="2" Click="MapFileButton_Click" ToolTip="Update Image File" >
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Images/folderopen-32.png" Width="16" Height="16" Margin="0,1,0,0" HorizontalAlignment="Center" MaxWidth="16" MaxHeight="16" VerticalAlignment="Center"/>
                        <TextBlock>Update Map File</TextBlock>
                    </StackPanel>
                </Button>
                <Button x:Name="MapMoveButton"  HorizontalAlignment="Left" Width="Auto" Margin="0,0,3,-0.4" Grid.Column="3" Click="MapMoveButton_Click" >
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Images/Move.png" Width="16" Height="16" Margin="0,1,0,0" HorizontalAlignment="Center" MaxWidth="16" MaxHeight="16" VerticalAlignment="Center"/>
                        <TextBlock>Move</TextBlock>
                    </StackPanel>
                </Button>
                <Button x:Name="MapDeleteButton"  HorizontalAlignment="Left" Width="Auto" Click="MapDeleteButton_Click" Margin="0,0,3,-0.4" Grid.Column="4" >
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Images/delete-16.png" Width="16" Height="16" Margin="0,1,0,0" HorizontalAlignment="Center" MaxWidth="16" MaxHeight="16" VerticalAlignment="Center"/>
                        <TextBlock>Delete</TextBlock>
                    </StackPanel>
                </Button>
            </Grid>
        </DataTemplate>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <Style x:Key="ThemeListBoxStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{DynamicResource ThemeTextBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource ThemeTextForegroundBrush}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="ScrollViewer.Background" Value="{DynamicResource ThemeTextBackgroundBrush}"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="MapsListFolderTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition MinWidth="100"/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Button x:Name="MapFolderItemOpen" Grid.Column="0" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Width="25" Height="25" Click="MapFolderItemOpen_Click"  >
                    <Image Source="Images/openHS@2x.png"></Image>
                </Button>
                <TextBlock x:Name="MapFolderItemNameText" Grid.Column="1" HorizontalAlignment="Stretch" Margin="4,3,4,3" VerticalAlignment="Stretch" Text="{Binding Name}" MouseLeftButtonDown="MapFolderItemNameText_MouseLeftButtonDown" >
                </TextBlock>
                <Button x:Name="MapFolderItemDelete" Grid.Column="2" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Width="25" Height="25" Click="MapFolderItemDelete_Click"  >
                    <Image Source="Images/delete-16.png"></Image>
                </Button>
            </Grid>
        </DataTemplate>
        <Style x:Key="GhostSpecialItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid Width="150" d:DesignHeight="18.667">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock HorizontalAlignment="Stretch"  Grid.Column="0" Margin="0,0,0,0" TextWrapping="Wrap" Text="{Binding CRText}" VerticalAlignment="Center" FontSize="10"/>
                            <TextBlock HorizontalAlignment="Stretch"  Grid.Column="1" Margin="0,0,0,0" TextWrapping="Wrap" Text="{Binding Name}" VerticalAlignment="Center"  FontSize="10"/>
                            <Button x:Name="GhostSpecialUpButton"  Grid.Column="2" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Click="GhostSpecialUpButton_Click">
                                <Image Source="Images/arrowup-16.png"/>
                            </Button>
                            <Button x:Name="GhostSpecialDownButton" Grid.Column="3" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Click="GhostSpecialDownButton_Click" FontSize="10">
                                <Image Source="Images/arrowdown-16.png"/>
                            </Button>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Window.Title>
        <StaticResource ResourceKey="ApplicationTitle"/>
    </Window.Title>
    <Window.CommandBindings>
        <CommandBinding Command="local:MainWindow.UndoCommand" Executed="UndoCommand_Executed"/>
        <CommandBinding Command="local:MainWindow.RedoCommand" Executed="RedoCommand_Executed"/>

        <CommandBinding Command="local:MainWindow.NextCommand" Executed="NextCommand_Executed"/>
        <CommandBinding Command="local:MainWindow.PrevCommand" Executed="PrevCommand_Executed"/>
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="38.667"/>
            <RowDefinition/>
            <RowDefinition Height="34.128"/>
        </Grid.RowDefinitions>
        <Rectangle RadiusX="0" RadiusY="0" StrokeThickness="3" x:Name="MainRectangle1" MouseLeftButtonDown="MainRectangle_MouseLeftButtonDown" MouseLeftButtonUp="MainRectangle_MouseLeftButtonUp" MouseMove="MainRectangle_MouseMove" Stroke="Black" Margin="0" Grid.RowSpan="3" />
        <Rectangle Fill="{DynamicResource PrimaryColorDarkerBrush}" RadiusX="0" RadiusY="0" StrokeThickness="3" x:Name="MainRectangle" MouseLeftButtonDown="MainRectangle_MouseLeftButtonDown" MouseLeftButtonUp="MainRectangle_MouseLeftButtonUp" MouseMove="MainRectangle_MouseMove" Stroke="White" Margin="1" Grid.RowSpan="3" />
        <Button Height="34.667" HorizontalAlignment="Stretch" Margin="8,4,9,0" x:Name="TitleBarButton" VerticalAlignment="Top" Focusable="False" IsTabStop="False" Style="{DynamicResource TitleBarButtonStyle}" MouseDoubleClick="TitleBarButton_MouseDoubleClick">
            <Rectangle MouseLeftButtonDown="MainRectangle_MouseLeftButtonDown" Margin="0,0,0.2,-0.2" />
        </Button>
        <Button x:Name="TitleBarMenuButton" HorizontalAlignment="Left" VerticalAlignment="Bottom" d:LayoutOverrides="HorizontalAlignment"  Margin="8,0,0,1" Style="{DynamicResource ButtonMainStyle}" Height="29.667" Click="TitleBarMenuButton_Click">

            <StackPanel Orientation="Horizontal">

                <TextBlock Text="{StaticResource ApplicationTitle}" TextWrapping="Wrap" FontSize="16" Height="22" IsHitTestVisible="False" FontWeight="Bold" Foreground="White" d:LayoutOverrides="Width" Padding="3,0,0,0">

                </TextBlock>
                <Path Data="M0,0 L1,1 L2,0" Fill="#FFF4F4F5" HorizontalAlignment="Right" Margin="6,3,6,0" Stretch="Fill"  Width="10" Height="8">
                    <Path.Effect>
                        <DropShadowEffect/>
                    </Path.Effect>
                </Path>
            </StackPanel>
        </Button>
        <Button x:Name="CloseButton" HorizontalAlignment="Right" Margin="0,0,9,2.13" Width="24" Click="CloseButton_Click" RenderTransformOrigin="0.812,0.682" VerticalAlignment="Bottom" Height="22" IsTabStop="False" Focusable="False" Background="{DynamicResource SecondaryColorBDarkBrush}">
            <Button.Effect>
                <DropShadowEffect ShadowDepth="0"/>
            </Button.Effect>
            <Grid Width="16" Height="16">
                <Path Stretch="Fill" Stroke="#97CBC7C7" Data="M0,0 L1,1 M0,1 L1,0" StrokeThickness="3" Margin="1.582,2.039,0.418,-0.039"  StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                <Path Stretch="Fill" Stroke="White" Data="M0,0 L1,1 M0,1 L1,0" StrokeThickness="3" Margin="1.167,1.375,0.833,0.625"  StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
            </Grid>
        </Button>
        <Button x:Name="MinimizeButton" HorizontalAlignment="Right" Margin="0,0,65,2.13" Width="24" RenderTransformOrigin="0.812,0.682" Click="MinimizeButton_Click" VerticalAlignment="Bottom" Height="22" IsTabStop="False" Focusable="False" Background="{DynamicResource SecondaryColorBDarkBrush}">
            <Button.Effect>
                <DropShadowEffect ShadowDepth="0"/>
            </Button.Effect>
            <Grid Width="12" Height="12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="12*" />
                    <ColumnDefinition Width="0*" />
                </Grid.ColumnDefinitions>
                <Path Stretch="Fill" Stroke="#97CBC7C7" Data="M0,0 L1,0" StrokeThickness="3" Margin="-1,5,-2,-5" Width="15" StrokeEndLineCap="Round" StrokeStartLineCap="Round" Grid.ColumnSpan="2" />
                <Path Stretch="Fill" Stroke="White" Data="M0,0 L1,0" StrokeThickness="3" Margin="-1,5.625,-2,-3.625" Width="15" StrokeEndLineCap="Round" StrokeStartLineCap="Round" Grid.ColumnSpan="2" />
            </Grid>
        </Button>
        <Button x:Name="MaximizeButton" HorizontalAlignment="Right" Margin="0,0,37,2.13" Width="24" RenderTransformOrigin="0.812,0.682" Click="MaximizeButton_Click" VerticalAlignment="Bottom" Height="22" IsTabStop="False" Focusable="False" Background="{DynamicResource SecondaryColorBDarkBrush}">
            <Button.Effect>
                <DropShadowEffect ShadowDepth="0"/>
            </Button.Effect>
            <Grid Width="12" Height="12">
                <Path Stretch="Fill" Stroke="#97CBC7C7" Data="M0,0 L1,0 L1,1 L0,1 z" StrokeThickness="3" Margin="0.835,1.002,-0.835,-1.002"   StrokeLineJoin="Round"/>
                <Path Stretch="Fill" Stroke="White" Data="M0,0 L1,0 L1,1 L0,1 z" StrokeThickness="3" Margin="0.334,0.501,-0.334,-0.501"  StrokeLineJoin="Round"/>
            </Grid>
        </Button>
        <TabControl Margin="8.667,3,9,0" Grid.Row="1" BorderBrush="#008C8E94" BorderThickness="1,1,0,1" Style="{DynamicResource TabControlStyle1}" x:Name="MainTabControl" SelectionChanged="MainTabControl_SelectionChanged" Background="Transparent">
            <TabItem x:Name="CombatTab" IsSelected="True">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Width="16" Height="16" Source="Images\Sword-16.png"/>
                        <TextBlock Text="Combat"/>
                    </StackPanel>
                </TabItem.Header>
                <Grid Margin="0,0,0,0" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0"/>
                        <RowDefinition Height="35
						"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="29"/>
                        <RowDefinition Height="0.474*"/>
                        <RowDefinition Height="0.526*"/>
                        <RowDefinition Height="28.372"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0"/>
                        <ColumnDefinition Width="190"/>
                        <ColumnDefinition Width="230"/>
                        <ColumnDefinition Width="230"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="0"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.ColumnSpan="4" Grid.Column="1" Grid.Row="2" Grid.RowSpan="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="188.737"/>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="47*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Margin="0,1,2.8,-0.4">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.592*"/>
                                <RowDefinition Height="20"/>
                                <RowDefinition Height="0.408*"/>
                            </Grid.RowDefinitions>
                        </Grid>
                        <GridSplitter Width="3" Margin="0,0,38.6,-0.4" Grid.ColumnSpan="2">
                            <GridSplitter.Background>
                                <SolidColorBrush Color="{DynamicResource PrimaryColorDark}"/>
                            </GridSplitter.Background>
                        </GridSplitter>
                        <AvalonDock:DockingManager x:Name="CombatViewDockingManager" Margin="0,1,-0.2,-0.4" RenderTransformOrigin="0.615,0.493" Grid.ColumnSpan="3" Background="#FFE9ECFA">
                            <AvalonDock:ResizingPanel Orientation="Horizontal">
                                <AvalonDock:ResizingPanel Orientation="Vertical" AvalonDock:ResizingPanel.ResizeWidth="187">
                                    <AvalonDock:DockablePane >
                                        <AvalonDock:DockableContent x:Name="CombatContent" Title="Combat Sequence" IsCloseable="False">
                                            <Border CornerRadius="5" Background="{DynamicResource LightBackgroundBrush}" BorderThickness="0,0,0,3" MinHeight="110" MinWidth="185" Margin="0">
                                                <Grid Margin="0,0,0,3">
                                                    <Button Margin="4,0,73,6" x:Name="initiativeButton" Click="Initiative_Click" VerticalAlignment="Bottom" ContextMenu="{DynamicResource InitiativeButtonContextMenu}">
                                                        <Grid>
                                                            <Image Source="Images/d20-40.png" HorizontalAlignment="Left" Width="40" Margin="0,-0.667,0,0.667" />
                                                            <TextBlock Text="Roll Initiative" Margin="47,0,6,0" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Center" />

                                                        </Grid>
                                                    </Button>
                                                    <Button x:Name="SortInitiaitveButton" HorizontalAlignment="Right" Margin="0,0,3,30" Width="64.084" Click="SortInitiaitveButton_Click" Height="22" VerticalAlignment="Bottom" HorizontalContentAlignment="Right">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="Images\sort.ico" Width="24" Height="24" VerticalAlignment="Center" />
                                                            <TextBlock Text="Sort" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Center" Margin="3" />
                                                        </StackPanel>
                                                    </Button>
                                                    <Button x:Name="ResetInitiaitveButton" HorizontalAlignment="Right" Margin="0,0,3,6.352" Width="64.084" Click="ResetInitiaitveButton_Click" Height="22" HorizontalContentAlignment="Right" VerticalAlignment="Bottom">

                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="Images/reset-16.png" Width="16" Height="16" VerticalAlignment="Center" />
                                                            <TextBlock Text="Reset" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Center" Margin="3" />
                                                        </StackPanel>
                                                    </Button>
                                                    <ListBox Margin="4,44,3,54.332" x:Name="combatListBox" ItemsSource="{Binding}" ItemTemplate="{DynamicResource CombatListItemTemplate}" HorizontalContentAlignment="Stretch" BorderBrush="White" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Style="{DynamicResource ThemeListBoxStyle}" SelectionChanged="CombatListBox_SelectionChanged" />
                                                    <Button Margin="61.2,2.706,55.237,0" VerticalAlignment="Top" Click="NextButtonClick" x:Name="NextButton" IsEnabled="{Binding IsEmpty, Converter={StaticResource boolInverter}}" Height="37.294" Style="{DynamicResource ButtonMainStyle}" ToolTip="Next Turn (Ctrl+N)" d:LayoutOverrides="HorizontalAlignment, VerticalAlignment">
                                                        <StackPanel Orientation="Horizontal">
                                                            <StackPanel Orientation="Vertical">
                                                                <TextBlock HorizontalAlignment="Center"><Run Text="Next"/></TextBlock>
                                                                <TextBlock HorizontalAlignment="Center"><Run Text="Turn"/></TextBlock>
                                                            </StackPanel>
                                                            <Path Data="M1,4 L5,4 L5,1 L11,6 L5,11 L5,8 L1,8 z" StrokeLineJoin="Round" StrokeThickness="1" Width="16" RenderTransformOrigin="0.5,0.5" Height="15" Stretch="Fill" Stroke="White" Margin="11,0,0,0">
                                                                <Path.RenderTransform>
                                                                    <TransformGroup>
                                                                        <ScaleTransform ScaleX="1.6" ScaleY="1.6"/>
                                                                        <SkewTransform/>
                                                                        <RotateTransform/>
                                                                        <TranslateTransform/>
                                                                    </TransformGroup>
                                                                </Path.RenderTransform>
                                                                <Path.Fill>
                                                                    <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                                                </Path.Fill>
                                                            </Path>
                                                        </StackPanel>
                                                    </Button>
                                                    <Button Margin="4,2.706,0,0" x:Name="PrevButton" Click="PrevButton_Click" IsEnabled="{Binding IsEmpty, Converter={StaticResource boolInverter}}" VerticalAlignment="Top" Style="{DynamicResource ButtonMainStyle}" Height="37.294" ToolTip="Previous Turn (Ctrl+P)" d:LayoutOverrides="VerticalAlignment" HorizontalAlignment="Left" Width="53.2" >
                                                        <StackPanel Orientation="Horizontal">
                                                            <Path Data="M1,4 L5,4 L5,1 L11,6 L5,11 L5,8 L1,8 z" StrokeLineJoin="Round" StrokeThickness="1" Width="16" RenderTransformOrigin="0.5,0.5" Height="15" Stretch="Fill" Stroke="White" Margin="0,0,2,0">
                                                                <Path.RenderTransform>
                                                                    <TransformGroup>
                                                                        <ScaleTransform/>
                                                                        <SkewTransform/>
                                                                        <RotateTransform Angle="180"/>
                                                                        <TranslateTransform/>
                                                                    </TransformGroup>
                                                                </Path.RenderTransform>
                                                                <Path.Fill>
                                                                    <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                                                </Path.Fill>
                                                            </Path>
                                                            <StackPanel Orientation="Vertical">
                                                                <TextBlock HorizontalAlignment="Center"><Run Text="Prev"/></TextBlock>
                                                                <TextBlock HorizontalAlignment="Center"><Run Text="Turn"/></TextBlock>
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Button>
                                                    <Button HorizontalAlignment="Right" Margin="0,2.706,27,0" 
        												IsEnabled="{Binding CurrentItem, Converter={StaticResource itemExistsConverter}}" x:Name="MoveUpButton" Click="MoveUpButton_Click" VerticalAlignment="Top" ToolTip="Move Character Up" Height="37.294" Style="{DynamicResource ButtonMainStyle}" d:LayoutOverrides="VerticalAlignment" Width="24.237">
                                                        <StackPanel>
                                                            <Path Data="M1,4 L5,4 L5,1 L11,6 L5,11 L5,8 L1,8 z" StrokeLineJoin="Round" StrokeThickness="1" HorizontalAlignment="Center" Width="16" RenderTransformOrigin="0.5,0.5" Height="15" Stretch="Fill" Stroke="White">
                                                                <Path.Fill>
                                                                    <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                                                </Path.Fill>
                                                                <Path.RenderTransform>
                                                                    <TransformGroup>
                                                                        <ScaleTransform/>
                                                                        <SkewTransform/>
                                                                        <RotateTransform Angle="-90"/>
                                                                        <TranslateTransform/>
                                                                    </TransformGroup>
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </StackPanel>
                                                    </Button>
                                                    <Button Margin="0,2.706,3.5,0"
        												IsEnabled="{Binding CurrentItem, Converter={StaticResource itemExistsConverter}}" x:Name="MoveDownButton" Click="MoveDownButton_Click" VerticalAlignment="Top" HorizontalAlignment="Right" ToolTip="Move Character Down" Height="37.294" Style="{DynamicResource ButtonMainStyle}" d:LayoutOverrides="VerticalAlignment" Width="24">
                                                        <StackPanel>
                                                            <Path Data="M1,4 L5,4 L5,1 L11,6 L5,11 L5,8 L1,8 z" StrokeLineJoin="Round" StrokeThickness="1" HorizontalAlignment="Left" Width="16" RenderTransformOrigin="0.5,0.5" Height="15" Stretch="Fill" Stroke="White">
                                                                <Path.Fill>
                                                                    <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                                                </Path.Fill>
                                                                <Path.RenderTransform>
                                                                    <TransformGroup>
                                                                        <ScaleTransform/>
                                                                        <SkewTransform/>
                                                                        <RotateTransform Angle="90"/>
                                                                        <TranslateTransform/>
                                                                    </TransformGroup>
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </StackPanel>
                                                    </Button>
                                                </Grid>
                                            </Border>

                                        </AvalonDock:DockableContent>
                                    </AvalonDock:DockablePane>
                                    <AvalonDock:DockablePane x:Name="RollerPane">
                                        <AvalonDock:DockableContent x:Name="DieRollerContent" Title="Die Roller" IsCloseable="False">
                                            <Grid x:Name="DiceRollerGrid" Margin="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <FlowDocumentScrollViewer VerticalScrollBarVisibility="Auto" x:Name="DieRollViewer" Grid.ColumnSpan="2" Background="#00000000">
                                                    <FlowDocument Foreground="{DynamicResource ThemeTextForegroundBrush}" Background="{DynamicResource ThemeTextBackgroundBrush}" x:Name="DieRollDocument" FontFamily="Segoe UI" FontSize="12" TextAlignment="Left" PagePadding="3"/>
                                                </FlowDocumentScrollViewer>
                                                <TabControl Grid.Row="2" TabStripPlacement="Left" ItemContainerStyle="{DynamicResource DieTabContainerStyle}" Margin="0" Grid.RowSpan="1" Padding="0" SelectedIndex="0" Background="White" Foreground="Black">
                                                    <TabItem>
                                                        <TabItem.Header >
                                                            <TextBlock><Run Text="Fast"/></TextBlock>
                                                        </TabItem.Header>
                                                        <Border Margin="1" Grid.Row="1" d:LayoutOverrides="Width" BorderThickness="1" CornerRadius="3" Padding="1">
                                                            <Border.Background>
                                                                <SolidColorBrush Color="{DynamicResource PrimaryColorLight}"/>
                                                            </Border.Background>
                                                            <Border.BorderBrush>
                                                                <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                                            </Border.BorderBrush>
                                                            <WrapPanel Orientation="Horizontal">
                                                                <Button x:Name="D4Button1" Height="23" Style="{DynamicResource ButtonSecondaryStyle}" Tag="4"  Width="48" Click="InstantDieButtonPressed" Margin="0,0,3,2" HorizontalContentAlignment="Right" >
                                                                    <StackPanel Orientation="Horizontal">
                                                                        <TextBlock Text="d4" Margin="0,0,4,0" VerticalAlignment="Center" />
                                                                        <Image Source="Images/d4-16.png"/>
                                                                    </StackPanel>
                                                                </Button>
                                                                <Button x:Name="D6Button1" Height="23" Style="{DynamicResource ButtonSecondaryStyle}" Tag="6"  Width="48" Click="InstantDieButtonPressed" Margin="0,0,3,2" HorizontalContentAlignment="Right" >
                                                                    <StackPanel Orientation="Horizontal">
                                                                        <TextBlock Text="d6" Margin="0,0,4,0"  VerticalAlignment="Center" />
                                                                        <Image Source="Images/d6-16.png"/>
                                                                    </StackPanel>
                                                                </Button>
                                                                <Button x:Name="D8Button1" Height="23" Style="{DynamicResource ButtonSecondaryStyle}" Tag="8"  Width="48" Click="InstantDieButtonPressed" Margin="0,0,3,2" HorizontalContentAlignment="Right" >
                                                                    <StackPanel Orientation="Horizontal">
                                                                        <TextBlock Text="d8" Margin="0,0,4,0"  VerticalAlignment="Center" />
                                                                        <Image Source="Images/d8-16.png"/>
                                                                    </StackPanel>
                                                                </Button>
                                                                <Button x:Name="D10Button1" Height="23" Style="{DynamicResource ButtonSecondaryStyle}" Tag="10" Click="InstantDieButtonPressed"  Width="48" Margin="0,0,3,2" HorizontalContentAlignment="Right" >
                                                                    <StackPanel Orientation="Horizontal">
                                                                        <TextBlock Text="d10" Margin="0,0,4,0"  VerticalAlignment="Center"  />
                                                                        <Image Source="Images/d10-16.png"/>
                                                                    </StackPanel>
                                                                </Button>
                                                                <Button x:Name="D12Button1" Height="23" Style="{DynamicResource ButtonSecondaryStyle}" Tag="12" Click="InstantDieButtonPressed" Width="48" Margin="0,0,3,2" HorizontalContentAlignment="Right">
                                                                    <StackPanel Orientation="Horizontal">
                                                                        <TextBlock Text="d12" Margin="0,0,4,0"  VerticalAlignment="Center" />
                                                                        <Image Source="Images/d12-16.png"/>
                                                                    </StackPanel>
                                                                </Button>
                                                                <Button x:Name="D20Button1" Height="23" Style="{DynamicResource ButtonSecondaryStyle}" HorizontalAlignment="Left" Width="48" Tag="20" Click="InstantDieButtonPressed" Margin="0,0,3,2" HorizontalContentAlignment="Right" >
                                                                    <StackPanel Orientation="Horizontal">
                                                                        <TextBlock Text="d20" Margin="0,0,4,0"  VerticalAlignment="Center" />
                                                                        <Image Source="Images/d20p-16.png"/>
                                                                    </StackPanel>
                                                                </Button>
                                                                <Button x:Name="D100Button1" Height="23" Style="{DynamicResource ButtonSecondaryStyle}" HorizontalAlignment="Left" Width="48" Tag="100" Click="InstantDieButtonPressed" TabIndex="2147483644" Margin="0,0,3,2" HorizontalContentAlignment="Right" >
                                                                    <StackPanel Orientation="Horizontal">
                                                                        <TextBlock Text="d%" Margin="0,0,4,0"  VerticalAlignment="Center" />
                                                                        <Image Source="Images/d100-16.png"/>
                                                                    </StackPanel>
                                                                </Button>
                                                            </WrapPanel>
                                                        </Border>
                                                    </TabItem>
                                                    <TabItem Header="Text">
                                                        <Border Margin="1" Grid.Row="2" Grid.RowSpan="2" d:LayoutOverrides="Height" BorderThickness="1" CornerRadius="3" Padding="1">
                                                            <Border.BorderBrush>
                                                                <SolidColorBrush Color="{DynamicResource SecondaryColorADarker}"/>
                                                            </Border.BorderBrush>
                                                            <Border.Background>
                                                                <SolidColorBrush Color="{DynamicResource SecondaryColorADark}"/>
                                                            </Border.Background>
                                                            <StackPanel Orientation="Vertical">
                                                                <WrapPanel Orientation="Horizontal" d:LayoutOverrides="Width">
                                                                    <Button x:Name="D4Button" Width="48" Height="23" Style="{DynamicResource ButtonMainStyle}" Tag="4" Click="DieButtonPressed" Margin="0,0,3,2" HorizontalContentAlignment="Right"  >
                                                                        <StackPanel Orientation="Horizontal">
                                                                            <TextBlock Text="d4" Margin="0,0,4,0" VerticalAlignment="Center"/>
                                                                            <Image Source="Images/d4-16.png"/>
                                                                        </StackPanel>
                                                                    </Button>
                                                                    <Button x:Name="D6Button" Width="48" Height="23" Style="{DynamicResource ButtonMainStyle}" Tag="6" Click="DieButtonPressed" Margin="0,0,3,2" HorizontalContentAlignment="Right"  >
                                                                        <StackPanel Orientation="Horizontal">
                                                                            <TextBlock Text="d6" Margin="0,0,4,0"  VerticalAlignment="Center"/>
                                                                            <Image Source="Images/d6-16.png"/>
                                                                        </StackPanel>
                                                                    </Button>
                                                                    <Button x:Name="D8Button" Width="48" Height="23" Style="{DynamicResource ButtonMainStyle}" Tag="8" Click="DieButtonPressed" Margin="0,0,3,2" HorizontalContentAlignment="Right"  >
                                                                        <StackPanel Orientation="Horizontal">
                                                                            <TextBlock Text="d8" Margin="0,0,4,0"  VerticalAlignment="Center"/>
                                                                            <Image Source="Images/d8-16.png"/>
                                                                        </StackPanel>
                                                                    </Button>
                                                                    <Button x:Name="D10Button" Height="23" Style="{DynamicResource ButtonMainStyle}" Tag="10" Click="DieButtonPressed" HorizontalAlignment="Left" Width="48" Margin="0,0,3,2" HorizontalContentAlignment="Right"  >
                                                                        <StackPanel Orientation="Horizontal">
                                                                            <TextBlock Text="d10" Margin="0,0,4,0"  VerticalAlignment="Center"/>
                                                                            <Image Source="Images/d10-16.png"/>
                                                                        </StackPanel>
                                                                    </Button>
                                                                    <Button x:Name="D12Button" Height="23" Style="{DynamicResource ButtonMainStyle}" Tag="12" Click="DieButtonPressed" HorizontalAlignment="Left" Width="48" Margin="0,0,3,2" HorizontalContentAlignment="Right"  >
                                                                        <StackPanel Orientation="Horizontal">
                                                                            <TextBlock Text="d12" Margin="0,0,4,0"  VerticalAlignment="Center"/>
                                                                            <Image Source="Images/d12-16.png"/>
                                                                        </StackPanel>
                                                                    </Button>
                                                                    <Button x:Name="D20Button" Height="23" Style="{DynamicResource ButtonMainStyle}" HorizontalAlignment="Left" Width="48" Tag="20" Click="DieButtonPressed" Margin="0,0,3,2" HorizontalContentAlignment="Right"  >
                                                                        <StackPanel Orientation="Horizontal">
                                                                            <TextBlock Text="d20" Margin="0,0,4,0"  VerticalAlignment="Center"/>
                                                                            <Image Source="Images/d20p-16.png"/>
                                                                        </StackPanel>
                                                                    </Button>
                                                                    <Button x:Name="D100Button" Height="23" Style="{DynamicResource ButtonMainStyle}" HorizontalAlignment="Left" Width="48" Tag="100" Click="DieButtonPressed" TabIndex="2147483644" Margin="0,0,3,2" HorizontalContentAlignment="Right"  >
                                                                        <StackPanel Orientation="Horizontal">
                                                                            <TextBlock Text="d%" Margin="0,0,4,0"  VerticalAlignment="Center"/>
                                                                            <Image Source="Images/d100-16.png"/>
                                                                        </StackPanel>
                                                                    </Button>
                                                                </WrapPanel>
                                                                <Grid Height="23.533">
                                                                    <Button x:Name="RollDiceButton" Content="Roll" HorizontalAlignment="Left" Width="41.667" Style="{DynamicResource ButtonSecondaryStyle}" Click="RollDiceButton_Click"/>
                                                                    <ComboBox x:Name="DieRollText" Margin="45.667,0.79,27,0.788" KeyUp="DieRollText_KeyUp" IsEditable="True" d:LayoutOverrides="Height" />
                                                                    <Button x:Name="ClearDieText" HorizontalAlignment="Right" Width="23" RenderTransformOrigin="0.395,-0.152" ToolTip="Clear" Style="{DynamicResource ButtonSecondaryStyle}" Margin="0,0.791,0,0.788" Click="ClearDieText_Click" >
                                                                        <Path Stretch="Fill" Stroke="White" Data="M0,0 L1,1 M0,1 L1,0" StrokeThickness="3"  StrokeStartLineCap="Round" StrokeEndLineCap="Round" Height="14" Width="14"/>
                                                                    </Button>
                                                                </Grid>
                                                            </StackPanel>
                                                        </Border>
                                                    </TabItem>
                                                </TabControl>
                                                <Button Content="Clear" x:Name="ClearDieRollDocumentButton" Style="{DynamicResource ButtonSecondaryStyle}" Padding="0" Template="{DynamicResource ButtonBaseControlTemplate1}" BorderBrush="{DynamicResource PrimaryColorGradientBrush}" Click="ClearDieRollDocumentButton_Click" Height="23" Grid.Row="1" />
                                                <Grid Margin="0,0,27,-2.756" Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisibilityCollapsedConverter}, ElementName=SourcesButton}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Grid.Row="2" d:LayoutOverrides="GridBox" RenderTransformOrigin="0.5,0">
                                                    <Rectangle RadiusX="6" RadiusY="6" Stroke="White">
                                                        <Rectangle.Fill>
                                                            <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                    <StackPanel Margin="6">
                                                        <CheckBox x:Name="UseCoreContentCheck" IsChecked="True" Foreground="Black" Checked="UseContentCheck_Checked" Unchecked="UseContentCheck_Checked" >
                                                            <TextBlock Text="Pathfinder Core" Foreground="White" />
                                                        </CheckBox>
                                                        <CheckBox x:Name="UseAPGContentCheck"  IsChecked="True" Foreground="Black" Checked="UseContentCheck_Checked" Unchecked="UseContentCheck_Checked">
                                                            <TextBlock Text="Advanced Player's Guide" Foreground="White" />
                                                        </CheckBox>
                                                        <CheckBox x:Name="UseModulesContentCheck"  IsChecked="True" Foreground="Black" Checked="UseContentCheck_Checked" Unchecked="UseContentCheck_Checked">
                                                            <TextBlock Text="Adventures and Modules" Foreground="White" />
                                                        </CheckBox>
                                                        <CheckBox x:Name="UseChroniclesContentCheck"  IsChecked="True" Foreground="Black" Checked="UseContentCheck_Checked" Unchecked="UseContentCheck_Checked">
                                                            <TextBlock Text="Pathfinder Chronicles and Companions" Foreground="White" />
                                                        </CheckBox>
                                                        <CheckBox x:Name="UseUltimateMagicContentCheck" IsChecked="True" Foreground="Black" Checked="UseContentCheck_Checked" Unchecked="UseContentCheck_Checked">
                                                            <TextBlock Text="Ultimate Magic" Foreground="White" />
                                                        </CheckBox>
                                                        <CheckBox x:Name="UseUltimateCombatContentCheck" IsChecked="True" Foreground="Black" Checked="UseContentCheck_Checked" Unchecked="UseContentCheck_Checked">
                                                            <TextBlock Text="Ultimate Combat" Foreground="White" />
                                                        </CheckBox>
                                                        <CheckBox x:Name="UseOtherContentCheck" IsChecked="True" Foreground="Black" Checked="UseContentCheck_Checked" Unchecked="UseContentCheck_Checked">
                                                            <TextBlock Text="Other" Foreground="White" />
                                                        </CheckBox>
                                                    </StackPanel>
                                                </Grid>


                                            </Grid>

                                        </AvalonDock:DockableContent>
                                    </AvalonDock:DockablePane>
                                </AvalonDock:ResizingPanel>
                                <AvalonDock:DocumentPane x:Name="PartyDocumentPane">

                                    <AvalonDock:DocumentContent x:Name="PartyContent" Title="Party" IsCloseable="False">
                                        <Grid x:Name="PlayerListGrid" Margin="0" MinWidth="220">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition/>
                                                <RowDefinition Height="28"/>
                                            </Grid.RowDefinitions>
                                            <Rectangle Fill="{DynamicResource LightBackgroundBrush}" Margin="0,2,0,0" RadiusY="0" RadiusX="0" Stroke="White" StrokeThickness="0" Grid.RowSpan="3"/>
                                            <ListBox x:Name="playerListBox" ItemsSource="{Binding}" ItemTemplate="{DynamicResource CharacterDataTemplateSmall}" HorizontalContentAlignment="Stretch" ItemContainerStyle="{DynamicResource ListBoxItemStyle1}" BorderBrush="{DynamicResource ThemeTextBackgroundBrush}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="False" GotFocus="playerListBox_GotFocus" SelectionMode="Extended" Grid.Row="1" Style="{DynamicResource ThemeListBoxStyle}" />
                                            <Button Margin="5.931,4.988,0,0" Click="Button_Click" HorizontalAlignment="Left" Width="23.236" VerticalAlignment="Top" Height="21.96" Style="{DynamicResource ButtonMainStyle}" ToolTip="Add a Blank Party Member">
                                                <Path Data="M3,0 L6,0 L6,3 L9,3 L9,6 L6,6 L6,9 L3,9 L3,6 L0,6 L0,3 L3,3 z" HorizontalAlignment="Center" StrokeStartLineCap="Round" Stretch="Fill" StrokeEndLineCap="Round" Width="15" Height="15" Stroke="#FF115E16" Fill="#FF3AE54D" VerticalAlignment="Center"/>
                                            </Button>
                                            <Button Margin="0,4.988,34.736,0" x:Name="SavePartyButton" Click="SavePartyButton_Click" VerticalAlignment="Top" Height="21.96" HorizontalAlignment="Right" Width="23.236" ToolTip="Save Party" Style="{DynamicResource ButtonMainStyle}" >
                                                <Image Width="16" Height="16" Source="Images/saveHS.png" Stretch="Fill"/>
                                            </Button>
                                            <Button Margin="0,4.988,7.5,0" x:Name="LoadPartyButton" Click="LoadPartyButton_Click" VerticalAlignment="Top" Height="21.96" HorizontalAlignment="Right" Width="23.236" ToolTip="Load Party" Style="{DynamicResource ButtonMainStyle}" >
                                                <Image Width="16" Height="16" Source="Images/openHS.png" Stretch="Fill"/>
                                            </Button>
                                            <ToggleButton x:Name="PartyMiniModeButton" Content="Mini" Margin="0,5.78,61.972,0" HorizontalAlignment="Right" Style="{DynamicResource ButtonMainStyle}" Width="36.047" Checked="PartyMiniModeButton_Checked" Unchecked="PartyMiniModeButton_Unchecked" Height="21.168" VerticalAlignment="Top"/>
                                            <Button x:Name="ClearPlayersButton" Content="Clear" HorizontalAlignment="Left" Margin="4.667,1.333,0,3.129" Width="41.667" Click="ClearPlayersButton_Click" Style="{DynamicResource ButtonSecondaryStyle}" Grid.Row="2"/>
                                        </Grid>

                                    </AvalonDock:DocumentContent>

                                </AvalonDock:DocumentPane>

                                <AvalonDock:DocumentPane x:Name="MainDocumentPane">

                                    <AvalonDock:DocumentContent x:Name="MonsterContent" Title="Monsters" IsCloseable="False">
                                        <Grid x:Name="MonsterListGrid" Margin="0" MinWidth="220">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition />
                                                <RowDefinition Height="28"/>
                                            </Grid.RowDefinitions>
                                            <Rectangle Fill="{DynamicResource LightBackgroundBrush}" Margin="0,2,0,0" RadiusY="0" RadiusX="0" Stroke="White" StrokeThickness="0" Grid.RowSpan="5"/>
                                            <Button Margin="3.5,5.653,0,0" Click="Button_Click_1" VerticalAlignment="Top" HorizontalAlignment="Left" Style="{DynamicResource ButtonMainStyle}" ToolTip="Add a Blank Monster" VerticalContentAlignment="Top">
                                                <StackPanel Orientation="Horizontal">
                                                    <Path Data="M3,0 L6,0 L6,3 L9,3 L9,6 L6,6 L6,9 L3,9 L3,6 L0,6 L0,3 L3,3 z" HorizontalAlignment="Center" StrokeStartLineCap="Round" Stretch="Fill" StrokeEndLineCap="Round" Width="15" Height="15" Stroke="#FF115E16" Fill="#FF3AE54D" VerticalAlignment="Center"/>
                                                    <TextBlock Text="Blank" Margin="3,0"/>
                                                </StackPanel>
                                            </Button>
                                            <Button Margin="0,5.613,35.236,0" x:Name="SaveEncounterButton" VerticalAlignment="Top" Height="21.96" HorizontalAlignment="Right" Width="23.236" Click="SaveEncounterButton_Click" ToolTip="Save Encounter" Style="{DynamicResource ButtonMainStyle}" VerticalContentAlignment="Top">
                                                <Image Width="16" Height="16" Source="Images/saveHS.png" Stretch="Fill"/>
                                            </Button>
                                            <Button Margin="0,5.613,8,0" x:Name="LoadEncounterButton" VerticalAlignment="Top" Height="21.96" HorizontalAlignment="Right" Width="23.236" Click="LoadEncounterButton_Click" ToolTip="Load Encounter" Style="{DynamicResource ButtonMainStyle}" VerticalContentAlignment="Top">
                                                <Image Width="16" Height="16" Source="Images/openHS.png" Stretch="Fill"/>
                                            </Button>
                                            <ToggleButton x:Name="MonsterMiniModeButton" Content="Mini" Margin="0,5.613,62.472,0" HorizontalAlignment="Right" Style="{DynamicResource ButtonMainStyle}" Width="36.047" Checked="MonsterMiniModeButton_Checked" Unchecked="MonsterMiniModeButton_Unchecked" Height="21.96" VerticalAlignment="Top" VerticalContentAlignment="Top" />
                                            <ListBox x:Name="monsterListBox" ItemsSource="{Binding}" ItemTemplate="{DynamicResource CharacterDataTemplate}" HorizontalContentAlignment="Stretch" ItemContainerStyle="{DynamicResource ListBoxItemStyle1}" BorderBrush="White" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="False" GotFocus="monsterListBox_GotFocus" SelectionMode="Extended" Grid.Row="1" Style="{DynamicResource ThemeListBoxStyle}"/>
                                            <Border x:Name="EncounterXPDisplay" BorderThickness="1" Margin="50.334,2,3.333,2" CornerRadius="0" Visibility="{Binding CR, Converter={StaticResource notNullVisibilityConverter}}" Background="{DynamicResource DarkBackgroundBrush}" Grid.Row="4">
                                                <TextBlock x:Name="XPDisplayText" TextWrapping="Wrap" VerticalAlignment="Center" Margin="7,0,0,2" Foreground="White" HorizontalAlignment="Left" Width="160.333" >
                                                    <TextBlock.Text>
                                                        <MultiBinding StringFormat="CR {0}, XP {1}">
                                                            <Binding Path="CR"/>
                                                            <Binding Path="XP"/>
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </Border>
                                            <Button x:Name="ClearMonstersButton" Content="Clear" HorizontalAlignment="Left" Margin="4.667,1.333,0,3.129" Width="41.667" Click="ClearMonstersButton_Click" Style="{DynamicResource ButtonSecondaryStyle}" Grid.Row="4"/>

                                        </Grid>

                                    </AvalonDock:DocumentContent>
                                </AvalonDock:DocumentPane>
                                <AvalonDock:ResizingPanel Orientation="Vertical" AvalonDock:ResizingPanel.ResizeWidth="200">
                                    <AvalonDock:DockablePane>

                                        <AvalonDock:DockableContent x:Name="CurrentMonsterContent" Title="Current Monster" IsCloseable="False">
                                            <FlowDocumentScrollViewer Background="White" x:Name="CurrentMonsterFlowDocument" VerticalScrollBarVisibility="Auto" FontSize="12" Margin="0" Panel.ZIndex="13" Foreground="Black">
                                                <FlowDocument FontFamily="/CombatManager;component/Fonts/#Segoe UI" FontSize="12" TextAlignment="Left" Foreground="{DynamicResource ThemeTextForegroundBrush}" Background="{DynamicResource ThemeTextBackgroundBrush}"/>
                                            </FlowDocumentScrollViewer>
                                        </AvalonDock:DockableContent>

                                        <AvalonDock:DockableContent x:Name="SelectedMonsterContent" Title="Selected Monster" IsCloseable="False">

                                            <FlowDocumentScrollViewer Background="White" x:Name="SmallMonsterFlowDocument" VerticalScrollBarVisibility="Auto" FontSize="12" Grid.Row="3" Margin="0,0.184,0,0" Grid.ColumnSpan="2" Foreground="Black">
                                                <FlowDocument Foreground="{DynamicResource ThemeTextForegroundBrush}" Background="{DynamicResource ThemeTextBackgroundBrush}" FontFamily="/CombatManager;component/Fonts/#Segoe UI" FontSize="12" TextAlignment="Left" />
                                            </FlowDocumentScrollViewer>
                                        </AvalonDock:DockableContent>
                                    </AvalonDock:DockablePane>
                                    <AvalonDock:DockablePane>
                                        <AvalonDock:DockableContent x:Name="MonsterDBContent" Title="Monster DB" IsCloseable="False">
                                            <Grid x:Name="MonsterDBBoxGrid" Grid.Row="3" Margin="2,1.432,2,2">
                                                <TextBox x:Name="monsterFilterBox" Margin="0,0,27,0" VerticalAlignment="Top" TextWrapping="Wrap" VerticalContentAlignment="Top" KeyDown="monsterFilterBox_KeyDown"  />
                                                <Button x:Name="ClearText" HorizontalAlignment="Right" VerticalAlignment="Top" Width="23" Height="21.96" RenderTransformOrigin="0.395,-0.152" Click="ClearFilter_Click" ToolTip="Clear" Style="{DynamicResource ButtonSecondaryStyle}" >
                                                    <Path Stretch="Fill" Stroke="White" Data="M0,0 L1,1 M0,1 L1,0" StrokeThickness="3"  StrokeStartLineCap="Round" StrokeEndLineCap="Round" Height="14" Width="14"/>
                                                </Button>
                                                <ListBox x:Name="monsterDBBox" ItemsSource="{Binding}" MouseDoubleClick="listBox1_MouseDoubleClick" BorderBrush="White" Margin="0,25.96,0,52.71" ScrollViewer.HorizontalScrollBarVisibility="Disabled" d:LayoutOverrides="VerticalAlignment" Style="{DynamicResource ThemeListBoxStyle}">
                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <TextBlock Text="{Binding Name}" FontSize="14"/>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>
                                                </ListBox>
                                                <ComboBox Height="23" HorizontalAlignment="Right" x:Name="CombatTabNPCFilterBox" VerticalAlignment="Bottom" Width="70.25" SelectionChanged="CombatTabNPCFilterBox_SelectionChanged" Style="{DynamicResource ComboBoxStyle1}" Margin="0,0,0,25.71">
                                                    <ComboBoxItem x:Name="CombatNPCFilterMonstersItem" Content="Monsters"/>
                                                    <ComboBoxItem x:Name="CombatNPCFilterNPCItem" Content="NPCs"/>
                                                    <ComboBoxItem x:Name="CombatNPCFilterCustomItem" Content="Custom"/>
                                                    <ComboBoxItem x:Name="CombatNPCFilterAllItem" Content="All" IsSelected="True" />

                                                </ComboBox>
                                                <Button x:Name="AddMonsterFromListButton" IsEnabled="{Binding CurrentItem, Converter={StaticResource itemExistsConverter}}" Margin="0,0,72.25,25.71" VerticalAlignment="Bottom" Click="AddMonsterFromListButton_Click" Height="23">
                                                    <StackPanel Orientation="Horizontal">
                                                        <Path Data="M3,0 L6,0 L6,3 L9,3 L9,6 L6,6 L6,9 L3,9 L3,6 L0,6 L0,3 L3,3 z" HorizontalAlignment="Left" StrokeStartLineCap="Round" Stretch="Fill" StrokeEndLineCap="Round" Width="15" Height="15" Margin="2,0,0,0" Stroke="#FF115E16" Fill="#FF3AE54D">
                                                            <Path.Effect>
                                                                <DropShadowEffect ShadowDepth="2"/>
                                                            </Path.Effect>
                                                        </Path>
                                                        <TextBlock Text="Add" Margin="6,0,7,0" HorizontalAlignment="Left"/>
                                                    </StackPanel>
                                                </Button>
                                                <Border Margin="0" Background="{DynamicResource PrimaryColorDarkBrush}" Height="24.372" VerticalAlignment="Bottom">
                                                    <ComboBox Height="23" x:Name="HPModeCombo" Margin="0,0,0,0" d:LayoutOverrides="Height" Style="{DynamicResource ComboBoxStyle1}" SelectedIndex="0" SelectionChanged="HPModeCombo_SelectionChanged">
                                                        <ComboBoxItem x:Name="DefaultHPItem" Content="Default Monster HP"/>
                                                        <ComboBoxItem x:Name="RollHPItem" Content="Roll Monster HP"/>
                                                        <ComboBoxItem x:Name="MaxHPItem" Content="Max Monster HP"/>
                                                    </ComboBox>
                                                </Border>
                                            </Grid>
                                        </AvalonDock:DockableContent>
                                    </AvalonDock:DockablePane>
                                </AvalonDock:ResizingPanel>
                            </AvalonDock:ResizingPanel>
                        </AvalonDock:DockingManager>
                    </Grid>
                    <Grid Grid.Column="0" Margin="0,0,0,0" Grid.Row="1" Grid.ColumnSpan="7">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0"/>
                            <ColumnDefinition Width="190"/>
                            <ColumnDefinition Width="230"/>
                            <ColumnDefinition Width="230"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="{DynamicResource LightBackgroundBrush}" Margin="0" RadiusX="0" RadiusY="0" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                        <Rectangle Margin="0" RadiusX="0" RadiusY="0" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Fill="{DynamicResource DarkBackgroundBrush}" Stroke="{DynamicResource ResourceKey=RectangleBorderBrush}" StrokeThickness="1"/>
                        <TextBlock HorizontalAlignment="Left" Margin="8,0,0,0" TextWrapping="Wrap" FontSize="16" Grid.Column="1" Grid.Row="1" d:LayoutOverrides="Height" Text="Active Character:" Foreground="White" VerticalAlignment="Center" />
                        <StackPanel  Grid.Column="2" Margin="-50.083,0,8,0" Orientation="Horizontal"  >
                            <TextBlock x:Name="CurrentPlayerText"  Text="{Binding CurrentCharacter.Name}" FontSize="16" d:LayoutOverrides="Height, GridBox" TextTrimming="CharacterEllipsis" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" />
                            <ListBox x:Name="CurrentPlayerConditions" ItemsSource="{Binding CurrentCharacter.Stats.ActiveConditions}" ItemsPanel="{DynamicResource ItemsPanelTemplate1}" ItemTemplate="{DynamicResource ConditionMiniTemplate}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemContainerStyle="{DynamicResource ListBoxItemStyle3}" ScrollViewer.VerticalScrollBarVisibility="Disabled" VerticalAlignment="Center"/>
                        </StackPanel>
                        <Rectangle Fill="{DynamicResource LightBackgroundBrush}" Margin="1,1,76.032,1" RadiusX="0" RadiusY="0" Grid.Column="3" Grid.Row="1"/>
                        <Rectangle Margin="-1,0,0,0" RadiusX="0" RadiusY="0" Grid.Column="3" Grid.Row="1" Fill="{DynamicResource DarkBackgroundBrush}" Stroke="{DynamicResource RectangleBorderBrush}" StrokeThickness="1"/>
                        <TextBlock x:Name="CurrentRoundText" Margin="61.943,3.54,0,4.18" FontSize="16" Grid.Column="3" Grid.Row="1" TextTrimming="CharacterEllipsis" Foreground="White" d:LayoutOverrides="Height" Text="{Binding Round}" HorizontalAlignment="Left" Width="43.858" TextAlignment="Center" VerticalAlignment="Center" />
                        <TextBlock HorizontalAlignment="Left" Margin="8,3.54,0,4.18" TextWrapping="Wrap" FontSize="16" Grid.Column="3" Grid.Row="1" Text="Round:" Foreground="White" d:LayoutOverrides="Height" VerticalAlignment="Center" />
                        <Button x:Name="ResetRoundButton" ToolTip="Reset Round" Margin="109.801,5.02,0,4.02" Grid.Column="3" Grid.Row="1"  Click="ResetRoundButton_Click" Content="Reset" HorizontalAlignment="Left" Padding="1,0" RenderTransformOrigin="0.76,0.226" d:LayoutOverrides="Height" Foreground="White" Width="40.167" Style="{DynamicResource ButtonSecondaryStyle}" />
                    </Grid>

                </Grid>
            </TabItem>
            <TabItem x:Name="FeatsTab" IsSelected="True">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Width="16" Height="16" Source="Images\star-16.png" />
                        <TextBlock Text="Feats" Margin="5,0,0,0" />
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="29.912"/>
                        <RowDefinition Height="156.851"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="185.333"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle Fill="{DynamicResource LightBackgroundBrush}" Margin="1,0" RadiusY="0" RadiusX="0" Grid.RowSpan="3" Stroke="White" StrokeThickness="0"/>
                    <Rectangle Fill="{DynamicResource LightBackgroundBrush}" Margin="1,0" RadiusY="0" RadiusX="0" Grid.RowSpan="3" Stroke="White" StrokeThickness="0" Grid.Column="1"/>
                    <ListBox x:Name="FeatListBox" Margin="1,0,1,8" ItemsSource="{Binding}" ItemTemplate="{DynamicResource DataTemplate2}" Grid.RowSpan="2" ScrollViewer.HorizontalScrollBarVisibility="Hidden" Grid.Row="1" BorderBrush="{DynamicResource ThemeTextBackgroundBrush}"  Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}" />
                    <FlowDocumentScrollViewer x:Name="FeatFlowDocument" Grid.Column="1" Margin="1,32.96,1,8" VerticalScrollBarVisibility="Auto" Grid.RowSpan="2" Grid.Row="1"  Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}">
                        <FlowDocument  Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}" FontFamily="/CombatManager;component/Fonts/#Segoe UI" TextAlignment="Left" />
                    </FlowDocumentScrollViewer>
                    <TextBox Margin="8,5.04,31.28,0" TextWrapping="Wrap" VerticalContentAlignment="Top" x:Name="featFilterBox" VerticalAlignment="Top" TextChanged="featFilterBox_TextChanged" />
                    <Button x:Name="ClearFeatText" HorizontalAlignment="Right" Margin="0,5.04,6,0" Width="23" RenderTransformOrigin="0.395,-0.152" Height="21.811" VerticalAlignment="Top" Click="ClearFeatText_Click">
                        <Path Stretch="Fill" Stroke="Black" Data="M0,0 L1,1 M0,1 L1,0" StrokeThickness="3"  StrokeStartLineCap="Round" StrokeEndLineCap="Round" Height="14" Width="14"/>
                    </Button>
                    <ComboBox x:Name="FeatCustomFilterComboBox" Grid.Column="1" HorizontalAlignment="Left" Margin="34,3.912,0,4.088" Width="69" d:LayoutOverrides="Height" SelectionChanged="FeatTypeFilterComboBox_SelectionChanged">
                        <ComboBoxItem x:Name="AllCustomFeatsItem" Content="All" IsSelected="True" />
                        <ComboBoxItem x:Name="CustomFeatsItem" Content="Custom"/>
                    </ComboBox>
                    <ComboBox x:Name="FeatTypeFilterComboBox" Grid.Column="1" HorizontalAlignment="Left" Margin="107,3.912,0,4.088" Width="120" SelectionChanged="FeatTypeFilterComboBox_SelectionChanged" d:LayoutOverrides="Height">
                        <ComboBoxItem x:Name="AllFeatsItem" Content="All Types" IsSelected="True" />
                    </ComboBox>
                    <Button x:Name="FeatsPrintButton" Grid.Column="1" HorizontalAlignment="Right" Margin="0,4,4.25,4" d:LayoutOverrides="Height" Click="FeatsPrintButton_Click">
                        <Image Height="16" Source="Images/PrintHS.png" Stretch="Fill" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Button>
                    <Button x:Name="ResetFeatsFilterButton" Grid.Column="1" HorizontalAlignment="Left" Margin="8,3.912,0,0" VerticalAlignment="Top" Click="ResetFeatsFilterButton_Click">
                        <Image Height="16" Source="Images/reset-16.png" Stretch="Fill" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Button>
                    <Border BorderThickness="1" Grid.Column="1" Grid.Row="1" Background="{DynamicResource PrimaryColorDarkerBrush}" Padding="0,2,0,1" Height="32.96" VerticalAlignment="Top">
                        <Grid>
                            <Button x:Name="CustomizeFeatButton" Content="Customize" HorizontalAlignment="Left" Margin="87,3,0,3" Width="75" d:LayoutOverrides="Height" Style="{DynamicResource ButtonMainStyle}" FontWeight="Bold" ToolTip="Create a new Custom Feat"
        						IsEnabled="{Binding Converter={StaticResource itemExistsConverter}}" Click="CustomizeFeatButton_Click" />

                            <Button x:Name="DeleteCustomFeatButton" Content="Delete" HorizontalAlignment="Right" Margin="0,3,4,3" Width="75" d:LayoutOverrides="Height" Background="{DynamicResource SecondaryColorBGradientBrush}" Foreground="White" FontWeight="Bold"
        						Visibility="{Binding IsCustom, Converter={StaticResource boolToVisibilityConverter}}" Click="DeleteCustomFeatButton_Click"/>
                            <Button x:Name="EditCustomFeatButton" Content="Edit" HorizontalAlignment="Left" Margin="166,3,0,3" Width="75" Style="{DynamicResource ButtonMainStyle}" FontWeight="Bold" d:LayoutOverrides="Height" ToolTip="Edit this Custom Feat"
        						Visibility="{Binding IsCustom, Converter={StaticResource boolToVisibilityConverter}}" Click="EditCustomFeatButton_Click"/>
                            <Button x:Name="NewCustomFeatButton" Content="New" HorizontalAlignment="Left" Margin="8,3,0,3" Width="75" Style="{DynamicResource ButtonMainStyle}" FontWeight="Bold" ToolTip="Add a new Custom Feat" d:LayoutOverrides="Height" Click="NewCustomFeatButton_Click"/>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
            <TabItem x:Name="MonstersTab" IsSelected="True">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Width="16" Height="16" Source="Images\monster-16.png" />
                        <TextBlock Text="Monsters" Margin="5,0,0,0" />
                    </StackPanel>
                </TabItem.Header>
                <Grid x:Name="MonsterTabAddToCombatButton">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="126.43"/>
                        <RowDefinition/>
                        <RowDefinition Height="Auto" MinHeight="31.0559999999999"/>
                        <RowDefinition Height="5.37200000000007"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="185.333"/>
                        <ColumnDefinition Width="600*"/>
                        <ColumnDefinition Width="32" />
                    </Grid.ColumnDefinitions>
                    <Rectangle Fill="{DynamicResource LightBackgroundBrush}" Margin="1,0" RadiusY="0" RadiusX="0" Grid.RowSpan="6" Stroke="White" StrokeThickness="0"/>
                    <Rectangle Fill="{DynamicResource LightBackgroundBrush}" Margin="1,0,2,0" RadiusY="0" RadiusX="0" Grid.RowSpan="6" Stroke="White" StrokeThickness="0" Grid.Column="1" Grid.ColumnSpan="2" />
                    <ListBox x:Name="MonstersListBox" Margin="1,6,1,3" ItemsSource="{Binding}" ItemTemplate="{DynamicResource DataTemplate2}" Grid.RowSpan="4" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.Row="1" BorderBrush="{DynamicResource ThemeTextBackgroundBrush}" Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}" />
                    <TextBox Margin="8,5.04,31.28,0" TextWrapping="Wrap" VerticalContentAlignment="Top" x:Name="MonsterTabFilterBox" VerticalAlignment="Top" TextChanged="MonsterTabFilterBox_TextChanged" />
                    <Button x:Name="ClearMonsterText" HorizontalAlignment="Right" Margin="0,5.04,6,0" Width="23" RenderTransformOrigin="0.395,-0.152" Height="21.811" VerticalAlignment="Top" Click="ClearMonsterText_Click">
                        <Path Stretch="Fill" Stroke="Black" Data="M0,0 L1,1 M0,1 L1,0" StrokeThickness="3"  StrokeStartLineCap="Round" StrokeEndLineCap="Round" Height="14" Width="14"/>
                    </Button>
                    <Button x:Name="MonsterPrintButton" Grid.Column="2" HorizontalAlignment="Right" Margin="0,4,5,0" d:LayoutOverrides="Height" Click="MonsterPrintButton_Click" Height="Auto" VerticalAlignment="Top">
                        <Image Height="16" Source="Images/PrintHS.png" Stretch="Fill" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Button>
                    <FlowDocumentScrollViewer x:Name="MonsterFlowDocument" Grid.Column="1" Margin="1,0,2,0"  Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}"  VerticalScrollBarVisibility="Auto" Grid.RowSpan="2" Grid.Row="2" Grid.ColumnSpan="2" >
                        <FlowDocument FontFamily="/CombatManager;component/Fonts/#Segoe UI" TextAlignment="Left" Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}"/>
                    </FlowDocumentScrollViewer>
                    <Expander x:Name="MonsterAdvancerExpander" Grid.Column="1" HorizontalAlignment="Left" Margin="5,4,0,3.968" Grid.Row="4" d:LayoutOverrides="Height" Style="{DynamicResource ExpanderStyle1}" IsExpanded="False">
                        <Expander.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock FontSize="16" Foreground="White" FontWeight="Bold" VerticalAlignment="Center">
                                    <TextBlock.Effect>
                                        <DropShadowEffect/>
                                    </TextBlock.Effect><Run Text="Monster Advancer"/></TextBlock>
                                <Button x:Name="ResetAdvancerButton" RenderTransformOrigin="-0.44,0.091" Click="ResetAdvancerButton_Click" VerticalAlignment="Center" Height="26.248" HorizontalAlignment="Left" Margin="5,0,0,0" Visibility="{Binding IsExpanded, Converter={StaticResource BoolToVisibilityCollapsedConverter}, ElementName=MonsterAdvancerExpander}" ToolTip="Reset">
                                    <Button.Background>
                                        <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
                                    </Button.Background>
                                    <Image Source="Images/reset-16.png" Width="16" Height="16" Margin="3,3,2,0"/>
                                </Button>
                            </StackPanel>
                        </Expander.Header>
                        <Grid Height="145" Width="634.937" Margin="0,3,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="29.968"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="157.5"/>
                                <ColumnDefinition Width="170.922"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Rectangle RadiusX="6" RadiusY="6" Grid.Column="1" Grid.RowSpan="2" Margin="0,0,1,0">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{DynamicResource SecondaryColorALighter}"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle RadiusX="6" RadiusY="6" Margin="0,0,1,0" Grid.RowSpan="2">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{DynamicResource SecondaryColorALighter}"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <CheckBox x:Name="AdvancedMonsterCheck" Content="Advanced" HorizontalAlignment="Left" Margin="8,8.532,0,0" VerticalAlignment="Top" Checked="MonsterAdvancerCheck_Checked" Unchecked="MonsterAdvancerCheck_Checked" Grid.Row="1" />
                            <CheckBox x:Name="SummonAdvancedMonsterCheck" Margin="8,57.78,0,0" Checked="MonsterAdvancerCheck_Checked" Unchecked="MonsterAdvancerCheck_Checked" VerticalAlignment="Top" Grid.Row="1" HorizontalAlignment="Left" >
                                <ComboBox x:Name="SummonAdvancedMonsterCombo" SelectedIndex="0" Width="78.97" SelectionChanged="AdvancedMonsterMultiplierCombo_SelectionChanged">
                                    <ComboBoxItem Content="Celestial"/>
                                    <ComboBoxItem Content="Entropic"/>
                                    <ComboBoxItem Content="Fiendish"/>
                                    <ComboBoxItem Content="Resolute"/>
                                </ComboBox>
                            </CheckBox>
                            <CheckBox x:Name="SizeAdvancedMonsterCheck" Margin="8,31.82,0,0" VerticalAlignment="Top" Checked="MonsterAdvancerCheck_Checked" Unchecked="MonsterAdvancerCheck_Checked" Grid.Row="1" HorizontalAlignment="Left">
                                <ComboBox x:Name="SizeAdvancedMonsterCombo"  SelectedIndex="0" Width="79.103" SelectionChanged="AdvancedMonsterMultiplierCombo_SelectionChanged">
                                    <ComboBoxItem Content="Giant"/>
                                    <ComboBoxItem Content="Young"/>
                                </ComboBox>
                            </CheckBox>
                            <ComboBox x:Name="SizeAdvancedMultiplierCombo" HorizontalAlignment="Left" Margin="106.677,31.82,0,0" Width="42" SelectedIndex="0" SelectionChanged="AdvancedMonsterMultiplierCombo_SelectionChanged" Grid.Row="1" VerticalAlignment="Top">
                                <ComboBoxItem Content="x1"/>
                                <ComboBoxItem Content="x2"/>
                            </ComboBox>
                            <ComboBox x:Name="AdvancedMonsterMultiplierCombo" Margin="106.677,5.532,0,0" VerticalAlignment="Top" SelectedIndex="0" SelectionChanged="AdvancedMonsterMultiplierCombo_SelectionChanged" Grid.Row="1" HorizontalAlignment="Left" Width="42">
                                <ComboBoxItem Content="x1"/>
                                <ComboBoxItem Content="x2"/>
                                <ComboBoxItem Content="x3"/>
                            </ComboBox>
                            <Rectangle Margin="4,4,4,2" RadiusY="6" RadiusX="6">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <TextBlock HorizontalAlignment="Left" Margin="8,8,0,4.96" TextWrapping="Wrap" Text="Simple Templates" d:LayoutOverrides="Height" Foreground="White">
                                <TextBlock.Effect>
                                    <DropShadowEffect/>
                                </TextBlock.Effect>
                            </TextBlock>
                            <Rectangle Margin="4,4,4,2" RadiusY="6" RadiusX="6" Grid.Column="1">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <TextBlock HorizontalAlignment="Left" Margin="8,8,0,4.96" TextWrapping="Wrap" Text="Racial Hit Die" Foreground="White" d:LayoutOverrides="Height" Grid.Column="1">
                                <TextBlock.Effect>
                                    <DropShadowEffect/>
                                </TextBlock.Effect>
                            </TextBlock>
                            <CheckBox x:Name="RacialHDCheck"  Grid.Column="1" Margin="8,5.532,0,0" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left" Checked="MonsterAdvancerCheck_Checked" Unchecked="MonsterAdvancerCheck_Checked">
                                <ComboBox x:Name="RacialHDTypeCombo" SelectedIndex="0" Width="71.373" SelectionChanged="AdvancedMonsterMultiplierCombo_SelectionChanged">
                                    <ComboBoxItem Content="Add" />
                                    <ComboBoxItem Content="Remove" />
                                </ComboBox>
                            </CheckBox>
                            <ComboBox x:Name="RacialHDNumberCombo" Grid.Column="1" SelectedIndex="0" Margin="99.46,5.532,8,0" Grid.Row="1" VerticalAlignment="Top" SelectionChanged="AdvancedMonsterMultiplierCombo_SelectionChanged">
                                <ComboBoxItem Content="1" />
                                <ComboBoxItem Content="2" />
                                <ComboBoxItem Content="3" />
                                <ComboBoxItem Content="4" />
                                <ComboBoxItem Content="5" />
                                <ComboBoxItem Content="6" />
                                <ComboBoxItem Content="7" />
                                <ComboBoxItem Content="8" />
                                <ComboBoxItem Content="9" />
                                <ComboBoxItem Content="10" />
                                <ComboBoxItem Content="11" />
                                <ComboBoxItem Content="12" />
                                <ComboBoxItem Content="13" />
                                <ComboBoxItem Content="14" />
                                <ComboBoxItem Content="15" />
                                <ComboBoxItem Content="16" />
                                <ComboBoxItem Content="17" />
                                <ComboBoxItem Content="18" />
                                <ComboBoxItem Content="19" />
                                <ComboBoxItem Content="20" />
                            </ComboBox>
                            <ComboBox x:Name="RacialHDStatCombo" Grid.Column="1" Margin="76.92,31.82,8,0" Grid.Row="1" SelectedIndex="0" VerticalAlignment="Top" SelectionChanged="AdvancedMonsterMultiplierCombo_SelectionChanged">

                                <ComboBoxItem Content="Strength" />
                                <ComboBoxItem Content="Dexterity" />
                                <ComboBoxItem Content="Constitution" />
                                <ComboBoxItem Content="Intelligence" />
                                <ComboBoxItem Content="Wisdom" />
                                <ComboBoxItem Content="Charisma" />
                            </ComboBox>
                            <TextBlock HorizontalAlignment="Left" Margin="8,34.82,0,0" TextWrapping="Wrap" Text="Bonus Stat" Grid.Column="1" Grid.Row="1" VerticalAlignment="Top"/>
                            <TextBlock HorizontalAlignment="Left" Margin="8,60.78,0,0" TextWrapping="Wrap" Text="Size Change" Grid.Column="1" Grid.Row="1" VerticalAlignment="Top"/>
                            <ComboBox x:Name="RacialHDSizeChangeCombo" SelectedIndex="0"  Margin="76.92,57.78,8,0" Grid.Column="1" Grid.Row="1" VerticalAlignment="Top" SelectionChanged="AdvancedMonsterMultiplierCombo_SelectionChanged">
                                <ComboBoxItem x:Name="RacialHDSizeChangeNoneItem" Content="None" />
                                <ComboBoxItem x:Name="RacialHDSizeChange50Item" Content="50% HD" />
                            </ComboBox>
                            <Rectangle RadiusX="6" RadiusY="6" Grid.Column="2" Grid.RowSpan="2" Margin="0">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{DynamicResource SecondaryColorALighter}"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Margin="4,4,4,2" RadiusY="6" RadiusX="6" Grid.Column="2">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                                </Rectangle.Fill>
                            </Rectangle>
                            <TextBlock Margin="8,8,0,4.96" TextWrapping="Wrap" Text="Other" Foreground="White" Grid.Column="2" d:LayoutOverrides="Height" HorizontalAlignment="Left">
                                <TextBlock.Effect>
                                    <DropShadowEffect/>
                                </TextBlock.Effect>
                            </TextBlock>
                            <TabControl x:Name="OtherTemplateTabControl" Grid.Column="2" Margin="8,2,4,8" Grid.Row="1" TabStripPlacement="Left" Style="{DynamicResource TabControlStyle2}" ItemContainerStyle="{DynamicResource TabItemStyle1}" SelectedIndex="-1" Initialized="TabControl_Initialized" Background="Transparent" SelectionChanged="OtherTemplateTabControl_SelectionChanged">

                                <TabItem Header="None" Background="Transparent">
                                    <Grid Background="#FFE5E5E5"/>
                                </TabItem>

                                <TabItem x:Name="GhostTab" Background="Transparent" BorderBrush="#00000000">
                                    <TabItem.Header>Ghost</TabItem.Header>

                                    <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Width="196.327" Height="104.835">
                                        <TextBlock Text="Select 1 attack per additional 3 CR" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="16.666,12.994,0,0" Foreground="{DynamicResource TextOnSecondaryADarkerBrush}" />
                                        <ListBox x:Name="GhostSpecialListBox" HorizontalAlignment="Left" Height="61" Margin="10,34,0,0" VerticalAlignment="Top" Width="186" Loaded="GhostSpecialListBox_Loaded" ItemContainerStyle="{DynamicResource GhostSpecialItemStyle}"/>
                                    </Grid>
                                </TabItem>

                                <TabItem x:Name="HalfDragonTab" Background="Transparent" BorderBrush="#00000000">
                                    <TabItem.Header>Half-Dragon</TabItem.Header>
                                    <Grid Width="198">
                                        <ComboBox Margin="8,5,0,0" VerticalAlignment="Top" SelectedIndex="0" HorizontalAlignment="Left" Width="80.5" x:Name="HalfDragonColorCombo" SelectionChanged="AdvancedMonsterMultiplierCombo_SelectionChanged">
                                            <ComboBoxItem Content="Black"/>
                                            <ComboBoxItem Content="Blue"/>
                                            <ComboBoxItem Content="Brass"/>
                                            <ComboBoxItem Content="Bronze"/>
                                            <ComboBoxItem Content="Copper"/>
                                            <ComboBoxItem Content="Gold"/>
                                            <ComboBoxItem Content="Green"/>
                                            <ComboBoxItem Content="Red"/>
                                            <ComboBoxItem Content="Silver"/>
                                            <ComboBoxItem Content="White"/>
                                        </ComboBox>
                                    </Grid>
                                </TabItem>
                                <TabItem x:Name="HalfCelestialTab" Background="Transparent" BorderBrush="#00000000">
                                    <TabItem.Header>Half-Celestial</TabItem.Header>
                                    <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Width="196.327" Height="104.835">
                                        <TextBlock Text="Bonus Stats (Pick Three)" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="16.666,12.994,0,0" Foreground="Black" />
                                        <CheckBox Content="Strength" Margin="16.666,32.954,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" IsChecked="True" x:Name="HalfCelestialStrengthCheck"  Click="MonsterAdvancerCheck_Checked"/>
                                        <CheckBox Content="Dexterity" Margin="16.666,52.914,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" IsChecked="True" x:Name="HalfCelestialDexterityCheck"  Click="MonsterAdvancerCheck_Checked"/>
                                        <CheckBox Content="Constitution" Margin="16.666,72.874,97.693,0" VerticalAlignment="Top" IsChecked="True" d:LayoutOverrides="Width" x:Name="HalfCelestialConstitutionCheck"  Click="MonsterAdvancerCheck_Checked"/>
                                        <CheckBox Content="Intelligence" Margin="108.666,32.954,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" x:Name="HalfCelestialIntelligenceCheck"  Click="MonsterAdvancerCheck_Checked"/>
                                        <CheckBox Content="Wisdom" Margin="108.666,52.914,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" x:Name="HalfCelestialWisdomCheck"  Click="MonsterAdvancerCheck_Checked"/>
                                        <CheckBox Content="Charisma" Margin="108.666,72.874,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" x:Name="HalfCelestialCharismaCheck"  Click="MonsterAdvancerCheck_Checked"/>
                                    </Grid>
                                </TabItem>
                                <TabItem x:Name="HalfFiendTab" Background="Transparent" BorderBrush="#00000000">
                                    <TabItem.Header>Half-Fiend</TabItem.Header>
                                    <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Width="196.327" Height="104.835">
                                        <TextBlock Text="Bonus Stats (Pick Three)" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="16.666,12.994,0,0" Foreground="Black" />
                                        <CheckBox Content="Strength" Margin="16.666,32.954,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" IsChecked="True" x:Name="HalfFiendStrengthCheck"  Click="MonsterAdvancerCheck_Checked"/>
                                        <CheckBox Content="Dexterity" Margin="16.666,52.914,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" IsChecked="True" x:Name="HalfFiendDexterityCheck"  Click="MonsterAdvancerCheck_Checked"/>
                                        <CheckBox Content="Constitution" Margin="16.666,72.874,97.693,0" VerticalAlignment="Top" IsChecked="True" d:LayoutOverrides="Width" x:Name="HalfFiendConstitutionCheck"  Click="MonsterAdvancerCheck_Checked"/>
                                        <CheckBox Content="Intelligence" Margin="108.666,32.954,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" x:Name="HalfFiendIntelligenceCheck"  Click="MonsterAdvancerCheck_Checked"/>
                                        <CheckBox Content="Wisdom" Margin="108.666,52.914,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" x:Name="HalfFiendWisdomCheck"  Click="MonsterAdvancerCheck_Checked"/>
                                        <CheckBox Content="Charisma" Margin="108.666,72.874,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" x:Name="HalfFiendCharismaCheck"  Click="MonsterAdvancerCheck_Checked"/>
                                    </Grid>
                                </TabItem>
                                <TabItem x:Name="MythicTab" Background="Transparent" BorderBrush="#00000000">
                                    <TabItem.Header>Mythic</TabItem.Header>
                                    <Grid Width="198">
                                        <ComboBox Margin="8,5,0,0" VerticalAlignment="Top" SelectedIndex="0" HorizontalAlignment="Left" Width="80.5" x:Name="MythicTemplateCombo" SelectionChanged="AdvancedMonsterMultiplierCombo_SelectionChanged">
                                            <ComboBoxItem Content="Agile"/>
                                            <ComboBoxItem Content="Arcane"/>
                                            <ComboBoxItem Content="Divine"/>
                                            <ComboBoxItem Content="Invincible"/>
                                            <ComboBoxItem Content="Savage"/>
                                        </ComboBox>
                                    </Grid>
                                </TabItem>
                                <TabItem x:Name="OgrekinTab" Background="Transparent" BorderBrush="#00000000">
                                    <TabItem.Header>Ogrekin</TabItem.Header>
                                    <Grid Width="198">
                                        <ComboBox Margin="8,5,49.5,0" VerticalAlignment="Top" SelectedIndex="0" x:Name="OgrekinBeneficialCombo" SelectionChanged="AdvancedMonsterMultiplierCombo_SelectionChanged">

                                            <ComboBoxItem Content="1: Oversized Limb"/>
                                            <ComboBoxItem Content="2: Oversized Maw"/>
                                            <ComboBoxItem Content="3: Quick Metabolism"/>
                                            <ComboBoxItem Content="4: Thick Skin"/>
                                            <ComboBoxItem Content="5: Vestigal Limb"/>
                                            <ComboBoxItem Content="6: Vestial Twin"/>
                                        </ComboBox>
                                        <ComboBox Margin="8,30.96,49.5,52.112" SelectedIndex="0" x:Name="OgrekinDisadvantageousCommbo" SelectionChanged="AdvancedMonsterMultiplierCombo_SelectionChanged" d:LayoutOverrides="Height">

                                            <ComboBoxItem Content="1: Deformed Hand"/>
                                            <ComboBoxItem Content="2: Fragile"/>
                                            <ComboBoxItem Content="3: Light Sensitive"/>
                                            <ComboBoxItem Content="4: Obese"/>
                                            <ComboBoxItem Content="5: Stunted Legs"/>
                                            <ComboBoxItem Content="6: Weak Mind"/>
                                        </ComboBox>
                                        <Button x:Name="OgrekinRandomButton" Content="Random" Margin="8,0,0,28.152" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="75" Click="OgrekinRandomButton_Click"/>
                                    </Grid>
                                </TabItem>
                                <TabItem x:Name="SkeletonTab" Background="Transparent" BorderBrush="#00000000">
                                    <TabItem.Header>Skeleton</TabItem.Header>
                                    <Grid Width="198">
                                        <CheckBox x:Name="SkeletalChampionCheckBox" Content="Skeletal Champion" Margin="8,47.92,0,41.152" HorizontalAlignment="Left" Checked="MonsterAdvancerCheck_Checked" Unchecked="MonsterAdvancerCheck_Checked" d:LayoutOverrides="Height" />
                                        <CheckBox x:Name="BloodySkeletonCheckBox" Content="Bloody" Margin="8,8,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Checked="MonsterAdvancerCheck_Checked" Unchecked="MonsterAdvancerCheck_Checked" />
                                        <CheckBox x:Name="BurningSkeletonCheckBox" Content="Burning" Margin="8,27.96,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Checked="MonsterAdvancerCheck_Checked" Unchecked="MonsterAdvancerCheck_Checked" />
                                    </Grid>
                                </TabItem>
                                <TabItem x:Name="VampireTab" Background="Transparent" BorderBrush="#00000000">
                                    <TabItem.Header>Vampire</TabItem.Header>
                                    <Grid Width="198"/>
                                </TabItem>
                                <TabItem x:Name="ZombieTab" Background="Transparent" BorderBrush="#00000000">
                                    <TabItem.Header>Zombie</TabItem.Header>

                                    <Grid Width="198">
                                        <ComboBox Margin="8,5,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="80.5" SelectedIndex="0" x:Name="ZombieTypeComboBox" SelectionChanged="AdvancedMonsterMultiplierCombo_SelectionChanged">
                                            <ComboBoxItem Content="Regular"/>
                                            <ComboBoxItem Content="Juju"/>
                                            <ComboBoxItem Content="Fast"/>
                                            <ComboBoxItem Content="Plague"/>
                                            <ComboBoxItem Content="Void"/>
                                        </ComboBox>
                                    </Grid>
                                </TabItem>
                            </TabControl>
                            <CheckBox x:Name="AugmentSummoningCheck" Content="Augment Summoning" HorizontalAlignment="Left" Margin="8,0,0,15.332" VerticalAlignment="Bottom" Checked="MonsterAdvancerCheck_Checked" Unchecked="MonsterAdvancerCheck_Checked" Grid.Row="1" RenderTransformOrigin="0.519,0.706" />
                        </Grid>
                    </Expander>
                    <Button Grid.Column="1" Margin="0,8,8,0" x:Name="AddToCombatButton" Click="AddToCombatButton_Click" VerticalAlignment="Top" HorizontalAlignment="Right" Grid.Row="4" Height="26.248" Grid.ColumnSpan="2">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="Images/sword-16.png" Width="16" Height="16" Margin="2,0"/>
                            <TextBlock Margin="2,0"><Run Text="Add To Combat"/></TextBlock>
                        </StackPanel>

                    </Button>
                    <Border BorderThickness="1" Grid.Column="1" Background="{DynamicResource PrimaryColorDarkerBrush}" Padding="0,2,0,1" Grid.ColumnSpan="2" Margin="0" Grid.RowSpan="1" Grid.Row="1">
                        <Grid>
                            <Button x:Name="CustomizeMonsterButton" Content="Customize" HorizontalAlignment="Left" Margin="87,3,0,3" Width="75" d:LayoutOverrides="Height" Style="{DynamicResource ButtonMainStyle}" FontWeight="Bold" ToolTip="Create a new Custom Monster"
        						IsEnabled="{Binding Converter={StaticResource itemExistsConverter}}" Click="CustomizeMonsterButton_Click" />

                            <Button x:Name="DeleteCustomMonsterButton" Content="Delete" HorizontalAlignment="Right" Margin="0,3,4,3" Width="75" d:LayoutOverrides="Height" Background="{DynamicResource SecondaryColorBGradientBrush}" Foreground="White" FontWeight="Bold"
        						Visibility="{Binding IsCustom, Converter={StaticResource boolToVisibilityConverter}}" Click="DeleteCustomMonsterButton_Click"/>
                            <Button x:Name="EditCustomMonsterButton" Content="Edit" HorizontalAlignment="Left" Margin="166,3,0,3" Width="75" Style="{DynamicResource ButtonMainStyle}" FontWeight="Bold" d:LayoutOverrides="Height" ToolTip="Edit this Custom Monster"
        						Visibility="{Binding IsCustom, Converter={StaticResource boolToVisibilityConverter}}" Click="EditCustomMonsterButton_Click"/>
                            <Button x:Name="NewCustomMonsterButton" Content="New" HorizontalAlignment="Left" Margin="8,3,0,3" Width="75" Style="{DynamicResource ButtonMainStyle}" FontWeight="Bold" ToolTip="Add a new Custom Monster" d:LayoutOverrides="Height" Click="NewCustomMonsterButton_Click"/>
                        </Grid>
                    </Border>
                    <WrapPanel Grid.Column="1" HorizontalAlignment="Left" Margin="10,4,0,0" Name="wrapPanel1" Height="Auto">
                        <Button x:Name="ResetMonstersFilterButton" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Click="ResetMonstersFilterButton_Click">
                            <Image Height="16" Source="Images/reset-16.png" Stretch="Fill" Width="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        </Button>

                        <ComboBox x:Name="MonsterTypeFilterComboBox" SelectionChanged="MonsterTypeFilterComboBox_SelectionChanged" Height="23" Width="120">
                            <ComboBoxItem x:Name="AllMonsterTypesItem" Content="All Types" IsSelected="True" />
                        </ComboBox>
                        <ComboBox Height="23" x:Name="MonsterCRComboBox" SelectionChanged="MonsterCRFilterComboBox_SelectionChanged" Width="73.5">
                            <ComboBoxItem x:Name="AllMonsterCRsItem" Content="All CRs" IsSelected="True" />
                            <ComboBoxItem x:Name="BetweenCRsItem" Content="Between" />
                        </ComboBox>
                        <ComboBox Height="23" x:Name="MonsterTabNPCComboBox" Width="80" SelectionChanged="MonsterCRFilterComboBox_SelectionChanged" SelectedIndex="3">
                            <ComboBoxItem x:Name="NPCFilterMonstersComboItem" Content="Monsters" />
                            <ComboBoxItem x:Name="NPCFilterNPCComboItem" Content="NPCs" />
                            <ComboBoxItem x:Name="NPCFilterCustomComboItem" Content="Custom" />
                            <ComboBoxItem x:Name="NPCFilterAllComboItem" Content="All" IsSelected="True" />
                        </ComboBox>
                        <ComboBox Height="23" x:Name="BetweenCRLowCombo" SelectionChanged="MonsterCRFilterComboBox_SelectionChanged" Width="50" />
                        <ComboBox Height="23" x:Name="BetweenCRHighCombo" SelectionChanged="MonsterCRFilterComboBox_SelectionChanged" Width="50" />
                        <ComboBox Height="23" x:Name="MonsterClassCombo" SelectionChanged="ClassCombo_SelectionChanged" Width="96" />
                        <ComboBox Height="23" Name="MonsterEnvironmentCombo" Width="122" SelectionChanged="MonsterEnvironmentCombo_SelectionChanged" />

                    </WrapPanel>
                </Grid>
            </TabItem>
            <TabItem x:Name="RulesTab" IsSelected="True">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Width="16" Height="16" Source="Images\book-16.png" />
                        <TextBlock Text="Rules" Margin="5,0,0,0" />
                    </StackPanel>
                </TabItem.Header>
                <Grid x:Name="RulesTabGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="29.912"/>
                        <RowDefinition Height="156.851"/>
                        <RowDefinition/>
                        <RowDefinition Height="Auto" MinHeight="31.0559999999999"/>
                        <RowDefinition Height="5.37200000000007"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="185.333"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle Fill="{DynamicResource LightBackgroundBrush}" Margin="1,0" RadiusY="0" RadiusX="0" Grid.RowSpan="5" Stroke="White" StrokeThickness="0"/>
                    <Rectangle Fill="{DynamicResource LightBackgroundBrush}" Margin="1,0" RadiusY="0" RadiusX="0" Grid.RowSpan="5" Stroke="White" StrokeThickness="0" Grid.Column="1"/>
                    <ListBox x:Name="RuleListBox" Margin="1,0,1,2.628" ItemsSource="{Binding}" ItemTemplate="{DynamicResource DataTemplate2}" Grid.RowSpan="3" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.Row="1" BorderBrush="{DynamicResource ThemeTextBackgroundBrush}" SelectionChanged="RuleListBox_SelectionChanged"  Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}" />
                    <FlowDocumentScrollViewer x:Name="RuleFlowDocument" Grid.Column="1" Margin="1,0,1,2.628" VerticalScrollBarVisibility="Auto" Grid.RowSpan="3" Grid.Row="1"  Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}">
                        <FlowDocument  Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}" FontFamily="/CombatManager;component/Fonts/#Segoe UI" TextAlignment="Left" />
                    </FlowDocumentScrollViewer>
                    <TextBox Margin="8,5.04,31.28,0" TextWrapping="Wrap" VerticalContentAlignment="Top" x:Name="RulesTabFilterBox" VerticalAlignment="Top" TextChanged="RulesTabFilterBox_TextChanged" />
                    <Button x:Name="ClearRuleFilterText" HorizontalAlignment="Right" Margin="0,5.04,6,0" Width="23" RenderTransformOrigin="0.395,-0.152" Height="21.811" VerticalAlignment="Top" Click="ClearRuleFilterText_Click">
                        <Path Stretch="Fill" Stroke="Black" Data="M0,0 L1,1 M0,1 L1,0" StrokeThickness="3"  StrokeStartLineCap="Round" StrokeEndLineCap="Round" Height="14" Width="14"/>
                    </Button>
                    <ComboBox x:Name="RuleTypeFilterComboBox" Grid.Column="1" HorizontalAlignment="Left" Margin="34,3.912,0,4.088" Width="173" d:LayoutOverrides="Height" SelectionChanged="RuleTypeFilterComboBox_SelectionChanged">
                        <ComboBoxItem x:Name="AllRulesItem" Content="All" IsSelected="True"/>
                    </ComboBox>
                    <ComboBox x:Name="RuleSubtypeFilterComboBox" Grid.Column="1" Margin="211,3.912,0,4.088" d:LayoutOverrides="Height" SelectionChanged="RuleSubtypeFilterComboBox_SelectionChanged" HorizontalAlignment="Left" Width="131">
                        <ComboBoxItem x:Name="AllRulesSubtypesItem" Content="All" IsSelected="True"/>
                    </ComboBox>
                    <Button x:Name="RulesPrintButton" Grid.Column="1" HorizontalAlignment="Right" Margin="0,4,4.25,4" d:LayoutOverrides="Height" Click="RulesPrintButton_Click">
                        <Image Height="16" Source="Images/PrintHS.png" Stretch="Fill" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Button>
                    <Button x:Name="ResetRulesFilterButton" Grid.Column="1" HorizontalAlignment="Left" Margin="8,3.912,0,0" VerticalAlignment="Top" Click="ResetRulesFilterButton_Click">
                        <Image Height="16" Source="Images/reset-16.png" Stretch="Fill" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Button>
                </Grid>
            </TabItem>
            <TabItem x:Name="SpellsTab" IsSelected="True">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Width="16" Height="16" Source="Images/scroll-16.png"/>
                        <TextBlock Text="Spells" Margin="5,0,0,0" />
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="29.912"/>
                        <RowDefinition Height="156.851"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="185.333"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle Fill="{DynamicResource LightBackgroundBrush}" Margin="1,0" RadiusY="0" RadiusX="0" Grid.RowSpan="3" Stroke="White" StrokeThickness="0" Grid.Column="1"/>
                    <Rectangle Fill="{DynamicResource LightBackgroundBrush}" Margin="1,0" RadiusY="0" RadiusX="0" Grid.RowSpan="3" Stroke="White" StrokeThickness="0"/>
                    <ListBox x:Name="SpellListBox" Margin="1,0,1,8" ItemsSource="{Binding}" ItemTemplate="{DynamicResource DataTemplate1}" Grid.RowSpan="2" ScrollViewer.HorizontalScrollBarVisibility="Hidden" Grid.Row="1" BorderBrush="{DynamicResource ThemeTextBackgroundBrush}"  Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}" />
                    <FlowDocumentScrollViewer x:Name="SpellFlowDocument" Grid.Column="1" Margin="1,32.96,1,8"  VerticalScrollBarVisibility="Auto" Grid.RowSpan="2" Grid.Row="1" Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}">
                        <FlowDocument FontFamily="/CombatManager;component/Fonts/#Segoe UI" TextAlignment="Left"  Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}"/>
                    </FlowDocumentScrollViewer>
                    <TextBox Margin="8,5.04,31.28,0" TextWrapping="Wrap" VerticalContentAlignment="Top" x:Name="spellFilterBox" TextChanged="spellFilterBox_TextChanged" VerticalAlignment="Top" />
                    <Button x:Name="ClearSpellText" HorizontalAlignment="Right" Margin="0,5.189,6,0" Width="23" RenderTransformOrigin="0.395,-0.152" Click="ClearSpellText_Click" Height="21.811" VerticalAlignment="Top">
                        <Path Stretch="Fill" Stroke="Black" Data="M0,0 L1,1 M0,1 L1,0" StrokeThickness="3"  StrokeStartLineCap="Round" StrokeEndLineCap="Round" Height="14" Width="14"/>
                    </Button>
                    <Button x:Name="ResetSpelsFilterButton" Grid.Column="1" HorizontalAlignment="Left" Margin="8,3.912,0,0" VerticalAlignment="Top" Click="ResetSpelsFilterButton_Click">
                        <Image Height="16" Source="Images/reset-16.png" Stretch="Fill" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    </Button>
                    <ComboBox x:Name="CustomSpellFilterComboBox" Grid.Column="1" HorizontalAlignment="Left" Margin="34,3.912,0,3" Width="69" SelectionChanged="ClassFilterComboBox_SelectionChanged" d:LayoutOverrides="Height" SelectedIndex="0">
                        <ComboBoxItem x:Name="AllCustomSpellFilterItem" Content="All" />
                        <ComboBoxItem x:Name="CustomCustomSpellFiterItem" Content="Custom" />
                    </ComboBox>
                    <ComboBox x:Name="ClassFilterComboBox" Grid.Column="1" HorizontalAlignment="Left" Margin="107,3.912,0,3" Width="110" d:LayoutOverrides="Height" SelectionChanged="ClassFilterComboBox_SelectionChanged">
                        <ComboBoxItem x:Name="AllItem" Content="All Classes" IsSelected="True"/>
                        <ComboBoxItem x:Name="AlchemistItem" Content="Alchemist"/>
                        <ComboBoxItem x:Name="AntipaladinItem" Content="Antipaladin"/>
                        <ComboBoxItem x:Name="BardItem" Content="Bard"/>
                        <ComboBoxItem x:Name="ClericItem" Content="Cleric"/>
                        <ComboBoxItem x:Name="DruidItem" Content="Druid"/>
                        <ComboBoxItem x:Name="InquisitorItem" Content="Inquisitor"/>
                        <ComboBoxItem x:Name="MagusItem" Content="Magus"/>
                        <ComboBoxItem x:Name="OracleItem" Content="Oracle"/>
                        <ComboBoxItem x:Name="PaladinItem" Content="Paladin"/>
                        <ComboBoxItem x:Name="RangerItem" Content="Ranger"/>
                        <ComboBoxItem x:Name="SorcererItem" Content="Sorcerer"/>
                        <ComboBoxItem x:Name="SummonerItem" Content="Summoner"/>
                        <ComboBoxItem x:Name="WitchItem" Content="Witch"/>
                        <ComboBoxItem x:Name="WizardItem" Content="Wizard"/>
                    </ComboBox>
                    <ComboBox x:Name="SpellLevelFilterComboBox" Grid.Column="1" Margin="221,3.912,0,3" SelectedIndex="0" SelectionChanged="ClassFilterComboBox_SelectionChanged" HorizontalAlignment="Left" Width="80.667">
                        <ComboBoxItem Content="All Levels"/>
                        <ComboBoxItem Content="0th Level"/>
                        <ComboBoxItem Content="1st Level"/>
                        <ComboBoxItem Content="2nd Level"/>
                        <ComboBoxItem Content="3rd Level"/>
                        <ComboBoxItem Content="4th Level"/>
                        <ComboBoxItem Content="5th Level"/>
                        <ComboBoxItem Content="6th Level"/>
                        <ComboBoxItem Content="7th Level"/>
                        <ComboBoxItem Content="8th Level"/>
                        <ComboBoxItem Content="9th Level"/>
                    </ComboBox>
                    <ComboBox x:Name="SpellSchoolFilterComboBox" Grid.Column="1" Margin="305.667,3.912,0,3" SelectedIndex="0" SelectionChanged="ClassFilterComboBox_SelectionChanged" HorizontalAlignment="Left" Width="95">
                        <ComboBoxItem Content="All Schools"/>
                    </ComboBox>
                    <Button x:Name="SpellsPrintButton" Grid.Column="1" HorizontalAlignment="Right" Margin="0,4,4.25,4" d:LayoutOverrides="Height" Click="SpellsPrintButton_Click">
                        <Image Height="16" Source="Images/PrintHS.png" Stretch="Fill" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Button>
                    <Border BorderThickness="1" Grid.Column="1" Grid.Row="1" Background="{DynamicResource PrimaryColorDarkerBrush}" Padding="0,2,0,1" Height="32.96" VerticalAlignment="Top">
                        <Grid>
                            <Button x:Name="NewCustomSpellButton" Content="New" HorizontalAlignment="Left" Margin="8,3,0,3" Width="75" Style="{DynamicResource ButtonMainStyle}" FontWeight="Bold" ToolTip="Create a new Custom Spell" d:LayoutOverrides="Height" Click="NewCustomSpellButton_Click"/>
                            <Button x:Name="CustomizeSpellButton" Content="Customize" HorizontalAlignment="Left" Margin="87,3,0,3" Width="75" d:LayoutOverrides="Height" Style="{DynamicResource ButtonMainStyle}" FontWeight="Bold" ToolTip="Create a new Custom Spell based on this Spell"
        						IsEnabled="{Binding Converter={StaticResource itemExistsConverter}}" Click="CustomizeSpellButton_Click" />

                            <Button x:Name="DeleteCustomSpellButton" Content="Delete" HorizontalAlignment="Right" Margin="0,3,4,3" Width="75" d:LayoutOverrides="Height" Background="{DynamicResource SecondaryColorBGradientBrush}" Foreground="White" FontWeight="Bold"
        						Visibility="{Binding IsCustom, Converter={StaticResource boolToVisibilityConverter}}" Click="DeleteCustomSpellButton_Click"/>
                            <Button x:Name="EditCustomSpellButton" Content="Edit" HorizontalAlignment="Left" Margin="166,3,0,3" Width="75" Style="{DynamicResource ButtonMainStyle}" FontWeight="Bold" d:LayoutOverrides="Height" ToolTip="Edit this Custom Spell"
        						Visibility="{Binding IsCustom, Converter={StaticResource boolToVisibilityConverter}}" Click="EditCustomSpellButton_Click"/>
                        </Grid>
                    </Border>
                    <ComboBox x:Name="SpellSubschoolFilterComboBox" Grid.Column="1" Margin="404.667,3.912,0,3" SelectedIndex="0" SelectionChanged="ClassFilterComboBox_SelectionChanged" HorizontalAlignment="Left" Width="105">
                        <ComboBoxItem Content="All Subschools"/>
                    </ComboBox>
                    <ComboBox x:Name="SpellDescriptorFilterComboBox" Grid.Column="1" Margin="513.667,3.912,0,3" SelectedIndex="0" SelectionChanged="ClassFilterComboBox_SelectionChanged" HorizontalAlignment="Left" Width="105">
                        <ComboBoxItem Content="All Descriptors"/>
                    </ComboBox>
                </Grid>
            </TabItem>

            <TabItem x:Name="TreasureTab" IsSelected="True">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Width="16" Height="16" Source="Images\treasure-16.png" />
                        <TextBlock Text="Treasure" Margin="5,0,0,0" />
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <TabControl TabStripPlacement="Left" Background="{x:Null}" ItemContainerStyle="{DynamicResource TabItemStyle3}" x:Name="TreasureTabControl">
                        <TabItem x:Name="MagicItemsTab">
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Magic Items" Margin="0,0,5,0" />
                                    <Image Width="16" Height="16" Source="Images\wand-16.png" />
                                </StackPanel>
                            </TabItem.Header>
                            <Grid x:Name="MagicItemsTabGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="29.912"/>
                                    <RowDefinition Height="156.851"/>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto" MinHeight="31.0559999999999"/>
                                    <RowDefinition Height="5.37200000000007"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="185.333"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Fill="{DynamicResource LightBackgroundBrush}" Margin="1,0" RadiusY="0" RadiusX="0" Grid.RowSpan="5" Stroke="White" StrokeThickness="0"/>
                                <Rectangle Fill="{DynamicResource LightBackgroundBrush}" Margin="1,0" RadiusY="0" RadiusX="0" Grid.RowSpan="5" Stroke="White" StrokeThickness="0" Grid.Column="1"/>
                                <ListBox x:Name="MagicItemListBox" Margin="1,0,1,2.628" ItemsSource="{Binding}" ItemTemplate="{DynamicResource DataTemplate2}" Grid.RowSpan="3" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.Row="1" BorderBrush="{DynamicResource ThemeTextBackgroundBrush}" SelectionChanged="MagicItemListBox_SelectionChanged" Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}"/>
                                <FlowDocumentScrollViewer x:Name="MagicItemFlowDocument" Grid.Column="1" Margin="1,0,1,2.628" Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}" VerticalScrollBarVisibility="Auto" Grid.RowSpan="3" Grid.Row="1">
                                    <FlowDocument Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}" FontFamily="/CombatManager;component/Fonts/#Segoe UI" TextAlignment="Left" />
                                </FlowDocumentScrollViewer>
                                <TextBox Margin="8,5.04,31.28,0" TextWrapping="Wrap" VerticalContentAlignment="Top" x:Name="MagicItemsTabFilterBox" VerticalAlignment="Top" TextChanged="MagicItemsTabFilterBox_TextChanged" />
                                <Button x:Name="ClearMagicItemFilterText" HorizontalAlignment="Right" Margin="0,5.04,6,0" Width="23" RenderTransformOrigin="0.395,-0.152" Height="21.811" VerticalAlignment="Top" Click="ClearMagicItemFilterText_Click">
                                    <Path Stretch="Fill" Stroke="Black" Data="M0,0 L1,1 M0,1 L1,0" StrokeThickness="3"  StrokeStartLineCap="Round" StrokeEndLineCap="Round" Height="14" Width="14"/>
                                </Button>
                                <ComboBox x:Name="MagicItemGroupFilterComboBox" Grid.Column="1" HorizontalAlignment="Left" Margin="34,4,0,4" Width="102.333" d:LayoutOverrides="Height" SelectionChanged="MagicItemGroupFilterComboBox_SelectionChanged">
                                    <ComboBoxItem x:Name="AllMagicItemGroupsItem" Content="All Types" IsSelected="True"/>
                                </ComboBox>
                                <ComboBox x:Name="MagicItemCLFilterComboBox" Grid.Column="1" HorizontalAlignment="Left" Margin="140.333,4,0,4" Width="67.333" SelectionChanged="MagicItemGroupFilterComboBox_SelectionChanged" d:LayoutOverrides="Height">
                                    <ComboBoxItem x:Name="AllMagicItemCLItem" Content="All CLs" IsSelected="True"/>
                                </ComboBox>
                                <Button x:Name="MagicItemPrintButton" HorizontalAlignment="Right" Margin="0,4,8,3.912" Grid.Column="1" d:LayoutOverrides="Height" Click="MagicItemPrintButton_Click">
                                    <Image Height="16" Source="Images/PrintHS.png" Stretch="Fill" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Button>
                                <Button x:Name="ResetMagicItemsFilterButton" Grid.Column="1" HorizontalAlignment="Left" Margin="8,3.912,0,0" VerticalAlignment="Top" Click="ResetMagicItemsFilterButton_Click">
                                    <Image Height="16" Source="Images/reset-16.png" Stretch="Fill" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                                </Button>
                            </Grid>
                        </TabItem>
                        <TabItem x:Name="TreasureGeneratorTab">
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Treasure Generator" Margin="0,0,5,0" />
                                    <Image Width="16" Height="16" Source="Images\dice-16.png" />
                                </StackPanel>
                            </TabItem.Header>
                            <Grid>
                                <Rectangle Fill="{DynamicResource LightBackgroundBrush}" Margin="-0.46,-1.332,0,0" RadiusY="5" RadiusX="5" Stroke="{DynamicResource ThemeTextBackgroundBrush}" StrokeThickness="0" HorizontalAlignment="Left" Width="188"/>
                                <Rectangle Fill="{DynamicResource LightBackgroundBrush}" Margin="191.54,0,1,0" RadiusY="5" RadiusX="5" Stroke="{DynamicResource ThemeTextBackgroundBrush}" StrokeThickness="0"/>
                                <FlowDocumentScrollViewer x:Name="TreasureFlowDocument" Margin="192.54,38,0,0"  Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}" VerticalScrollBarVisibility="Auto">
                                    <FlowDocument  Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}" FontFamily="/CombatManager;component/Fonts/#Segoe UI" TextAlignment="Left" />
                                </FlowDocumentScrollViewer>
                                <TabControl HorizontalAlignment="Left" Margin="0,1.668,0,0" Width="187.54" Height="332.461" VerticalAlignment="Top">
                                    <TabItem Header="Level">
                                        <Grid Background="#FFE5E5E5">
                                            <Grid Height="185.539" Margin="1,1,-3.46,0" VerticalAlignment="Top">
                                                <TextBlock HorizontalAlignment="Left" Margin="6.54,8,0,0" TextWrapping="Wrap" Text="Level" VerticalAlignment="Top"/>
                                                <ComboBox x:Name="TreasureLevelComboBox" Margin="39.54,5,0,0" VerticalAlignment="Top" SelectedIndex="0" HorizontalAlignment="Left" Width="42">
                                                    <ComboBoxItem Content="1"/>
                                                    <ComboBoxItem Content="2"/>
                                                    <ComboBoxItem Content="3"/>
                                                    <ComboBoxItem Content="4"/>
                                                    <ComboBoxItem Content="5"/>
                                                    <ComboBoxItem Content="6"/>
                                                    <ComboBoxItem Content="7"/>
                                                    <ComboBoxItem Content="8"/>
                                                    <ComboBoxItem Content="9"/>
                                                    <ComboBoxItem Content="10"/>
                                                    <ComboBoxItem Content="11"/>
                                                    <ComboBoxItem Content="12"/>
                                                    <ComboBoxItem Content="13"/>
                                                    <ComboBoxItem Content="14"/>
                                                    <ComboBoxItem Content="15"/>
                                                    <ComboBoxItem Content="16"/>
                                                    <ComboBoxItem Content="17"/>
                                                    <ComboBoxItem Content="18"/>
                                                    <ComboBoxItem Content="19"/>
                                                    <ComboBoxItem Content="20"/>
                                                </ComboBox>
                                                <Button x:Name="GenerateButton" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="75" Click="GenerateButton_Click" Margin="0,0,0,8">
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Source="/CombatManager;component/Images/treasure-16.png" Width="16" Height="16" />
                                                        <TextBlock Text="Generate"/>
                                                    </StackPanel>
                                                </Button>
                                                <TextBlock HorizontalAlignment="Left" Margin="23.54,33.96,0,0" TextWrapping="Wrap" Text="Coin" VerticalAlignment="Top"/>
                                                <ComboBox x:Name="CoinAmountComboBox" Margin="56.54,30.96,45,0" VerticalAlignment="Top" SelectedIndex="1" Loaded="AmountComboBox_Loaded">
                                                    <ComboBoxItem Content="None"/>
                                                    <ComboBoxItem Content="Normal"/>
                                                    <ComboBoxItem Content="Double"/>
                                                    <ComboBoxItem Content="Triple"/>
                                                    <ComboBoxItem Content="x4"/>
                                                    <ComboBoxItem Content="x5"/>
                                                    <ComboBoxItem Content="x6"/>
                                                    <ComboBoxItem Content="x7"/>
                                                    <ComboBoxItem Content="x8"/>
                                                    <ComboBoxItem Content="x9"/>
                                                    <ComboBoxItem Content="x10"/>
                                                    <ComboBoxItem Content="x11"/>
                                                    <ComboBoxItem Content="x12"/>
                                                    <ComboBoxItem Content="x13"/>
                                                    <ComboBoxItem Content="x14"/>
                                                    <ComboBoxItem Content="x15"/>
                                                    <ComboBoxItem Content="x16"/>
                                                    <ComboBoxItem Content="x17"/>
                                                    <ComboBoxItem Content="x18"/>
                                                    <ComboBoxItem Content="x19"/>
                                                    <ComboBoxItem Content="x20"/>
                                                </ComboBox>
                                                <TextBlock HorizontalAlignment="Left" Margin="6.54,8,0,0" TextWrapping="Wrap" Text="Level" VerticalAlignment="Top" ToolTip="Treasure " />
                                                <TextBlock HorizontalAlignment="Left" Margin="18.729,85.88,0,0" TextWrapping="Wrap" Text="Items" VerticalAlignment="Top"/>
                                                <ComboBox x:Name="ItemsAmountComboBox" Margin="56.54,82.88,45,0" VerticalAlignment="Top" SelectedIndex="1"  Loaded="AmountComboBox_Loaded">
                                                    <ComboBoxItem Content="None"/>
                                                    <ComboBoxItem Content="Normal"/>
                                                    <ComboBoxItem Content="Double"/>
                                                    <ComboBoxItem Content="Triple"/>
                                                    <ComboBoxItem Content="x4"/>
                                                    <ComboBoxItem Content="x5"/>
                                                    <ComboBoxItem Content="x6"/>
                                                    <ComboBoxItem Content="x7"/>
                                                    <ComboBoxItem Content="x8"/>
                                                    <ComboBoxItem Content="x9"/>
                                                    <ComboBoxItem Content="x10"/>
                                                    <ComboBoxItem Content="x11"/>
                                                    <ComboBoxItem Content="x12"/>
                                                    <ComboBoxItem Content="x13"/>
                                                    <ComboBoxItem Content="x14"/>
                                                    <ComboBoxItem Content="x15"/>
                                                    <ComboBoxItem Content="x16"/>
                                                    <ComboBoxItem Content="x17"/>
                                                    <ComboBoxItem Content="x18"/>
                                                    <ComboBoxItem Content="x19"/>
                                                    <ComboBoxItem Content="x20"/>
                                                </ComboBox>
                                                <TextBlock HorizontalAlignment="Left" Margin="13.243,59.92,0,0" TextWrapping="Wrap" Text="Goods" VerticalAlignment="Top"/>
                                                <ComboBox x:Name="GoodsAmountComboBox" Margin="56.54,56.92,45,0" VerticalAlignment="Top" SelectedIndex="1"  Loaded="AmountComboBox_Loaded">
                                                    <ComboBoxItem Content="None"/>
                                                    <ComboBoxItem Content="Normal"/>
                                                    <ComboBoxItem Content="Double"/>
                                                    <ComboBoxItem Content="Triple"/>
                                                    <ComboBoxItem Content="x4"/>
                                                    <ComboBoxItem Content="x5"/>
                                                    <ComboBoxItem Content="x6"/>
                                                    <ComboBoxItem Content="x7"/>
                                                    <ComboBoxItem Content="x8"/>
                                                    <ComboBoxItem Content="x9"/>
                                                    <ComboBoxItem Content="x10"/>
                                                    <ComboBoxItem Content="x11"/>
                                                    <ComboBoxItem Content="x12"/>
                                                    <ComboBoxItem Content="x13"/>
                                                    <ComboBoxItem Content="x14"/>
                                                    <ComboBoxItem Content="x15"/>
                                                    <ComboBoxItem Content="x16"/>
                                                    <ComboBoxItem Content="x17"/>
                                                    <ComboBoxItem Content="x18"/>
                                                    <ComboBoxItem Content="x19"/>
                                                    <ComboBoxItem Content="x20"/>
                                                </ComboBox>
                                            </Grid>
                                            <Button x:Name="CurrentCRButton" Content="Current CR" HorizontalAlignment="Left" Margin="96,7,0,0" VerticalAlignment="Top" Width="76" Click="CurrentCRButton_Click"/>
                                        </Grid>
                                    </TabItem>
                                    <TabItem Header="Items">
                                        <Grid Background="#FFE5E5E5">

                                            <ComboBox x:Name="ItemGenerateCountComboBox" Margin="47.544,5,76,0" VerticalAlignment="Top" SelectedIndex="0" Loaded="ItemGenerateCountComboBox_Loaded">
                                                <ComboBoxItem Content="1"/>
                                            </ComboBox>
                                            <ComboBox x:Name="ItemGenerateLevelComboBox" Margin="47.544,33.666,51.27,0" VerticalAlignment="Top" SelectedIndex="0" SelectionChanged="ItemGenerateLevelComboBox_SelectionChanged">
                                                <ComboBoxItem Content="Minor" />
                                                <ComboBoxItem Content="Medium" />
                                                <ComboBoxItem Content="Major" />
                                            </ComboBox>
                                            <Border CornerRadius="6" VerticalAlignment="Top" Margin="8,59.626,0,0" HorizontalAlignment="Left" BorderThickness="2" Width="163" Padding="2">
                                                <Border.BorderBrush>
                                                    <SolidColorBrush Color="{DynamicResource SecondaryColorADarker}"/>
                                                </Border.BorderBrush>
                                                <Border.Background>
                                                    <SolidColorBrush Color="{DynamicResource SecondaryColorADark}"/>
                                                </Border.Background>
                                                <StackPanel >
                                                    <CheckBox x:Name="GenerateMundaneCheck" Content="Mundane" IsChecked="False" Padding="4,1,0,1" Checked="GenerateItemCheck_Checked" Unchecked="GenerateItemCheck_Checked" Foreground="{DynamicResource TextOnSecondaryADarkerBrush}" />
                                                    <CheckBox x:Name="GenerateMagicalArmorCheck" Content="Magical Armor" IsChecked="True" Padding="4,1,0,1" Checked="GenerateItemCheck_Checked" Unchecked="GenerateItemCheck_Checked" Foreground="{DynamicResource TextOnSecondaryADarkerBrush}" />
                                                    <CheckBox x:Name="GenerateMagicalWeaponCheck" Content="Magical Weapon" IsChecked="True" Padding="4,1,0,1" Checked="GenerateItemCheck_Checked" Unchecked="GenerateItemCheck_Checked" Foreground="{DynamicResource TextOnSecondaryADarkerBrush}" />
                                                    <CheckBox x:Name="GeneratePotionCheck" Content="Potion" IsChecked="True" Padding="4,1,0,1" Checked="GenerateItemCheck_Checked" Unchecked="GenerateItemCheck_Checked" Foreground="{DynamicResource TextOnSecondaryADarkerBrush}" />
                                                    <CheckBox x:Name="GenerateRingCheck" Content="Ring" IsChecked="True" Padding="4,1,0,1" Checked="GenerateItemCheck_Checked" Unchecked="GenerateItemCheck_Checked" Foreground="{DynamicResource TextOnSecondaryADarkerBrush}" />
                                                    <CheckBox x:Name="GenerateRodCheck" Content="Rod" IsChecked="True" Padding="4,1,0,1" Checked="GenerateItemCheck_Checked" Unchecked="GenerateItemCheck_Checked" Foreground="{DynamicResource TextOnSecondaryADarkerBrush}" />
                                                    <CheckBox x:Name="GenerateScrollCheck" Content="Scroll" IsChecked="True" Padding="4,1,0,1" Checked="GenerateItemCheck_Checked" Unchecked="GenerateItemCheck_Checked" Foreground="{DynamicResource TextOnSecondaryADarkerBrush}" />
                                                    <CheckBox x:Name="GenerateStaffCheck" Content="Staff" IsChecked="True" Padding="4,1,0,1" Checked="GenerateItemCheck_Checked" Unchecked="GenerateItemCheck_Checked" Foreground="{DynamicResource TextOnSecondaryADarkerBrush}" />
                                                    <CheckBox x:Name="GenerateWandCheck" Content="Wand" IsChecked="True" Padding="4,1,0,1" Checked="GenerateItemCheck_Checked" Unchecked="GenerateItemCheck_Checked" Foreground="{DynamicResource TextOnSecondaryADarkerBrush}" />
                                                    <CheckBox x:Name="GenerateWondrousItemCheck" Content="Wondrous Item" IsChecked="True" Padding="4,1,0,1" Checked="GenerateItemCheck_Checked" Unchecked="GenerateItemCheck_Checked" Foreground="{DynamicResource TextOnSecondaryADarkerBrush}" />
                                                </StackPanel>
                                            </Border>
                                            <TextBlock HorizontalAlignment="Left" Margin="6.54,8,0,0" TextWrapping="Wrap" Text="Count" VerticalAlignment="Top"/>
                                            <Button x:Name="GenerateItemsButton" HorizontalAlignment="Center" Width="75" Margin="0,270.501,0,5" VerticalAlignment="Bottom" Click="GenerateItemsButton_Click">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Source="Images/treasure-16.png" Width="16" Height="16" />
                                                    <TextBlock Text="Generate"/>
                                                </StackPanel>
                                            </Button>
                                            <TextBlock HorizontalAlignment="Left" Margin="6.54,36.666,0,0" TextWrapping="Wrap" Text="Level" VerticalAlignment="Top"/>
                                            <Button x:Name="TreasureSelectAllButton" Content="Select All" Margin="7,253,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="75" Click="TreasureSelectAllButton_Click"/>
                                            <Button x:Name="TreasureUnselectAllButton" Content="Unselect All" Margin="0,253,10.6,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="75" Click="TreasureUnselectAllButton_Click"/>
                                        </Grid>
                                    </TabItem>
                                </TabControl>
                                <Button x:Name="TreasurePrintButton" HorizontalAlignment="Right" Margin="0,4,8,0" VerticalAlignment="Top" Click="TreasurePrintButton_Click">
                                    <Image Height="16" Source="Images/PrintHS.png" Stretch="Fill" Width="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Button>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>
            <TabItem x:Name="MapsTab" IsSelected="True" Loaded="MapsTab_Loaded">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Width="16" Height="16" Source="Images\globe-16.png"/>
                        <TextBlock Text="Maps"/>
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35*"/>
                        <RowDefinition Height="486*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="207.333"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Rectangle RadiusX="0" RadiusY="0" StrokeThickness="0" Grid.ColumnSpan="2" Margin="0,0,-0.333,0.333" Grid.RowSpan="2">
                        <Rectangle.Fill>
                            <SolidColorBrush Color="{DynamicResource PrimaryColorMedium}"/>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Button x:Name="UpFolderButton" HorizontalAlignment="Left" Margin="10,8,0,0" VerticalAlignment="Top" Width="24" Height="24" Click="UpFolderButton_Click" IsEnabled="{Binding IsRoot, Converter={StaticResource boolInverter}}">
                        <Image Source="Images/arrowcurveright-16.png" Width="16" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="180"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>

                        </Image>
                    </Button>
                    <TextBox HorizontalAlignment="Left" Height="24" Margin="39,8,0,0" VerticalAlignment="Top" Width="138" 
                             Text="{Binding CurrentFolder.Name}" IsEnabled="{Binding IsRoot, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolInverter}}" TextChanged="TextBox_TextChanged_1"/>

                    <Button x:Name="AddFolderButton" HorizontalAlignment="Left" Margin="182,8,0,0" VerticalAlignment="Top" Height="24" Width="24" Click="AddFolderButton_Click">
                        <Image Source="Images/plus.png" Width="16"/>
                    </Button>
                    <Button HorizontalAlignment="Left" VerticalAlignment="Top" x:Name="CreateMapButton" Click="CreateMapsButton_Click" Margin="3.667,8,0,0" Height="24" Width="196" Grid.Column="1">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="Images/Globe.ico" Width="16"/>
                            <TextBlock Text="Create Map From Image File" Margin="3,0,0,0"/>
                        </StackPanel>
                    </Button>

                    <ListBox x:Name="MapFolderListBox" HorizontalAlignment="Left" Height="474" Margin="10,1.667,0,0" Grid.Row="1" VerticalAlignment="Top" Width="196" Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}" ItemsSource="{Binding CurrentFolder.Folders}" ItemTemplate="{DynamicResource MapsListFolderTemplate}"/>
                    <ListBox x:Name="GameMapListBox" Margin="3.667,1.667,9.667,10.333" ItemsSource="{Binding CurrentMaps}" Loaded="GameMapListBox_Loaded" ItemTemplate="{DynamicResource GameMapListItemTemplate}"  Background="{DynamicResource ThemeTextBackgroundBrush}" Foreground="{DynamicResource ThemeTextForegroundBrush}" Grid.Column="1" Grid.Row="1"/>

                </Grid>
            </TabItem>
        </TabControl>
        <Button x:Name="OGL_Button" Content="OGL" HorizontalAlignment="Left" Margin="15,4,0,8.168" Grid.Row="2" d:LayoutOverrides="Height" Width="30" Click="OGL_Button_Click" Style="{DynamicResource ButtonMainStyle}" FontSize="10.667"/>
        <Thumb x:Name="BottomThumb" Height="4.168" Margin="8.667,0,9,0" Grid.Row="2" VerticalAlignment="Bottom" DragDelta="BottomThumb_DragDelta" Cursor="SizeNS" Style="{DynamicResource ThumbStyle3}" MouseMove="BottomThumb_MouseMove" />
        <Thumb x:Name="RightThumb" Width="4" Margin="0,9.998,0,8.168" DragDelta="RightThumb_DragDelta" Cursor="SizeWE" Style="{DynamicResource ThumbStyle3}" HorizontalAlignment="Right" Grid.RowSpan="3" DragStarted="RightThumb_DragStarted" MouseMove="RightThumb_MouseMove" DragCompleted="RightThumb_DragCompleted"/>
        <Thumb x:Name="LeftThumb" Cursor="SizeWE" Grid.RowSpan="3" HorizontalAlignment="Left" Margin="0,8,852.5,8" Style="{DynamicResource ThumbStyle3}" Width="6" DragDelta="LeftThumb_DragDelta" DragStarted="Thumb_DragStarted" />
        <Thumb x:Name="TopThumb" Height="4.168" Margin="8,0,9.667,0" VerticalAlignment="Top" DragDelta="TopThumb_DragDelta" Cursor="SizeNS" Style="{DynamicResource ThumbStyle3}" DragStarted="TopThumb_DragStarted"/>
        <Button x:Name="About_Button" Content="About" HorizontalAlignment="Left" Margin="49,4,0,8.168" Grid.Row="2" d:LayoutOverrides="Height" Width="37.05" Click="About_Button_Click" Style="{DynamicResource ButtonMainStyle}" FontSize="10.667"/>
        <ToggleButton x:Name="SourcesButton" Content="Sources" HorizontalAlignment="Right" Margin="0,4,27,8.168" Grid.Row="2" Style="{DynamicResource ButtonMainStyle}" Height="21.96" ToolTip="Change Sources" />
        <Button Content="Undo" HorizontalAlignment="Left" Margin="90,4,0,8" x:Name="UndoButton" Style="{DynamicResource ButtonMainStyle}" Width="37.05" Grid.Row="2" Click="UndoButton_Click" FontSize="10.667" />
        <Button x:Name="SettingsButton" Content="Settings" HorizontalAlignment="Left" Margin="132.05,4,0,8.168" Grid.Row="2" Style="{DynamicResource ButtonMainStyle}" d:LayoutOverrides="Height" Click="SettingsButton_Click" FontSize="10.667"/>
        <Button Background="{DynamicResource SecondaryColorBGradientBrush}" Focusable="False" Height="22" HorizontalAlignment="Right" IsTabStop="False" Margin="0,0,101,2" Name="UpdateButton" RenderTransformOrigin="0.812,0.682" VerticalAlignment="Bottom" Width="107" Content="Update Available" Foreground="White" FontWeight="Bold" Click="UpdateButton_Click" Visibility="Hidden">
            <Button.Effect>
                <DropShadowEffect ShadowDepth="0" />
            </Button.Effect>
        </Button>
        <Button Content="Hot Keys" FontSize="10.667" HorizontalAlignment="Left" Margin="183,4,0,8" Name="HotKeysButton" Style="{DynamicResource ButtonMainStyle}" Grid.Row="2" Click="HotKeysButton_Click" />
        <Button x:Name="TitleBarSystemButton" HorizontalAlignment="Left" VerticalAlignment="Bottom"  Margin="160,0,0,0.8" Style="{DynamicResource ButtonMainStyle}" Height="30" Click="TitleBarSystemButton_Click" Loaded="TitleBarSystemButton_Loaded" Visibility="Hidden" >

            <StackPanel Orientation="Horizontal">

                <TextBlock x:Name="SystemButtonTextBlock" Text="Pathfinder 1.0" TextWrapping="Wrap" FontSize="16" Height="22" IsHitTestVisible="False" FontWeight="Bold" Foreground="White" d:LayoutOverrides="Width" Padding="3,0,0,0" Loaded="SystemButtonTextBlock_Loaded"/>
                <Path Data="M0,0 L1,1 L2,0" Fill="#FFF4F4F5" HorizontalAlignment="Right" Margin="6,3,6,0" Stretch="Fill"  Width="10" Height="8">
                    <Path.Effect>
                        <DropShadowEffect/>
                    </Path.Effect>
                </Path>
            </StackPanel>
        </Button>
    </Grid>


</Window>
