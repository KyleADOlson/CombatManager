<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Class="CombatManager.ConditionSelector"
             AllowsTransparency="True" Loaded="Popup_Loaded" PreviewDragEnter="Popup_PreviewDragEnter" 
             mc:Ignorable="d" WindowStyle="None" Background="{x:Null}" ResizeMode="NoResize" Title="Conditions" HorizontalAlignment="Center" VerticalAlignment="Center" Width="626.5" Height="491" Icon="Images/d20-32.ico" ShowInTaskbar="False">
	<Window.Resources>
		<DataTemplate x:Key="ConditionItemTemplate">
			<Grid IsVisibleChanged="Grid_IsVisibleChanged" Loaded="Grid_Loaded">
				<Grid.ColumnDefinitions>
				    <ColumnDefinition/>
				    <ColumnDefinition Width="Auto"/>
			     </Grid.ColumnDefinitions>
			<StackPanel Grid.Column="0" Orientation="Horizontal">
                <Image  Width="16" Height="16" Source="{Binding Image, Converter={StaticResource StringImageSmallIconConverter}}" Margin="0,0,2,0" />
                <TextBlock Text="{Binding Name}" />
            </StackPanel>
			<Button Grid.Column="1" x:Name="DeleteButton" RenderTransformOrigin="0.222,-0.601" Click="DeleteButton_Click" Width="16" Height="16" Grid.Row="0" Grid.ColumnSpan="1" Background="{StaticResource characterButtonBrush}" HorizontalAlignment="Right" d:LayoutOverrides="Width" Visibility="Collapsed"
                >
				<Button.ToolTip>Delete</Button.ToolTip>
				<Path Data="M1,1 L7,7 M7,1 L1,7" Width="8" Height="8" Stroke="Black" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
			</Button>
            </Grid>
		</DataTemplate>		
        <ItemsPanelTemplate x:Key="PopupItemsPanelTemplate">
        	<WrapPanel IsItemsHost="True" Orientation="Horizontal"/>
        </ItemsPanelTemplate>
		<Style x:Key="GridStyle1" TargetType="{x:Type Grid}">
			<Setter Property="TextBlock.Foreground" Value="Black"/>
		</Style>
		<Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="2,1,1,2"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#F3F3F3" Offset="0"/>
			<GradientStop Color="#EBEBEB" Offset="0.5"/>
			<GradientStop Color="#DDDDDD" Offset="0.5"/>
			<GradientStop Color="#CDCDCD" Offset="1"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
		<Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RadioButton}">
						<Border x:Name="Chrome" BorderThickness="1" Margin="0" BorderBrush="{x:Null}" >
							<Border.Background>
								<SolidColorBrush Color="{DynamicResource SecondaryColorADark}"/>
							</Border.Background>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true">
							</Trigger>
							<Trigger Property="IsChecked" Value="true">
								
								<Setter Property="Margin" TargetName="Chrome" Value="0"/>
								<Setter Property="Background" TargetName="Chrome">
									<Setter.Value>
										<SolidColorBrush Color="{DynamicResource SecondaryColorALighter}"/>
									</Setter.Value>
								</Setter>
								<Setter Property="BorderBrush" TargetName="Chrome">
									<Setter.Value>
										<SolidColorBrush Color="White"/>
									</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RadioButtonStyle3" TargetType="{x:Type ToggleButton}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="Black"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RadioButton}">
						<Grid>
							<Rectangle x:Name="BackRectangle" Margin="1" RadiusX="7.5" RadiusY="7.5" StrokeThickness="2">
								<Rectangle.Fill>
									<SolidColorBrush Color="{DynamicResource SecondaryColorBLight}"/>
								</Rectangle.Fill>
                            	
							</Rectangle>
                            <Image x:Name="image" HorizontalAlignment="Left" VerticalAlignment="Top" Source="Images/flagblue-16.png" Width="16" Height="16" Margin="8,8,0,0" Visibility="Hidden"></Image>
							<Border x:Name="Chrome"  SnapsToDevicePixels="true" BorderThickness="0" CornerRadius="5" Padding="1" Margin="19.25,0,0,0">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="6,3,5,3"/>
							</Border>
                        </Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Stroke" TargetName="BackRectangle" Value="White"/>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Fill" TargetName="BackRectangle">
									<Setter.Value>
										<SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
									</Setter.Value>
								</Setter>
								<Setter Property="Foreground" Value="White" />
								<Setter Property="Stroke" TargetName="BackRectangle" Value="White"/>
								<Setter Property="Visibility" TargetName="image" Value="Visible"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<DataTemplate x:Key="SmallImageItemTemplate">
			<Grid>
				<Image Width="16" Height="16" Source="{Binding Converter={StaticResource StringImageSmallIconConverter}}"/>
			</Grid>
		</DataTemplate>
		<Style x:Key="ListBoxItemStyle2" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="2"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ListBoxItemStyle3" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="2"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>
    <Border CornerRadius="6" BorderThickness="2" Margin="0,0,0,0" KeyDown="Border_KeyDown" BorderBrush="White">
        <Border.Background>
    		<SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
    	</Border.Background>
    	<Grid>
    		<Grid.ColumnDefinitions>
    			<ColumnDefinition Width="187.452"/>
    			<ColumnDefinition Width="4"/>
    			<ColumnDefinition/>
    		</Grid.ColumnDefinitions>
    		<Grid.RowDefinitions>
    			<RowDefinition Height="27.5"/>
    			<RowDefinition Height="26.119"/>
    			<RowDefinition/>
    			<RowDefinition Height="29.15"/>
    			<RowDefinition Height="66"/>
    			<RowDefinition Height="3"/>
    		</Grid.RowDefinitions>
            <TextBox x:Name="ConditionFilterText" Margin="8,0.5,0,3.79" TextWrapping="Wrap" VerticalContentAlignment="Top"   d:LayoutOverrides="Height" TextChanged="ConditionFilterText_TextChanged" Grid.Row="1" KeyDown="ConditionFilterText_KeyDown" 
				/>
        	
    		<ListBox x:Name="ConditionsListBox" Margin="8,0.21,0,0" Grid.Row="2" ItemsSource="{Binding}" ItemTemplate="{DynamicResource ConditionItemTemplate}" ItemContainerStyle="{DynamicResource ListBoxItemStyle1}" MouseDoubleClick="ConditionsListBox_MouseDoubleClick" HorizontalContentAlignment="Stretch" Grid.RowSpan="2"
				/>
    		<Button Content="Add" Margin="0,0,87,5" Grid.Row="4" Grid.Column="2" Click="Button_Click" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="75"/>
    		<Grid Grid.Column="2" Margin="0,0,8,0" Grid.Row="2"  Grid.RowSpan="2" >
                <Grid.RowDefinitions>
                	<RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <FlowDocumentScrollViewer x:Name="ConditionFlowDocumentViewer" FontSize="16">
        			<FlowDocument x:Name="ConditionDocument" FontFamily="Segoe UI" FontSize="12" Background="White" PagePadding="6" Foreground="Black">
        				<Paragraph/>
        			</FlowDocument>
        		</FlowDocumentScrollViewer>
                <Grid x:Name="CustomControlsGrid" Grid.Row="1" >
                     <Button x:Name="EditCustomCondition" HorizontalAlignment="Right" VerticalAlignment="Center" Width="75" Margin="0,5,79,0" Click="EditCustomCondition_Click">
                    Edit
                    </Button>
                     <Button x:Name="NewCustomCondition" HorizontalAlignment="Right" VerticalAlignment="Center" Width="75" Margin="0,5,0,0" Click="NewCustomCondition_Click">
                    New
                    </Button>
                </Grid>
                
            </Grid>
    		<Border BorderThickness="1" Margin="8,4,-109.465,1.04" Grid.Row="4" Grid.ColumnSpan="2" CornerRadius="6">
    			<Border.Background>
    				<SolidColorBrush Color="{DynamicResource PrimaryColorMedium}"/>
    			</Border.Background>
    			<Grid Style="{DynamicResource GridStyle1}">
    				<TextBlock TextWrapping="Wrap" Text="Duration:" HorizontalAlignment="Left" Margin="6.365,9,0,0" VerticalAlignment="Top"/>
    				<RadioButton x:Name="UnlimtedRadioButton" Content="Unlimited" HorizontalAlignment="Right" Margin="0,2,8,0" IsChecked="True" GroupName="ConditionDuration" VerticalAlignment="Top" Style="{DynamicResource RadioButtonStyle3}" Height="29.96" Width="95.417" HorizontalContentAlignment="Left"/>
    				<RadioButton x:Name="RoundsRadioButton" Margin="59.242,2,0,0" HorizontalAlignment="Left" Width="126.258" GroupName="ConditionDuration" VerticalAlignment="Top" Style="{DynamicResource RadioButtonStyle3}">
    					<Grid Width="94.543">
    						<Grid.RowDefinitions>
    							<RowDefinition Height="0.759*"/>
    							<RowDefinition Height="0.241*"/>
    						</Grid.RowDefinitions>
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition Width="25"/>
    							<ColumnDefinition/>
    						</Grid.ColumnDefinitions>
    						<TextBox x:Name="ConditionDurationText" VerticalAlignment="Center" Text="1" Grid.Column="0" TextAlignment="Center" TextChanged="ConditionDurationText_TextChanged">
    							<TextBox.BorderBrush>
    								<LinearGradientBrush EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
    									<GradientStop Color="Black" Offset="0.05"/>
    									<GradientStop Color="#FF606162" Offset="0.07"/>
    									<GradientStop Color="#FF959595" Offset="1"/>
    								</LinearGradientBrush>
    							</TextBox.BorderBrush>
    						</TextBox>
    						<TextBlock Text="Round(s)" Grid.Column="1" Margin="8,3,12.5,1.333" Grid.RowSpan="2"/>
    					</Grid>
    				</RadioButton>
    				<TextBlock HorizontalAlignment="Left" Margin="16.872,0,0,5" TextWrapping="Wrap" Text="Details:" VerticalAlignment="Bottom"/>
                    <TextBox TextWrapping="Wrap"  VerticalContentAlignment="Top" Margin="59.242,0,86.5,2" VerticalAlignment="Bottom" MaxLength="20" MaxLines="1" Name="DetailsTextBox" />
    			     
                </Grid>
    		</Border>
            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="2">
            <RadioButton x:Name="ConditionsRadioButton" Content="Conditions" Grid.Column="2" HorizontalAlignment="Left" Grid.Row="1" Style="{DynamicResource ToggleButtonStyle1}" IsChecked="True" VerticalAlignment="Top" Height="21.96" Checked="ConditionsRadioButton_Checked" Unchecked="ConditionsRadioButton_Checked"/>
            <RadioButton x:Name="SpellsRadioButton" Content="Spells" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Left" Style="{DynamicResource ToggleButtonStyle1}" Width="52.61" VerticalAlignment="Top" Height="22.46"  Checked="ConditionsRadioButton_Checked" Unchecked="ConditionsRadioButton_Checked" />
            <RadioButton x:Name="AfflictionsRadioButton" Content="Afflictions" Grid.Column="2" Grid.Row="1" Style="{DynamicResource ToggleButtonStyle1}" VerticalAlignment="Top" Height="22.46"  Checked="ConditionsRadioButton_Checked" Unchecked="ConditionsRadioButton_Checked" />
            <RadioButton x:Name="CustomRadioButton" Content="Custom" Grid.Column="2" Grid.Row="1" Style="{DynamicResource ToggleButtonStyle1}" VerticalAlignment="Top" Height="22.46"  Checked="ConditionsRadioButton_Checked" Unchecked="ConditionsRadioButton_Checked" HorizontalAlignment="Right" Width="53.36" />
            <RadioButton x:Name="FavoritesRadioButton" Content="Favorites" Grid.Column="2" Grid.Row="1" Style="{DynamicResource ToggleButtonStyle1}" VerticalAlignment="Bottom" Height="22.46"  Checked="ConditionsRadioButton_Checked" Unchecked="ConditionsRadioButton_Checked" HorizontalAlignment="Right" Width="55" Margin="0,0,0,3.659" />
            </StackPanel >
            <Button x:Name="CancelButton" Content="Cancel" HorizontalAlignment="Right" Margin="0,0,8,5" Width="75" Grid.Row="4" Grid.Column="2" VerticalAlignment="Bottom" IsCancel="True"/>
            <Border BorderThickness="1" Margin="8,0,39,0" Grid.ColumnSpan="3" MouseDown="Border_MouseDown">
            	<Border.Background>
            		<SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}"/>
            	</Border.Background>
            	<TextBlock TextWrapping="Wrap" Text="Add Condition" HorizontalAlignment="Left" Foreground="White" FontSize="16" FontWeight="Bold" Margin="-1,-1,0,1.887" d:LayoutOverrides="HorizontalAlignment" IsHitTestVisible="False">
            		<TextBlock.Effect>
            			<DropShadowEffect/>
            		</TextBlock.Effect>
            	</TextBlock>
            </Border>
            <Button Focusable="False" Height="22" HorizontalAlignment="Right" IsTabStop="False" Margin="0,0,8,0" Name="CloseButton" RenderTransformOrigin="0.812,0.682" VerticalAlignment="Bottom" Width="24" Grid.Column="2" Click="CloseButton_Click">
                <Button.Background>
                    <SolidColorBrush Color="{DynamicResource SecondaryColorBDarker}" />
                </Button.Background>
                <Button.Effect>
                    <DropShadowEffect ShadowDepth="0" />
                </Button.Effect>
                <Grid Height="16" Width="16">
                    <Path Data="M0,0 L1,1 M0,1 L1,0" Margin="1.582,2.039,0.418,-0.039" Stretch="Fill" Stroke="#97CBC7C7" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeThickness="3" />
                    <Path Data="M0,0 L1,1 M0,1 L1,0" Margin="1.167,1.375,0.833,0.625" Stretch="Fill" Stroke="White" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeThickness="3" />
                </Grid>
            </Button>
            <Button x:Name="AddToFavoritesButton" Content="Add to Favorites" Grid.Column="2" HorizontalAlignment="Right" Margin="0,8,8,0" Grid.Row="4" Width="154" Click="AddToFavoritesButton_Click" VerticalAlignment="Top"/>
        </Grid>
    </Border>
</Window>
