<Window 
           xmlns:CombatManager="clr-namespace:CombatManager"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:CombatManagerMaps="clr-namespace:CombatManager.Maps" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:System="clr-namespace:System;assembly=mscorlib" mc:Ignorable="d"  x:Class="CombatManager.Maps.GameMapDisplayWindow" 
       
        xmlns:xwpf="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"  
        Title="Game Map" Height="545.25" Width="901" DataContext="{Binding}"  Icon="/Images/Globe.ico" >
    <Window.Resources>

        <ContextMenu x:Key="FogOfWarContextMenu">

            <MenuItem Header="Hide All" Click="HideAll_Click"/>
            <MenuItem Header="Show All" Click="ShowAll_Click"/>
        </ContextMenu>
        <ContextMenu x:Key="MarkerContextMenu">

            <MenuItem x:Name="ShapeMenuItem" Header="Shape">
                <MenuItem Header="Square" Tag="0" Click="Shape_Click"/>
                <MenuItem Header="Diamond" Tag="1" Click="Shape_Click"/>
                <MenuItem Header="Circle" Tag="2" Click="Shape_Click"/>
                <MenuItem Header="Star" Tag="3" Click="Shape_Click"/>
                <MenuItem Header="Target" Tag="4" Click="Shape_Click"/>
            </MenuItem>
            <MenuItem Header="Color">
                <MenuItem Header="Red" Background="Red"  Foreground="White"  Click="Color_Click"/>
                <MenuItem Header="Orange" Background="Orange"   Click="Color_Click"/>
                <MenuItem Header="Yellow" Background="Yellow"   Click="Color_Click"/>
                <MenuItem Header="Green" Background="Green" Foreground="White"   Click="Color_Click"/>
                <MenuItem Header="Blue" Background="Blue"  Foreground="White"  Click="Color_Click"/>
                <MenuItem Header="Indigo" Background="Indigo" Foreground="White"  Click="Color_Click"/>
                <MenuItem Header="Violet" Background="Violet"  Click="Color_Click"/>
            </MenuItem>
            <MenuItem Header="Erase" Tag="-1" Click="Shape_Click">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/eraser-48.png"/>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
        <ContextMenu x:Key="MapContextMenu">
            <MenuItem x:Name="NameBoxItem">
                <MenuItem.Header>
                    <TextBox Width="150" Text="{Binding Data, UpdateSourceTrigger=PropertyChanged}"/>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem x:Name="ToggleFogItem" Header="Toggle Fog" Click="ToggleFogItem_Click">
                <MenuItem.Icon>
                    <Grid>
                        <StackPanel Orientation="Horizontal" ToolTip="Fog of War">
                            <Image Source="/CombatManager;component/Images/blacksquare-16.png"/>
                        </StackPanel>
                        <TextBlock Text="F" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="DeleteMarkerItem" Header="Delete Marker" Click="DeleteMarkerItem_Click">
                <MenuItem.Icon>
                    <Image Source="/CombatManager;component/Images/delete-16.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="ShowControlsItem" Header="Show Controls" Click="ShowControlsItem_Click">
            </MenuItem>
            <MenuItem x:Name="HideControlsItem" Header="Hide Controls" Click="HideControlsItem_Click">
            </MenuItem>
            <MenuItem x:Name="EnterFullScreenItem" Header="Enter Full Screen" Click="EnterFullScreenItem_Click">
            </MenuItem>
            <MenuItem x:Name="ExitFullScreenItem" Header="Exit Full Screen" Click="ExitFullScreenItem_Click">
            </MenuItem>
        </ContextMenu>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" Margin="2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton2" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{StaticResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource NormalBorderBrush}">
                            <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                                <Path x:Name="arrow" Data="M0,0 L4,6 L8,0 Z" Height="6.875" Stretch="Fill" Width="8.208" Fill="#FF474747" />

                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Background="Black">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" OpacityMask="Black">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton2}" BorderBrush="{DynamicResource NormalBorderBrush}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton2}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="GameDisplayComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Grid x:Name="RootGrid">
        <Grid.LayoutTransform>
            <TransformGroup>
                <ScaleTransform  x:Name="RootScaleTransform" CenterX=".5" CenterY=".5"/>
                <SkewTransform/>
                <RotateTransform  x:Name="LayoutRootRenderRotateTransform" />
            </TransformGroup>
        </Grid.LayoutTransform>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50" />
            <ColumnDefinition Width="371.867"/>
            <ColumnDefinition Width="26.133"/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Rectangle Grid.Column="1" StrokeThickness="1  " Grid.ColumnSpan="3" Margin="0">
            <Rectangle.Fill>
                <SolidColorBrush Color="{DynamicResource SecondaryColorAMedium}"/>
            </Rectangle.Fill>
        </Rectangle>
        <Grid x:Name="NameGrid" HorizontalAlignment="Left" Height="31" VerticalAlignment="Top" Width="259" Grid.Column="1">
            <Rectangle HorizontalAlignment="Left" Width="293">
                <Rectangle.Fill>
                    <SolidColorBrush Color="{DynamicResource SecondaryColorAMedium}"/>
                </Rectangle.Fill>
            </Rectangle>
            <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="10,7,0,8" TextWrapping="Wrap" Text="Name" Width="35" FontWeight="Bold"/>
            <TextBox x:Name="MapNameTextBox" Margin="50,3,0,3" TextWrapping="Wrap" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" HorizontalAlignment="Left" Width="204" MaxLines="1"/>
        </Grid>
        <Grid x:Name="ScaleGrid" Height="31" VerticalAlignment="Top" Grid.Column="1" Margin="250,0,0,0" HorizontalAlignment="Left" MouseLeftButtonDown="ScaleGrid_MouseLeftButtonDown" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="123"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Rectangle HorizontalAlignment="Left" Height="31" VerticalAlignment="Top" Width="123" d:IsHidden="True">
                <Rectangle.Fill>
                    <SolidColorBrush Color="{DynamicResource SecondaryColorAMedium}"/>
                </Rectangle.Fill>
            </Rectangle>
            <TextBox HorizontalAlignment="Left" Margin="54,3,0,3" x:Name="ScaleBox" Width="52" Text="{Binding Scale, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" />
            <TextBlock HorizontalAlignment="Left" Margin="8,7,0,8" x:Name="textBlock1" Width="30" FontWeight="Bold" ><Run Text="Scale"/></TextBlock>
            <Button x:Name="ScaleUpButton" Content="+" HorizontalAlignment="Left" Height="11" Margin="41,11,0,0" VerticalAlignment="Top" Width="11" VerticalContentAlignment="Top" Padding="0.5,-5,1,1" PreviewMouseDown="ScaleUpButton_MouseDown" PreviewMouseUp="ScaleUpButton_MouseUp"/>
            <Button x:Name="ScaleDownButton" Content="-" HorizontalAlignment="Left" Height="11" Margin="108,11,0,0" VerticalAlignment="Top" Width="11" VerticalContentAlignment="Top" Padding="0.5,-5,1,1" PreviewMouseDown="ScaleDownButton_MouseDown" PreviewMouseUp="ScaleUpButton_MouseUp"/>
            <Button x:Name="RotateButton"  HorizontalAlignment="Left" VerticalAlignment="Center" Width="auto" VerticalContentAlignment="Top" Grid.Column="1" Click="RotateButton_Click" Height="25">
                <Image Source="/CombatManager;component/Images/RotateArrow.png"/>
            </Button>

        </Grid>
        <Grid x:Name="GridSizeGrid" Grid.Column="2" Height="auto" Margin="3,0,0,0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="73"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="239.8"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Rectangle Height="auto" StrokeThickness="1  " Grid.ColumnSpan="6" Margin="0,0,0,0">
                <Rectangle.Fill>
                    <SolidColorBrush Color="{DynamicResource PrimaryColorLight}"/>
                </Rectangle.Fill>
            </Rectangle>
            <Button Height="25" Margin="4,3,0,0" x:Name="SetOriginButton" VerticalAlignment="Top" Click="SetOriginButton_Click" Padding="4,1"  Width="28" HorizontalAlignment="Left" FontSize="14" Grid.Column="1" >
                <Button.ToolTip>
                    <TextBlock><Run Text="Set Grid Anchor"/><LineBreak /><Run Text="Choose any point where two gridlines meet"/></TextBlock>
                </Button.ToolTip>
                <StackPanel>
                    <TextBlock Foreground="{DynamicResource TextOnPrimaryDarkerBrush}"><Run Text="⚓"/></TextBlock>
                </StackPanel>
            </Button>
            <Button Height="25" Margin="39,3,0,0" x:Name="SetCornerButton" VerticalAlignment="Top" Click="SetCornerButton_Click" Padding="4,1"  Width="28" HorizontalAlignment="Left" FontSize="14" Grid.Column="1" >
                <Button.ToolTip>
                    <TextBlock><Run Text="Set Grid Corner"/><LineBreak /><Run Text="Choose the corner of the grid, relative to the anchor."/></TextBlock>
                </Button.ToolTip>
                <StackPanel>
                    <Path Stroke="{DynamicResource TextOnPrimaryDarkerBrush}" StrokeThickness="2" >
                        <Path.Data>
                            <PathGeometry Figures="M 17,0 L 17,17 L 0,17" />
                        </Path.Data>
                    </Path>
                </StackPanel>
            </Button>
            <ToggleButton Height="25" Margin="2.8,3,0,0" x:Name="SquareCellButton" VerticalAlignment="Top" Padding="4,1"  Width="auto" HorizontalAlignment="Left" FontSize="14" Grid.Column="3" IsChecked="{Binding SquareCellSize}" Background="{DynamicResource SecondaryColorADarkBrush}">
                <ToggleButton.ToolTip>
                    <TextBlock><Run Text="MakeSquare"/><LineBreak /><Run Text="Keep Grid Square"/></TextBlock>
                </ToggleButton.ToolTip>

                <StackPanel>
                    <Path Stroke="Black" StrokeThickness="2" >
                        <Path.Data>
                            <PathGeometry Figures="M 17,0 L 17,17 L 0,17 L 0,0 Z" />
                        </Path.Data>
                    </Path>
                </StackPanel>
            </ToggleButton>
            <Ellipse HorizontalAlignment="Left" Margin="2.8,6,0,6" StrokeThickness="2" Width="19" Grid.Column="4">
                <Ellipse.Fill>
                    <SolidColorBrush Color="{DynamicResource PrimaryColorLighter}"/>
                </Ellipse.Fill>
                <Ellipse.Stroke>
                    <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                </Ellipse.Stroke>
            </Ellipse>
            <Ellipse Margin="70.8,6,0,6" StrokeThickness="2" HorizontalAlignment="Left" Width="19" Grid.Column="4">
                <Ellipse.Fill>
                    <SolidColorBrush Color="{DynamicResource PrimaryColorLighter}"/>
                </Ellipse.Fill>
                <Ellipse.Stroke>
                    <SolidColorBrush Color="{DynamicResource PrimaryColorDarker}"/>
                </Ellipse.Stroke>
            </Ellipse>
            <TextBox Margin="25.8,3,0,1" x:Name="textBox1" VerticalContentAlignment="Center" Text="{Binding CellSizeWidth, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Width="41" Grid.Column="4" ToolTip="Grid Width in Pixels" />
            <TextBlock HorizontalAlignment="Left" Margin="3,6,0,4" x:Name="textBlock2" Text="Grid Pixels" Width="auto" FontWeight="Bold" Grid.Column="2" Foreground="{DynamicResource TextOnPrimaryDarkerBrush}" />
            <TextBlock HorizontalAlignment="Left" Margin="75.8,7,0,4" x:Name="textBlock3" Text="H" FontWeight="Bold" Grid.Column="4" Width="9" Foreground="{DynamicResource TextOnPrimaryDarkerBrush}" />
            <TextBox HorizontalAlignment="Left" Margin="93.8,3,0,1" x:Name="textBox2" Text="{Binding CellSizeHeight, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Width="41" Grid.Column="4" ToolTip="Grid Height in Pixels" />
            <TextBlock HorizontalAlignment="Left" Margin="5.8,7,0,4" x:Name="textBlock3_Copy" Text="W" FontWeight="Bold" Grid.Column="4" Width="12" Foreground="{DynamicResource TextOnPrimaryDarkerBrush}" />
            <CheckBox x:Name="ShowGridCheckBox" Content="Grid" HorizontalAlignment="Left" Margin="8,8,0,0" VerticalAlignment="Top" Click="ShowGridCheckBox_Click" IsChecked="{Binding ShowGrid}" FontWeight="Bold" Height="15" Width="44" Foreground="{DynamicResource TextOnPrimaryDarkerBrush}"/>
            <xwpf:ColorPicker HorizontalAlignment="Left" Height="26" Margin="139.8,3,0,0"  VerticalAlignment="Top" Width="98" SelectedColor="{Binding GridColor}" ToolTip="Grid Color" Grid.Column="4"/>
        </Grid>

        <Rectangle Margin="0,0,0,-2" Grid.Row="1">
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop Color="#FF969696" Offset="0"/>
                    <GradientStop Color="#FFC0BDBD" Offset="1"/>
                    <GradientStop Color="#FFBFBFBF" Offset="0.022"/>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Button Height="22" Margin="2,36.8,0,0" x:Name="SetFogButton" VerticalAlignment="Top" Padding="4,1" Grid.Row="1"  Style="{DynamicResource SimpleButton}" Click="SetFogButton_Click" HorizontalAlignment="Left" Width="28" ToolTip="Set Fog of War" >
            <Grid>
                <StackPanel Orientation="Horizontal" ToolTip="Fog of War">
                    <Image Source="/CombatManager;component/Images/blacksquare-16.png"/>
                </StackPanel>
                <TextBlock Text="F" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>

        </Button>
        <Button Height="22" Margin="30,36.8,0,0" x:Name="FogOptionsButton" VerticalAlignment="Top" Padding="4,1" Grid.Row="1"  Style="{DynamicResource SimpleButton}" Click="FogOptionsButton_Click" ToolTip="Fog of War Options" HorizontalAlignment="Left" Width="18" >
            <Path Data="M0,0 L4,6 L8,0 Z" Height="6.875" Stretch="Fill" Width="8.208" Fill="#FF474747" />


        </Button>
        <Button Height="22" Margin="2,63.8,0,0" x:Name="SetMarkerButton" VerticalAlignment="Top" Padding="4,1" Grid.Row="1"  Style="{DynamicResource SimpleButton}" Click="SetMarkerButton_Click" HorizontalAlignment="Left" Width="28" ToolTip="Set Markers" >

            <Path x:Name="MarkerButtonPath"  Data="M0,0 L0,1 L1,1 L1,0 Z" Height="16" Stretch="Fill" Width="16" Fill="#FF474747" />

        </Button>
        <Button Height="22" Margin="30,63.8,0,0" x:Name="MarkerOptionsButton" VerticalAlignment="Top" Padding="4,1" Grid.Row="1"  Style="{DynamicResource SimpleButton}" Click="MarkerOptionsButton_Click" HorizontalAlignment="Left" Width="18" ToolTip="Marker Options" >
            <Path Data="M0,0 L4,6 L8,0 Z" Height="6.875" Stretch="Fill" Width="8.208" Fill="#FF474747" />

        </Button>
        <Rectangle HorizontalAlignment="Left" StrokeThickness="1  " Width="50">
            <Rectangle.Fill>
                <SolidColorBrush Color="{DynamicResource SecondaryColorAMedium}"/>
            </Rectangle.Fill>
        </Rectangle>
        <Button Height="22" Margin="10,4,10,0" x:Name="ShowPlayerWindowButton" VerticalAlignment="Top" Click="ShowPlayerWindowButton_Click" Padding="4,1"  Style="{DynamicResource SimpleButton}" ToolTip="Show Player Window" >
            <StackPanel Orientation="Horizontal">
                <Image Source="/CombatManager;component/Images/screen-16.png"/>
            </StackPanel>

        </Button>
        <ScrollViewer Margin="0" x:Name="MapScrollViewer" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Grid.ColumnSpan="3" Grid.Column="1" CanContentScroll="False" PreviewMouseWheel="MapScrollViewer_PreviewMouseWheel" Grid.Row="1">
            <Grid x:Name="MapScrollViewerGrid" Background="Black" MouseRightButtonUp="MapScrollViewerGrid_MouseRightButtonUp">

                <Image Height="100" x:Name="MapImageControl" Stretch="Fill" Width="100" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,0,0" />
                <CombatManagerMaps:FogOfWarControl Height="100" x:Name="FogOfWar" Width="100" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,0,0" />
                <Canvas Height="100" x:Name="MapGridCanvas" Width="100" HorizontalAlignment="Left" VerticalAlignment="Top" MouseDown="MapGridCanvas_MouseDown" Margin="0,0,0,0"  MouseUp="MapGridCanvas_MouseUp" MouseMove="MapGridCanvas_MouseMove" MouseRightButtonDown="MapGridCanvas_MouseRightButtonDown" MouseRightButtonUp="MapGridCanvas_MouseRightButtonUp" MouseLeftButtonDown="MapGridCanvas_MouseLeftButtonDown" MouseLeftButtonUp="MapGridCanvas_MouseLeftButtonUp" MouseWheel="MapGridCanvas_MouseWheel" />
            </Grid>
        </ScrollViewer>
        <ComboBox x:Name="BrushSizeComboBox" HorizontalAlignment="Left" Margin="2,90.8,0,0" Grid.Row="1" VerticalAlignment="Top" Width="46" SelectedIndex="0"  Style="{DynamicResource GameDisplayComboBoxStyle}" ToolTip="Brush Size" SelectionChanged="BrushSizeComboBox_SelectionChanged"  >
            <ComboBoxItem Content="1"/>
            <ComboBoxItem Content="2"/>
            <ComboBoxItem Content="3"/>
            <ComboBoxItem Content="4"/>
            <ComboBoxItem Content="5"/>
            <ComboBoxItem Content="6"/>
            <ComboBoxItem Content="7"/>
            <ComboBoxItem Content="8"/>
            <ComboBoxItem Content="9"/>
            <ComboBoxItem Content="10"/>
        </ComboBox>
    </Grid>
</Window>
